<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>最小堆与最大堆</title>
    <link href="/%E6%9C%80%E5%B0%8F%E5%A0%86%E4%B8%8E%E6%9C%80%E5%A4%A7%E5%A0%86/"/>
    <url>/%E6%9C%80%E5%B0%8F%E5%A0%86%E4%B8%8E%E6%9C%80%E5%A4%A7%E5%A0%86/</url>
    
    <content type="html"><![CDATA[<p>priority_queue的底层是vector</p><p>queue的底层是deque</p><p>堆是完全二叉树。</p><p>最小堆就是父节点小于子节点。</p><p>插入时每次加到最后，再从底向上更新一次。</p><p>删除时删除根，并将最后一个元素取代掉根，从底向上更新一次。</p><p>更新时是对于每一个节点所对应的堆进行更新。</p><p>插入就是加到最后，向上更新</p><p>删除就是交换根和最后一个元素，然后删掉“根”，向下更新</p><p>priority_queue传入的比较函数实际上是一个类型，是一个仿函数。</p><p>当一次性通过n个元素建堆时应该从下往上down（）,这样的复杂度可以降到O(n)。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>数学建模</title>
    <link href="/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    <url>/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/</url>
    
    <content type="html"><![CDATA[<h3 id="流程">流程</h3><ol><li>问题假设（要全面）</li><li>模型建立</li><li>模型求解</li><li>模型评价</li></ol><h3 id="问题类型">问题类型</h3><ol><li><p>预测类</p><p>用以往的数据来预测将来的数据</p></li><li><p>评价类</p><p>通过建立评价指标体系来评价一个东西</p></li><li><p>机理分析</p></li><li><p>优化类</p><p>最优化理论，目标函数，变量，约束</p></li></ol><h3 id="Matlab">Matlab</h3><table><thead><tr><th>[]</th><th>矩阵，其中的数值可以是矩阵</th></tr></thead><tbody><tr><td>；</td><td>换行</td></tr><tr><td>，或者直接空格</td><td>分列</td></tr><tr><td>while condition</td><td></td></tr><tr><td>end</td><td>循环</td></tr><tr><td>if condition</td><td></td></tr><tr><td>end</td><td>条件</td></tr><tr><td>diag(行向量)</td><td>对角阵</td></tr><tr><td>zeros(x,y)</td><td>x行y列的0矩阵</td></tr><tr><td>ones(x,y)</td><td>同上</td></tr><tr><td>rand(x,y)</td><td>同上，不过数据是随机的</td></tr><tr><td>eye(x)</td><td>大小为x的单位矩阵</td></tr><tr><td>clear</td><td>清屏</td></tr><tr><td>plot(x,y,点的图案样式)</td><td>画点</td></tr><tr><td>%</td><td>注释</td></tr><tr><td>，</td><td>，</td></tr><tr><td>function 返回值(如果是多个，则用一个矩阵返回)=函数名(参数)</td><td>函数</td></tr><tr><td>&amp;&amp;</td><td></td></tr><tr><td>Inf</td><td>无穷大</td></tr><tr><td>pi,sin,cos</td><td></td></tr><tr><td>矩阵(m,n)</td><td>矩阵中的第m行n列的那个元素</td></tr><tr><td>矩阵(m:n,m1:n1)</td><td>矩阵中m行到n行其m1到n1列的元素，:前后可省略</td></tr><tr><td>find(矩阵判断条件)</td><td>对矩阵中的每一个元素进行这个判断条件，返回满足条件的元素的位置</td></tr><tr><td>isempty</td><td></td></tr><tr><td>nargin</td><td>函数的输入参数数量</td></tr><tr><td>disp(变量/常量)</td><td>输出</td></tr><tr><td>size(矩阵)</td><td>返回一个1*2的矩阵，代表其行与列的阶数</td></tr><tr><td>eig(矩阵)</td><td>返回一个1*2的矩阵，第一个为特征向量的矩阵，第二个为特征值的矩阵，是对角阵，顺序一致</td></tr><tr><td>clc,clear</td><td>清空</td></tr><tr><td>repeat(矩阵,n,m)</td><td>将矩阵复制n行m列，返回一个矩阵</td></tr><tr><td>min/max(矩阵)</td><td>找矩阵中最小/大的</td></tr><tr><td>norm(矩阵)</td><td>平方和的根号，不知道是不是限制一行或一列</td></tr><tr><td>sort(矩阵,’descend’/’ascend’)</td><td>返回一个1*2的矩阵，第一个为排好序的矩阵，第二个是排好序的原来的序号</td></tr><tr><td>cumsum(矩阵)</td><td>对矩阵的行一次累加</td></tr><tr><td>mean(矩阵，参数）</td><td>求平均，当参数为2时为每行求平均</td></tr><tr><td>figure</td><td>创建一个新的视图</td></tr></tbody></table><h3 id="数学概念">数学概念</h3><p>剩余变量：通过引入一个变量来将不等式约束转为等式约束，如<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>x</mi><mn>2</mn></msub><mo>≤</mo><mn>10</mn><mtext>，则</mtext><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><msub><mi>x</mi><mn>3</mn></msub><mo>=</mo><mn>10</mn><mtext>，</mtext><mi>x</mi><mn>3</mn><mo>≥</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">x_1+x_2\le10，则x_1+x_2+x_3=10，x3\ge0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.786em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord">10</span><span class="mord cjk_fallback">，则</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord">10</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal">x</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>。</p><h3 id="线性规划">线性规划</h3><p>目标函数是变量的线性表达式，变量有线性约束，使目标函数最优化。</p><p>线性规划标准式：</p><p><img src="/image/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1Untitled.png" alt=""></p><p>下面三个全是约束条件。A，Aeq都是矩阵，而剩下的全是列向量，当某一部分不存在约束的时候直接取空向量或者空矩阵即可。</p><p>求解命令：</p><p><img src="/image/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1Untitled%201.png" alt=""></p><p>若要求最大值或者大于等于时通过取负来解决。</p><p><strong>转换</strong></p><ol><li><p>有时候式子并不是直接的线性表达式，此时可以通过转化来操作。</p><p>如绝对值相加可以设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>=</mo><msub><mi>u</mi><mi>i</mi></msub><mo>−</mo><msub><mi>v</mi><mi>i</mi></msub><mo separator="true">,</mo><mtext> </mtext><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mo>=</mo><msub><mi>u</mi><mi>i</mi></msub><mo>+</mo><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i=u_i-v_i,\ |x_i|=u_i+v_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p></li><li><p>将多目标规划转化为线性规划，如将目标转换为约束（即枚举约束情况来看总体的变化来找总体的最优）或将多目标转换为单目标</p></li></ol><h3 id="linprog">linprog</h3><p>实际上linprog还会返回第三个值，若为负，则表示不存在可行解。</p><p>linprog还可以传入一个参数，option来控制其迭代设置（linprog求解过程是一个迭代过程）。</p><p>option是一个optimset返回对象。</p><p>optimset(oldoption(可省略),’param1’,value1,’param2’,……)。将oldoption中对应的param设置值。</p><table><thead><tr><th>Display</th><th>off不显示输出。iter每次迭代显示结果。final值显示最终结果。notify只在函数不收敛的时候显示结果</th></tr></thead><tbody><tr><td>MaxFunEvals</td><td>函数中求值运算的最高次数。(一次迭代可能多次求值？)</td></tr><tr><td>MaxIter</td><td>最大迭代次数</td></tr><tr><td>TolFun</td><td>函数迭代的终止误差</td></tr><tr><td>TolX</td><td>结束迭代的X值？</td></tr></tbody></table><h3 id="整数规划（可以直接使用intlinprog-第二个参数表示第几个x为整数）">整数规划（可以直接使用intlinprog,第二个参数表示第几个x为整数）</h3><p>intlinprog好像在2014版的matlab就推出了。</p><p>当线性规划中的变量中部分（混合）或者全部（纯）被限制为整数时。</p><p>整数规划对应的线性规划被称为松弛规划。</p><ol><li><p>暴力所有可行整数解（当可行解较少时）</p></li><li><p>分支定界法（已实现）</p><p>对于求出来的松弛规划的解，选择第一个非整数变量，通过增加其向上取整或向下取整的约束条件来缩小可行域，对于新算出来的解，同样选择第一个非整数变量（递归），直到所有解都是整数，以求出可行整数解。如对于求出来<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mn>1</mn><mo>=</mo><mn>2.3</mn><mo separator="true">,</mo><mtext>则可添加</mtext><msub><mi>x</mi><mn>1</mn></msub><mo>≤</mo><mn>2</mn><mtext>或者</mtext><msub><mi>x</mi><mn>1</mn></msub><mo>≥</mo><mn>3</mn><mtext>来</mtext></mrow><annotation encoding="application/x-tex">x1=2.3,则可添加x_1\le2或者x_1\ge3来</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathnormal">x</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">2.3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">则可添加</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord">2</span><span class="mord cjk_fallback">或者</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">3</span><span class="mord cjk_fallback">来</span></span></span></span>约束。如果求不出整数解，则换方法。</p><p>实际上就是找边界周围的整数解进行暴力，并不断依此来缩小边界。</p></li><li><p>割平面法（好愚蠢的算法，感觉劣与分支定界法）</p><p>只适用于存在不等式约束的时候？</p><p>基本思想：将没有整数可行解的平面切掉</p><p>原理：通过将不等式约束引入松弛变量化为等式约束，后通过将小数部分与整数部分分离，得出对于某一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的切割约束条件。</p><p>最后一步的右式由于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>i</mi></msub><mo>&lt;</mo><mn>1</mn><mi mathvariant="normal">&amp;</mi><mi mathvariant="normal">&amp;</mi><mo>∑</mo><mo stretchy="false">[</mo><msub><mi>f</mi><mrow><mi>i</mi><mi>k</mi></mrow></msub><mo stretchy="false">]</mo><msub><mi>x</mi><mi>k</mi></msub><mo>&gt;</mo><mn>0</mn><mo separator="true">,</mo><mtext>则右式</mtext><mo>≤</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">f_i&lt;1\&amp;\&amp;\sum[f_{ik}]x_k&gt;0,则右式\le0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1&amp;&amp;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">ik</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">则右式</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>。得出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的约束。</p><p><img src="/image/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1Untitled%202.png" alt=""></p><ol><li><p>匈牙利算法（用于0-1整数规划）</p><p>除去普通的人员分配问题（通过等式约束）（对于非标准的指派问题通过增加虚拟人或物及设定代价为无穷大来处理），还可以处理约束冲突问题（即当有两个约束是二选一的时候），此时可以引入一个新的0-1变量，表示使用哪一个约束条件，通过在约束右侧增加一个yM和(1-y)M，M是一个大数，来使得其在一个约束条件不起作用的时候另一个约束条件起作用。</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>A</mi><mn>1</mn></msub><mi>x</mi><mo>≤</mo><msub><mi>b</mi><mn>1</mn></msub><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo><mi>M</mi><mspace linebreak="newline"></mspace><msub><mi>A</mi><mn>2</mn></msub><mi>x</mi><mo>≤</mo><msub><mi>b</mi><mn>2</mn></msub><mo>+</mo><mi>y</mi><mi>M</mi></mrow><annotation encoding="application/x-tex">A_1x\le b_1+(1-y)M\\A_2x\le b_2+yM</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span></span></p><p>这一点可以推广，对于p个约束条件中选取q个约束条件。</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub><mi>x</mi><mo>≤</mo><msub><mi>b</mi><mi>i</mi></msub><mo>+</mo><mi>M</mi><msub><mi>y</mi><mi>i</mi></msub><mspace linebreak="newline"></mspace><mo>∑</mo><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><mi>p</mi><mo>−</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">A_ix\le b_i+My_i\\\sum y_i=p-q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.6em;vertical-align:-0.55em;"></span><span class="mop op-symbol large-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span></span></p><p>基本原理：应该是贪心</p><p>实现代码：复杂的一逼，傻逼匈牙利人（c++写完第二步就已经快100行了艹）</p><p>实际实现代码：普通的进行约束进行普通的线性规划就可以了（好像并没有限定必须是整数，但是可能这样求出来的必然是整数吧？当然也可以直接使用intlinprog更保险）</p></li></ol></li></ol><h3 id="非线性规划">非线性规划</h3><p>目标函数与约束条件中包含非线性函数。</p><p><img src="/image/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1Untitled%203.png" alt=""></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mtext>与</mtext><mi>c</mi><mi>e</mi><mi>q</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c(x)与ceq(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord cjk_fallback">与</span><span class="mord mathnormal">ce</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>是非线性函数的不等式约束与等式约束。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>可能是线性的也可能是非线性的。</p><p><img src="/image/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1Untitled%204.png" alt=""></p><p>fun是一个字符串，为一个function的名字。这个function输入参数是x列向量，返回值是fv。</p><p>nonlcon也是一样是一个字符串，为一个function的名字。这个function返回的是[g,h]，g是不等式约束，h是等式约束。g与h都是矩阵，也就是说，当有多个不等式或等式约束的时候，g与h可能都是多行的。</p><p>例：</p><p><img src="/image/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1Untitled%205.png" alt=""></p><p>x0是x的初值，这个rand就好了。</p><h3 id="二次规划">二次规划</h3><p>目标函数为二次，但约束都是线性，H是一个实对称矩阵。在输入H的时候要注意前面的0.5系数。</p><p><img src="/image/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1Untitled%206.png" alt=""></p><p><img src="/image/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1Untitled%207.png" alt=""></p><h3 id="多目标规划">多目标规划</h3><p>将多目标转化为单目标</p><ol><li>目标转约束</li><li>加权相加</li><li>分层序列法（求出一个的最优质值，然后在这个最优质值的限定下求下一个，往复）</li><li>让最糟糕的目标最不糟糕</li></ol><p>goal就是在分别不管其他目标下的最优值，一个列向量。weight各个目标的权重。fun是列向量，表示目标函数。</p><p><img src="/image/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1Untitled%208.png" alt=""></p><p><img src="/image/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1Untitled%209.png" alt=""></p><h3 id="层次分析法-主观赋权">层次分析法 (主观赋权)</h3><p>一个选择有多个因素决定，但因素之间的重要程度难以比较。</p><p>层次分析法通过两两比较的方式来确定因素之间的相对重要性。</p><p>主要用于选择与评判标准的制定上。</p><p>具体过程：</p><ol><li><p>建立层次分析模型</p><p>分为三层：目标层（要解决的问题），准则层（决定方案好坏的要素），方案层（所有可能的解决方案）</p></li><li><p>构造判断矩阵</p><p>即因素两两之间的重要程度的相对比较，1-9表示从一样重要，到一个因素比另一个因素极端重要。而其在矩阵对称位置的元素与本元素相乘为1，也就是说所有元素的范围都在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><mn>9</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{9}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">9</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>-9。</p><p>若是矩阵表示的这些相对关系连乘的结果与矩阵中的结果一致，则该矩阵为一致阵（有着如行列式等于1神奇的性质）。层次分析法允许不一致阵。</p></li><li><p>层次单排序及一致性检验</p><p>假设判断矩阵为n阶方阵，λ为判断矩阵的最大特征值，我们以λ-n的大小来衡量判断矩阵的不一致程度。</p><p>一致性指标：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>I</mi><mo>=</mo><mfrac><mrow><mi>λ</mi><mo>−</mo><mi>n</mi></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">CI=\frac{\lambda-n}{n-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2834em;vertical-align:-0.4033em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">λ</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4033em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>。越小越一致。</p><p>RI为随机一致性指标（可查）。</p><p>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>R</mi><mo>=</mo><mfrac><mrow><mi>C</mi><mi>I</mi></mrow><mrow><mi>R</mi><mi>I</mi></mrow></mfrac><mo>&lt;</mo><mn>0.1</mn></mrow><annotation encoding="application/x-tex">CR=\frac{CI}{RI}&lt;0.1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">CR</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2173em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8723em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.1</span></span></span></span>时，则通过一致性检验。</p><p>特征值所对应特征向量的每个数字代表该因素对总体的重要程度。</p><p>但实际计算非常麻烦，可以通过一些方法来简化计算，得出一个不是那么精确的值。</p><p>将判断矩阵的每一列列向量归一化（使这一列加起来为1），将归一化后的矩阵行元素相加，得到和列向量，将此作为特征向量，进行计算得λ。</p></li><li><p>层次总排序及一致性检验</p><p>将方案层对于每一个准则层的因素求一次单循环，假设第j个因素得出的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><msub><mi>I</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">CI_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>，这每一个单循环的出来的CI都需要检验，而第三步得出的特征向量为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，也就是第i个因素的重要程度，得出总排序的CR。</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>C</mi><mi>R</mi><mo>=</mo><mfrac><mrow><mo>∑</mo><msub><mi>a</mi><mi>i</mi></msub><mi>C</mi><msub><mi>I</mi><mi>i</mi></msub></mrow><mrow><mo>∑</mo><msub><mi>a</mi><mi>i</mi></msub><mi>R</mi><msub><mi>I</mi><mi>i</mi></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">CR=\frac{\sum a_iCI_i}{\sum a_iRI_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">CR</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>这一总排序的一致性比率也需要通过检验。</p></li></ol><p>而最终第k个方案的最终权重为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∑</mo><msub><mi>a</mi><mi>i</mi></msub><msub><mi>w</mi><mrow><mi>i</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\sum a_iw_{ik}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">ik</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mrow><mi>i</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">w_{ik}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">ik</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>代表对于第i个因素第k个方案的权重，也就是对第i个因素求出的特征向量的第k个值。</p><p>实现上，很简单。也可以直接使用它给的AHP”软件”。</p><p>如果提供的数据不需要两两比较就存在一个整体的顺序，那么直接构建一个一致阵就可以了。</p><p><strong>优点</strong></p><ol><li>系统性。把所研究的问题看成一个系统，按照分解、比较判断、综合分析的思维方式进行决策分析，也是实际中继机理分析方法、统计分析方法之后发展起来的又一个重要的系统分析工具。</li><li>实用性。把定性与定量方法结合起来，能处理许多传统的优化方法无法处理的实际问题，应用范围广，而且将决策者和决策分析者联系起来，体现了决策者的主观意见，决策者可以直接应用它进行决策分析，增加了决策的有效性和实用性。</li><li>简洁性。具有中等文化程度的人都可以学习掌握层次分析法的基本原理和步骤，计算也比较简便，所得结果简单明确，容易被决策者了解和掌握。</li></ol><p><strong>局限性</strong></p><p>局限性是粗略、主观。首先是它的比较、判断及结果都是粗糙的，不适于精度要求很高的问题。</p><p>其次是从建立层次结构图到给出两两比较矩阵，人的主观因素作用很大，使决策结果较大程度地依赖于决策人的主观意志，可能难以为众人所接受。</p><h3 id="TOPSIS-理想解法-客观赋权">TOPSIS (理想解法) (客观赋权)</h3><p>将数据标准化并得出最优点（每一个因素都取最优）与最劣点，并计算数据点与其的距离来判断优劣。</p><p>过程：</p><ol><li>数据标准化</li><li>将数据根据因素权重进行加权，也就是乘上因素权重</li><li>确定两点</li><li>计算距离（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mtext>优</mtext></msub><mtext>和</mtext><msub><mi>s</mi><mtext>劣</mtext></msub></mrow><annotation encoding="application/x-tex">s_优和s_劣</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">优</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">和</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">劣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>），以欧式距离作为距离</li><li>计算各个数据的综合评价指数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>i</mi></msub><mo>=</mo><mfrac><msub><mi>s</mi><mtext>优</mtext></msub><mrow><msub><mi>s</mi><mtext>劣</mtext></msub><mo>+</mo><msub><mi>s</mi><mtext>优</mtext></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">f_i=\frac{s_优}{s_劣+s_优}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.157em;vertical-align:-0.4453em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7117em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord cjk_fallback mtight">劣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1433em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord cjk_fallback mtight">优</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1433em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4103em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord cjk_fallback mtight">优</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1433em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4453em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li></ol><p>数据标准化总共要处理三个问题：</p><ol><li>将效益型（越大越好），成本型（越小越好）与区间型统一。</li><li>去量纲</li><li>归一化（将所有数据变换到[0,1]上）</li></ol><p>标准化的方法总共有5种：</p><ol><li>线性 (不常用) ：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo>=</mo><mfrac><mi>a</mi><msub><mi>a</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub></mfrac></mrow><annotation encoding="application/x-tex">a^{&#x27;}=\frac{a}{a_{max}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9425em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9425em;"><span style="top:-2.9425em;margin-right:0.05em;"><span class="pstrut" style="height:2.5795em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1405em;vertical-align:-0.4451em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6954em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ma</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4451em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li><li>标准0-1变换：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo>=</mo><mfrac><mrow><mi>a</mi><mo>−</mo><msub><mi>a</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><mrow><msub><mi>a</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo>−</mo><msub><mi>a</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">a^{&#x27;}=\frac{a-a_{min}}{a_{max}-a_{min}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9425em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9425em;"><span style="top:-2.9425em;margin-right:0.05em;"><span class="pstrut" style="height:2.5795em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2635em;vertical-align:-0.4451em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8184em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ma</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">min</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">min</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4451em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li><li>区间型变换：分段函数，区间前与区间后各以成本型与效益型来处理，最终会分为五段，形状像梯形。</li><li>向量规范化 (topsis中常用) ：</li></ol><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>a</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo>=</mo><mfrac><mi>a</mi><msqrt><mrow><mo>∑</mo><msubsup><mi>a</mi><mi>i</mi><mn>2</mn></msubsup></mrow></msqrt></mfrac></mrow><annotation encoding="application/x-tex">a^{&#x27;}=\frac{a}{\sqrt{\sum a_i^2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9925em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9925em;"><span style="top:-2.9925em;margin-right:0.05em;"><span class="pstrut" style="height:2.5795em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.2376em;vertical-align:-1.13em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1076em;"><span style="top:-2.1655em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9445em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7959em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.0448em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.9045em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.28em" viewBox="0 0 400000 1296" preserveAspectRatio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2955em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.13em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><ol><li>标准化处理 (常用) ：</li></ol><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>a</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo>=</mo><mfrac><mrow><mi>a</mi><mo>−</mo><mover accent="true"><mi>a</mi><mo stretchy="true">‾</mo></mover></mrow><msub><mi>s</mi><mi>j</mi></msub></mfrac><mtext>    </mtext><msub><mi>s</mi><mi>j</mi></msub><mo>=</mo><msqrt><mfrac><mrow><mo>∑</mo><mo stretchy="false">(</mo><msub><mi>a</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><mi>a</mi><mo stretchy="true">‾</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></mfrac></msqrt></mrow><annotation encoding="application/x-tex">a^{&#x27;}=\frac{a-\overline{a}}{s_j}\ \ \ \ s_j=\sqrt{\frac{\sum (a_i-\overline{a})^2}{m-1}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9925em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9925em;"><span style="top:-2.9925em;margin-right:0.05em;"><span class="pstrut" style="height:2.5795em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.2797em;vertical-align:-0.9721em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3076em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9721em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.44em;vertical-align:-0.7773em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6627em;"><span class="svg-align" style="top:-4.4em;"><span class="pstrut" style="height:4.4em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.6227em;"><span class="pstrut" style="height:4.4em;"></span><span class="hide-tail" style="min-width:1.02em;height:2.48em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="2.48em" viewBox="0 0 400000 2592" preserveAspectRatio="xMinYMin slice"><path d="M424,2478c-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514c0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20s-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121s209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081l0 -0c4,-6.7,10,-10,18,-10 H400000v40H1014.6s-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2z M1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7773em;"><span></span></span></span></span></span></span></span></span></span></p><p>可以直接使用zscore(矩阵)。</p><h3 id="聚类分析">聚类分析</h3><p>将相似的分为一类，相似指的是关键值的差值很小。</p><ul><li><p>R型分类</p><p>对指标进行分类，通过了解指标的相似程度，来一定程度上省略一些指标</p></li><li><p>Q型分类</p><p>对样本进行分类，比传统的分类方法更细致，全面，合理</p></li></ul><ol><li><p>样本之间的距离度量</p><p>欧式距离，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msqrt><mrow><mo>∑</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mrow><mi>i</mi><mi>k</mi></mrow></msub><mo>−</mo><msub><mi>x</mi><mrow><mi>j</mi><mi>k</mi></mrow></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></msqrt></mrow><annotation encoding="application/x-tex">\sqrt{\sum(x_{ik}-x_{jk})^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.3231em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9169em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">ik</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">jk</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-2.8769em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.28em" viewBox="0 0 400000 1296" preserveAspectRatio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3231em;"><span></span></span></span></span></span></span></span></span>，pdist(x)，x是矩阵。</p><p>绝对距离，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∑</mo><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mrow><mi>i</mi><mi>k</mi></mrow></msub><mo>−</mo><msub><mi>x</mi><mrow><mi>j</mi><mi>k</mi></mrow></msub><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">\sum|x_{ik}-x_{jk}|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">ik</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">jk</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span>,pdist(x,’cityblock’)</p><p>明式距离，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mrow></mrow><mi>m</mi></msup><msqrt><mrow><mo>∑</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mrow><mi>i</mi><mi>k</mi></mrow></msub><mo>−</mo><msub><mi>x</mi><mrow><mi>j</mi><mi>k</mi></mrow></msub><msup><mo stretchy="false">)</mo><mi>m</mi></msup></mrow></msqrt></mrow><annotation encoding="application/x-tex">^m\sqrt{\sum(x_{ik}-x_{jk})^m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.3231em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9169em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">ik</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">jk</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5904em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span></span></span><span style="top:-2.8769em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.28em" viewBox="0 0 400000 1296" preserveAspectRatio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3231em;"><span></span></span></span></span></span></span></span></span>，pdist(x,’minkowski’,m)。</p><p>切式距离，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mrow><mi>i</mi><mi>k</mi></mrow></msub><mo>−</mo><msub><mi>x</mi><mrow><mi>j</mi><mi>k</mi></mrow></msub><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">max|x_{ik}-x_{jk}|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">ik</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">jk</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span></p><p>方差加权距离，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msqrt><mrow><mo>∑</mo><mfrac><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mrow><mi>i</mi><mi>k</mi></mrow></msub><mo>−</mo><msub><mi>x</mi><mrow><mi>j</mi><mi>k</mi></mrow></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><msubsup><mi>s</mi><mi>k</mi><mn>2</mn></msubsup></mfrac></mrow></msqrt></mrow><annotation encoding="application/x-tex">\sqrt{\sum\frac{(x_{ik}-x_{jk})^2}{s_k^2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.84em;vertical-align:-0.6443em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1957em;"><span class="svg-align" style="top:-3.8em;"><span class="pstrut" style="height:3.8em;"></span><span class="mord" style="padding-left:1em;"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0381em;"><span style="top:-2.6264em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1528em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3472em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5131em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">ik</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">jk</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2901em;"><span></span></span></span></span></span></span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6166em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.1557em;"><span class="pstrut" style="height:3.8em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.88em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.88em" viewBox="0 0 400000 1944" preserveAspectRatio="xMinYMin slice"><path d="M983 90l0 -0c4,-6.7,10,-10,18,-10 H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5zM1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6443em;"><span></span></span></span></span></span></span></span></span></p><p>马氏距离，pdist(x,’mahal’)</p></li></ol><p>pdist返回的是一个行向量，要通过squareform(行向量)来获得实对称矩阵</p><p>并可以通过tril(矩阵)来获得上三角矩阵</p><ol><li><p>变量之间的相似度量——相似系数</p><p>用余弦或者相关系数。</p><p>余弦：也就是点乘除上两个向量的长度。</p><p>先用normc(矩阵)将矩阵单位向量话，最后a’*a即可得到余弦。</p><p>相关系数：向量变为从向量的平均向量指向这个向量，也就是所有的x_i减去x均。</p><p>corrcoef(矩阵)可直接求得相关系数。</p></li><li><p>类间距离，代表两个聚类之间的距离</p><p>最长距离，最短距离，平均距离，重心距离</p></li><li><p>聚类方法</p><ul><li>谱系聚类法</li></ul><p>计算得到距离矩阵。</p><p>设定类间距离大小。</p><p>所有的点一开始都是一个类。若两个类的类间距离小于设定的，那么就合并。</p><p>通过linkage(距离矩阵,’类间距离定义’)</p><table><thead><tr><th>最短</th><th>空</th></tr></thead><tbody><tr><td>最长</td><td>complete</td></tr><tr><td>中间</td><td>centroid</td></tr><tr><td>重心</td><td>average</td></tr><tr><td>离差平方和</td><td>ward</td></tr></tbody></table><p>其linkage将会做到直到只剩一个类。可以通过dendrogram(矩阵)来将linkage的过程可视化，linkage返回值作为输入。并可以通过cluster(矩阵，聚类几次）来输出聚类步骤。</p><ul><li>k-means</li></ul><p>一开始定下聚类的个数。并随机这么多个数的随机聚类中心。</p><p>将每一个点归类，并以这些归类的点计算出新的聚类中心。重复操作。</p><p>可以直接使用kmeans(矩阵,个数)。</p></li></ol><h3 id="灰色关联分析（评价）">灰色关联分析（评价）</h3><p>认为所有指标是等权重的。</p><p>对于一个选择，先量纲化处理所有方案的数据。</p><p>接着得出参考数列（一般取最优即可）</p><p>计算相差矩阵，也就是每一个元素改为其与最优值的差值的绝对值。</p><p>接着得出相差矩阵的元素最小值Xmin和元素最大值Xmax。</p><p>最终每一个选项在每一个指标的得分计算为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi>X</mi><mi>m</mi><mi>i</mi><mi>n</mi><mo>+</mo><mi>p</mi><mo>∗</mo><mi>X</mi><mi>m</mi><mi>a</mi><mi>x</mi></mrow><mrow><mi>X</mi><mi>n</mi><mi>o</mi><mi>w</mi><mo>+</mo><mi>p</mi><mo>∗</mo><mi>X</mi><mi>m</mi><mi>a</mi><mi>x</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{Xmin+p*Xmax}{Xnow+p*Xmax}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4055em;vertical-align:-0.4811em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9244em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">p</span><span class="mbin mtight">∗</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span><span class="mord mathnormal mtight">ma</span><span class="mord mathnormal mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span><span class="mord mathnormal mtight">min</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">p</span><span class="mbin mtight">∗</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span><span class="mord mathnormal mtight">ma</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4811em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，p为分辨系数，一般取0.5。Xnow就是这个相差矩阵的这位元素的值。</p><p>最终将所有指标得分平均即为这个选项的得分。</p><p>如相差矩阵为</p><table><thead><tr><th>1</th><th>1</th></tr></thead><tbody><tr><td>2</td><td>0</td></tr></tbody></table><p>则Xmin为0，Xmax为2。</p><p>则为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mn>0</mn><mo>+</mo><mn>2</mn><mo>∗</mo><mn>0.5</mn></mrow><mrow><mn>1</mn><mo>+</mo><mn>2</mn><mo>∗</mo><mn>0.5</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{0+2*0.5}{1+2*0.5}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2484em;vertical-align:-0.4033em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mtight">2</span><span class="mbin mtight">∗</span><span class="mord mtight">0.5</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mbin mtight">+</span><span class="mord mtight">2</span><span class="mbin mtight">∗</span><span class="mord mtight">0.5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4033em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>。1为该位置元素的值。</p><h3 id="灰色预测模型（预测）">灰色预测模型（预测）</h3><p>基本思想：现实数据存在随机性，通过累加、累减、加权累加等方式来消除随机性找到规律进行预测</p><p>步骤：</p><ol><li><p>进行检验与处理</p><p>要使用灰色预测模型，必须首先经过级比检验</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>设原数据为</mtext><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>i</mi><mo>≤</mo><mi>n</mi><mo separator="true">,</mo><mtext>需保证</mtext><mi>λ</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mrow><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></mfrac><mo>∈</mo><mo stretchy="false">(</mo><msup><mi>e</mi><mfrac><mrow><mo>−</mo><mn>2</mn></mrow><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></mfrac></msup><mo separator="true">,</mo><msup><mi>e</mi><mfrac><mn>2</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></mfrac></msup><mo stretchy="false">)</mo><mtext>对</mtext><mi>k</mi><mo>≥</mo><mn>2</mn><mtext>恒</mtext></mrow><annotation encoding="application/x-tex">设原数据为x^{(0)}(i),i\le n,需保证\lambda(k)=\frac{x^{(0)}(k-1)}{x^{(0)}(k)}\in(e^{\frac{-2}{n+1}},e^{\frac{2}{n+1}})对k\ge 2恒</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">设原数据为</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">需保证</span><span class="mord mathnormal">λ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.519em;vertical-align:-0.954em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.565em;"><span style="top:-2.296em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.814em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.954em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.254em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.004em;"><span style="top:-3.413em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4035em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.004em;"><span style="top:-3.413em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4035em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord cjk_fallback">对</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">2</span><span class="mord cjk_fallback">恒</span></span></span></span></span></p><p>若不符合，可以通过使<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">(</mo><mi>i</mi><msup><mo stretchy="false">)</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>+</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">x^{(0)}(i)&#x27;=x^{(0)}(i)+c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span></span></span></span>平移操作来使符合，但不要忘记预测时要逆操作。</p></li><li><p>建立GM(1,1)模型</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>灰微分方程为 </mtext><mo>:</mo><mtext> </mtext><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo>+</mo><mi>a</mi><msup><mi>z</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">灰微分方程为\ :\ x^{(0)}(k)+az^{(1)}(k)=b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">灰微分方程为</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span></span></p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>其中</mtext><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mtext>邻值生成数列</mtext><msup><mi>z</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><mi>a</mi><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>a</mi><mo stretchy="false">)</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>a</mi><mtext>一般取</mtext><mn>0.5</mn></mrow><annotation encoding="application/x-tex">其中x^{(1)}邻值生成数列z^{(1)}(k)=ax^{(1)}(k)+(1-a)x^{(1)}(k-1),a一般取0.5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">其中</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord cjk_fallback">邻值生成数列</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mord cjk_fallback">一般取</span><span class="mord">0.5</span></span></span></span></span></p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>其中一次累加生成数列</mtext><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>k</mi></munderover><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">其中一次累加生成数列x^{(1)}(k)=\sum^k_{i=1}x^{(0)}(i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">其中一次累加生成数列</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.1138em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8361em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span></span></p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>设</mtext><mi>u</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>a</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>b</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mo stretchy="false">(</mo><msup><mi>B</mi><mi>T</mi></msup><mi>B</mi><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><msup><mi>B</mi><mi>T</mi></msup><mi>Y</mi><mo separator="true">,</mo><mtext>其中</mtext><mi>B</mi><mtext>矩阵为</mtext><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><msup><mi>z</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mspace linebreak="newline"></mspace><mi>Y</mi><mtext>矩阵为</mtext><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo separator="true">,</mo><mi>i</mi><mo>≥</mo><mn>2</mn><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">设u=\begin{bmatrix}a\\b\end{bmatrix}=(B^TB)^{-1}B^TY,其中B矩阵为\begin{bmatrix}-z^{(1)}(i)&amp;1\end{bmatrix}\\Y矩阵为\begin{bmatrix}x^{(0)}(i)\end{bmatrix},i\ge2\\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">设</span><span class="mord mathnormal">u</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2653em;vertical-align:-0.374em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">其中</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord cjk_fallback">矩阵为</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.874em;"><span style="top:-2.986em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.374em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.874em;"><span style="top:-2.986em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.374em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.248em;vertical-align:-0.374em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord cjk_fallback">矩阵为</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.874em;"><span style="top:-2.986em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.374em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span><span class="mspace newline"></span></span></span></span></p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>解得后</mtext><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">(</mo><mi>k</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo><mo>−</mo><mfrac><mi>b</mi><mi>a</mi></mfrac><mo stretchy="false">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>a</mi><mi>k</mi></mrow></msup><mo>+</mo><mfrac><mi>b</mi><mi>a</mi></mfrac><mspace linebreak="newline"></mspace><mtext>预测值</mtext><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">(</mo><mi>k</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">(</mo><mi>k</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>−</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">解得后x^{(1)}(k+1)=(x^{(0)}(1)-\frac{b}{a})e^{-ak}+\frac{b}{a}\\预测值x^{(0)}(k+1)=x^{(1)}(k+1)-x^{(1)}(k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">解得后</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">ak</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">预测值</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span></span></p><ol><li><p>进行检验正确性</p><p>a. 残差检验</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>ε</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo>−</mo><msubsup><mi>x</mi><mtext>预</mtext><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msubsup><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow><mrow><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">\varepsilon(k)=\frac{x^{(0)}(k)-x_预^{(0)}(k)}{x^{(0)}(k)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ε</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.6823em;vertical-align:-0.954em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7283em;"><span style="top:-2.3408em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.814em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span><span style="top:-3.2748em;"><span class="pstrut" style="height:3.0448em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7283em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4065em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">预</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2935em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.954em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>若所有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>ε</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mo>&lt;</mo><mn>0.1</mn></mrow><annotation encoding="application/x-tex">|\varepsilon(k)|&lt;0.1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal">ε</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.1</span></span></span></span>，这达到较高的要求。若所有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>ε</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mo>&lt;</mo><mn>0.2</mn></mrow><annotation encoding="application/x-tex">|\varepsilon(k)|&lt;0.2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal">ε</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.2</span></span></span></span>，这达到一般要求。</p><p>b. 级比偏差值检验</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>ρ</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo>−</mo><mfrac><mrow><mn>1</mn><mo>−</mo><mn>0.5</mn><mi>a</mi></mrow><mrow><mn>1</mn><mo>+</mo><mn>0.5</mn><mi>a</mi></mrow></mfrac><mi>λ</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext>此处</mtext><mi>λ</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mtext>为前面第一步中的</mtext><mo separator="true">,</mo><mi>a</mi><mtext>一般取</mtext><mn>0.5</mn></mrow><annotation encoding="application/x-tex">\rho(k)=1-\frac{1-0.5a}{1+0.5a}\lambda(k),此处\lambda(k)为前面第一步中的,a一般取0.5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ρ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0908em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">0.5</span><span class="mord mathnormal">a</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">0.5</span><span class="mord mathnormal">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal">λ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">此处</span><span class="mord mathnormal">λ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mord cjk_fallback">为前面第一步中的</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mord cjk_fallback">一般取</span><span class="mord">0.5</span></span></span></span></span></p><p>若所有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>ρ</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mo>&lt;</mo><mn>0.1</mn></mrow><annotation encoding="application/x-tex">|\rho(k)|&lt;0.1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal">ρ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.1</span></span></span></span>，这达到较高的要求。若所有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>ρ</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mo>&lt;</mo><mn>0.2</mn></mrow><annotation encoding="application/x-tex">|\rho(k)|&lt;0.2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal">ρ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.2</span></span></span></span>，这达到一般要求。</p><p>二者中达成一个即可。</p></li></ol></li></ol><h3 id="数据预处理">数据预处理</h3><p>即便没有需要预处理的，也需要进行说明。</p><p>总共四种。</p><ol><li><p>数据清洗</p><ol><li><p>异常值</p><p>一般直接视为缺失值或者用前后的两个数据平均作为数据</p><p>重点在于如何判断是否是异常值。</p><ol><li><p>将正态分布中＞3σ的作为异常值</p></li><li><p>箱线图。假设Q1是第25%的数据的值，Q3为第75%的值，IQR=Q3-Q1，将&gt;Q3+1.5IQR和&lt;Q1-1.5IQR的视为异常值</p><p>使用boxplot绘制箱线图，用法boxplot(矩阵)，会为每一列绘制一个</p></li><li><p>通过散点图肉眼观察</p><p>如果不用肉眼的话，可以设定一个特定的距离。如果对于某个点来说有超过n个点与它的距离大于这个设定的距离，那么这个点就是散点。距离和n都是要人为主观设定的。</p></li></ol></li><li><p>缺失值</p><ol><li>直接删除这一组数据</li><li>不处理，作为一种特别的数据</li><li>数据插补</li></ol><p>其中，插补的方法有多种。</p><ol><li><p>直接将其取为均值，中位数，或众数</p></li><li><p>直接将其取为固定值</p></li><li><p>回归邻插补，找到“距离”最小的另一个数据点，直接用它的这一个数据</p></li><li><p>回归方法，通过其他的正常数据拟合模型来预测</p></li><li><p>插值法，使用合适的插值函数，依靠拉格朗日插值法或牛顿插值法</p><p>实现方法：</p><p>ployinterp_column(有空缺的矩阵，’lagrange’或’newton’)返回一个插值完的矩阵</p><p>这是由它写的函数实现的，matlab本身并没有直接的方法</p><p>python中倒是在scipy库中有可以直接使用的函数。</p><p>可能不一定是下面这样用的？(chat写的）</p><p><img src="/image/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1Untitled%2010.png" alt=""></p></li></ol></li></ol></li><li><p>数据集成</p><p>将多个数据库的数据集成为一个统一的数据库</p></li><li><p>数据消减</p><p>在很多情况下，有一些数据是完全与结果无关的或者与另一个因素是有非常强的关联的时候可以将这一部分数据给去除，减少数据量，提高效率，而不降低正确性</p><ol><li>研究特征之间的关系</li><li>暴力枚举选取因素，选取预测最好的</li></ol><p>两个因素的相关性可以用斜方差来表示</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>c</mi><mi>o</mi><mi>v</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><mi>x</mi><mo stretchy="true">‾</mo></mover><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><mi>y</mi><mo stretchy="true">‾</mo></mover><mo stretchy="false">)</mo></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">cov(x,y)=\frac{\sum^n_{i=1}(x_i-\overline{x})(y_i-\overline{y})}{n-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">co</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.2633em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.494em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6897em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>可以通过这个来生成一个斜方差矩阵，再通过主成分分析法来降维。</p><p>可通过corrcoef(矩阵)，返回斜方差矩阵</p><p>并通过pcacov(斜方差矩阵）进行主成分分析法，返回[矩阵,~,矩阵]，第一个矩阵代表主成分分析法新造出的几个主成分的原因素系数，最后一个矩阵代表每一个成分的贡献度，只需要从前往后进行累加，当累计贡献率＞85%时，剩下的就都可以被抛弃了。</p><p>当我们得出几个新的因素由原因素线性表示的时候，我们不仅要写出表达式，也需要对此进行实际意义上的阐释。</p></li><li><p>数据变换</p><ol><li><p>归一化</p><p>保证量纲一致</p></li><li><p>函数变换</p><p>当存在偏态分布而非正态分布时，可以通过指数函数与对数函数分别将左偏与右偏数据调整为正态分布，这样能够当我们用某几个指标衡量的时候得出的结果会相同，或者可以使用某些对数据要求很严格的检验</p></li></ol></li></ol><h3 id="插值">插值</h3><ol><li><p>拉格朗日插值法</p><p>对于n个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_i,y_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>的点，我可以生成n个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_i(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>使得它在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的值为1，而其他的x点上都为0。</p><p>此时<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>y</mi><mi>i</mi></msub><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)=\sum_{i=1}^ny_if_i(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.104em;vertical-align:-0.2997em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>必然会经过所有点。</p><p>而<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∏</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mfrac><mrow><mi>x</mi><mo>−</mo><msub><mi>x</mi><mi>j</mi></msub></mrow><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>x</mi><mi>j</mi></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">f_i(x)=\prod_{j=1}^n\frac{x-x_j}{x_i-x_j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.458em;vertical-align:-0.5423em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∏</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9157em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5073em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5423em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>。</p><p>用的较少好像</p></li><li><p>Runge现象</p><p>当多项式的次数变高，插值函数的边缘处会出现非常大的震荡，因此一般不建议次数超过7。</p><p>这可以通过分段插值来解决，也就是很多个点几个连续的分为一段，对他们分别进行低次插值。</p><p>因为我们想进行的仅仅是插值而非拟合，所以不用管分段对于整体的问题。</p></li><li><p>一维插值</p><p>interp1(x,y,x_i,’method’)，x_i可以是一个矩阵，返回的y_i大小与x_i相同</p><p>method有</p><table><thead><tr><th>nearest</th><th>最邻近插值</th><th></th></tr></thead><tbody><tr><td>linear</td><td>线性插值</td><td></td></tr><tr><td>spline</td><td>三次样条插值</td><td>一维用，看起来是最好的</td></tr><tr><td>cubic</td><td>立方插值</td><td>二维用</td></tr></tbody></table></li><li><p>二维插值</p><p>interp2(x,y,z,x_i,y_i,’method’)</p><p>method与一维的一致，只不过linear和cubic的中文名都加上一个双</p></li><li><p>散点插值</p><p>上述的都是已有的数据点都是大量的，但常常有那种只有零星几个点的，此时就应该用散点插值</p><p>griddata(x,y,z,x_i,y_i,’method’)，其他与二维插值差不多</p></li></ol><h3 id="回归">回归</h3><ol><li><p>一元线性回归</p><ol><li><p>求出方程的系数</p><p>设预测值为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">y&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9463em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>，则将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∑</mo><mo stretchy="false">(</mo><mi>y</mi><mo>−</mo><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\sum(y-y&#x27;)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>作为评估误差大小，将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><msub><mi>β</mi><mn>0</mn></msub><mo>+</mo><msub><mi>β</mi><mn>1</mn></msub><mi>x</mi></mrow><annotation encoding="application/x-tex">y=\beta_0+\beta_1x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span></span></span></span>代入，会得到一个关于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>β</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">\beta_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>β</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">\beta_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的二次函数，通过导数求其最小值，得</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>β</mi><mn>0</mn></msub><mo>=</mo><mover accent="true"><mi>y</mi><mo stretchy="true">‾</mo></mover><mo>−</mo><msub><mi>β</mi><mn>1</mn></msub><mover accent="true"><mi>x</mi><mo stretchy="true">‾</mo></mover></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>β</mi><mn>1</mn></msub><mo>=</mo><mfrac><mrow><mo>∑</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><mi>x</mi><mo stretchy="true">‾</mo></mover><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><mi>y</mi><mo stretchy="true">‾</mo></mover><mo stretchy="false">)</mo></mrow><mrow><mo>∑</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><mi>x</mi><mo stretchy="true">‾</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}\beta_0=\overline{y}-\beta_1\overline{x}\\ \beta_1=\frac{\sum (x_i-\overline{x})(y_i-\overline{y})}{\sum (x_i-\overline{x})^2}\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.735em;"><span style="top:-3.737em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span><span style="top:-2.295em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:0em;">∑</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord overline mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6756em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span><span style="top:-3.5776em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line mtight" style="border-bottom-width:0.049em;"></span></span></span></span></span></span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:0em;">∑</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord overline mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6756em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span><span style="top:-3.5776em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line mtight" style="border-bottom-width:0.049em;"></span></span></span></span></span></span><span class="mclose mtight">)</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord overline mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6756em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.5776em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line mtight" style="border-bottom-width:0.049em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.235em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p></li><li><p>对求出的系数进行假设检验，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>−</mo><mi>α</mi></mrow><annotation encoding="application/x-tex">1-\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span>为置信度，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span>一般取0.05。</p><ol><li><p>F检验法</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>F</mi><mo>=</mo><mfrac><mrow><mi>U</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo></mrow><msub><mi>Q</mi><mi>e</mi></msub></mfrac><mo separator="true">,</mo><msub><mi>Q</mi><mi>e</mi></msub><mo>=</mo><mo>∑</mo><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msubsup><mi>y</mi><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo separator="true">,</mo><mi>U</mi><mo>=</mo><mo>∑</mo><mo stretchy="false">(</mo><msubsup><mi>y</mi><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>−</mo><mover accent="true"><mi>y</mi><mo stretchy="true">‾</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">F=\frac{U(n-2)}{Q_e},Q_e=\sum (y_i-y_i&#x27;)^2,U=\sum(y_i&#x27;-\overline{y})^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3074em;vertical-align:-0.8804em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.6em;vertical-align:-0.55em;"></span><span class="mop op-symbol large-op" style="position:relative;top:0em;">∑</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.6em;vertical-align:-0.55em;"></span><span class="mop op-symbol large-op" style="position:relative;top:0em;">∑</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p>此处的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>y</mi><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.825em;vertical-align:-0.1944em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span></span></span></span>应该是原y的平均值。</p><p>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo>&gt;</mo><msub><mi>F</mi><mrow><mn>1</mn><mo>−</mo><mi>α</mi></mrow></msub><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mi>n</mi><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F&gt;F_{1-\alpha}(1,n-2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">)</span></span></span></span>时，则方程通过检验。后面的值可依靠查表得。</p></li><li><p>t检验法</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>T</mi><mo>=</mo><mfrac><mrow><msqrt><msub><mi>L</mi><mrow><mi>x</mi><mi>x</mi></mrow></msub></msqrt><msub><mi>β</mi><mn>1</mn></msub></mrow><msub><mi>σ</mi><mi>e</mi></msub></mfrac><mo separator="true">,</mo><msub><mi>L</mi><mrow><mi>x</mi><mi>x</mi></mrow></msub><mo>=</mo><mo>∑</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><mi>x</mi><mo stretchy="true">‾</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo separator="true">,</mo><msubsup><mi>σ</mi><mi>e</mi><mn>2</mn></msubsup><mo>=</mo><mfrac><msub><mi>Q</mi><mi>e</mi></msub><mrow><mi>n</mi><mo>−</mo><mn>2</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">T=\frac{\sqrt{L_{xx}}\beta_1}{\sigma_e},L_{xx}=\sum(x_i-\overline{x})^2,\sigma_e^2=\frac{Q_e}{n-2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3647em;vertical-align:-0.836em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5287em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8517em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">xx</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.8117em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1883em;"><span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">xx</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.6em;vertical-align:-0.55em;"></span><span class="mop op-symbol large-op" style="position:relative;top:0em;">∑</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.1297em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>x</mi><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6306em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span></span>也应该是原x的平均值。</p><p>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>T</mi><mi mathvariant="normal">∣</mi><mo>&gt;</mo><msub><mi>t</mi><mrow><mn>1</mn><mo>−</mo><mfrac><mi>α</mi><mn>2</mn></mfrac></mrow></msub><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">|T|&gt;t_{1-\frac{\alpha}{2}}(n-2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1408em;vertical-align:-0.3908em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3341em;"><span style="top:-2.85em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6915em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3908em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">)</span></span></span></span>时，则方程通过检验。后面的值可依靠查表得。</p></li><li><p>r检测法 ?为什么公式里一个预测值都没出现</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>r</mi><mo>=</mo><mfrac><mrow><mo>∑</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><mi>x</mi><mo stretchy="true">‾</mo></mover><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><mi>y</mi><mo stretchy="true">‾</mo></mover><mo stretchy="false">)</mo></mrow><msqrt><mrow><mo>∑</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><mi>x</mi><mo stretchy="true">‾</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>∑</mo><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><mi>y</mi><mo stretchy="true">‾</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></msqrt></mfrac></mrow><annotation encoding="application/x-tex">r=\frac{\sum(x_i-\overline{x})(y_i-\overline{y})}{\sqrt{\sum(x_i-\overline{x})^2\sum(y_i-\overline{y})^2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.557em;vertical-align:-1.13em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.175em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.935em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-2.895em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.28em" viewBox="0 0 400000 1296" preserveAspectRatio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.305em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.13em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>r</mi><mi mathvariant="normal">∣</mi><mo>&gt;</mo><msub><mi>r</mi><mrow><mn>1</mn><mo>−</mo><mi>α</mi></mrow></msub></mrow><annotation encoding="application/x-tex">|r|&gt;r_{1-\alpha}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span>时，则方程通过检验。后面的值可依靠查表得。</p></li></ol><p>算出来的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>β</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">\beta_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>β</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">\beta_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>也是有一个不确定度的。</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>β</mi><mn>0</mn></msub><mo>=</mo><msub><mi>β</mi><mn>0</mn></msub><mo>±</mo><msub><mi>t</mi><mrow><mn>1</mn><mo>−</mo><mfrac><mi>α</mi><mn>2</mn></mfrac></mrow></msub><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo><msub><mi>σ</mi><mi>e</mi></msub><msqrt><mrow><mfrac><mn>1</mn><mi>n</mi></mfrac><mo>+</mo><mfrac><msup><mover accent="true"><mi>x</mi><mo stretchy="true">‾</mo></mover><mn>2</mn></msup><msub><mi>L</mi><mrow><mi>x</mi><mi>x</mi></mrow></msub></mfrac></mrow></msqrt></mrow><annotation encoding="application/x-tex">\beta_0=\beta_0\pm t_{1-\frac{\alpha}{2}}(n-2)\sigma_e\sqrt{\frac{1}{n}+\frac{\overline{x}^2}{L_{xx}}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">±</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1408em;vertical-align:-0.3908em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3341em;"><span style="top:-2.85em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6915em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3908em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:3.04em;vertical-align:-1.0683em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.9717em;"><span class="svg-align" style="top:-5em;"><span class="pstrut" style="height:5em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5116em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">xx</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8346em;"><span style="top:-3.0835em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.9317em;"><span class="pstrut" style="height:5em;"></span><span class="hide-tail" style="min-width:1.02em;height:3.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="3.08em" viewBox="0 0 400000 3240" preserveAspectRatio="xMinYMin slice"><path d="M473,2793c339.3,-1799.3,509.3,-2700,510,-2702 l0 -0c3.3,-7.3,9.3,-11,18,-11 H400000v40H1017.7s-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200c0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26s76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,606zM1001 80h400000v40H1017.7z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0683em;"><span></span></span></span></span></span></span></span></span></span></p></li><li><p>对x0做预测或对y做区间估计</p><ol><li><p>预测</p><p>预测得的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">y&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9463em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>也有一个不确定度。</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>±</mo><mi>δ</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>δ</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo>=</mo><msub><mi>σ</mi><mi>e</mi></msub><msub><mi>t</mi><mrow><mn>1</mn><mo>−</mo><mfrac><mi>α</mi><mn>2</mn></mfrac></mrow></msub><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo><msqrt><mrow><mn>1</mn><mo>+</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><mo>+</mo><mfrac><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo>−</mo><mover accent="true"><mi>x</mi><mo stretchy="true">‾</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><msub><mi>L</mi><mrow><mi>x</mi><mi>x</mi></mrow></msub></mfrac></mrow></msqrt></mrow><annotation encoding="application/x-tex">y&#x27;=y&#x27;\pm\delta(x_0),\delta(x_0)=\sigma_et_{1-\frac{\alpha}{2}}(n-2)\sqrt{1+\frac{1}{n}+\frac{(x_0-\overline{x})^2}{L_{xx}}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9963em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9963em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">±</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1408em;vertical-align:-0.3908em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3341em;"><span style="top:-2.85em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6915em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3908em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:3.04em;vertical-align:-1.1106em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.9294em;"><span class="svg-align" style="top:-5em;"><span class="pstrut" style="height:5em;"></span><span class="mord" style="padding-left:1em;"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">xx</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.8894em;"><span class="pstrut" style="height:5em;"></span><span class="hide-tail" style="min-width:1.02em;height:3.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="3.08em" viewBox="0 0 400000 3240" preserveAspectRatio="xMinYMin slice"><path d="M473,2793c339.3,-1799.3,509.3,-2700,510,-2702 l0 -0c3.3,-7.3,9.3,-11,18,-11 H400000v40H1017.7s-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200c0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26s76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,606zM1001 80h400000v40H1017.7z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1106em;"><span></span></span></span></span></span></span></span></span></span></p></li><li><p>区间估计</p><p>当我们希望y有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>−</mo><mi>α</mi></mrow><annotation encoding="application/x-tex">1-\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span>的概率落在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mi>y</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(y&#x27;,y&#x27;&#x27;)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>上时。</p><p>假设最终的区间为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mi>x</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x&#x27;,x&#x27;&#x27;)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</p><p>其分别为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>−</mo><mi>δ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mtext>和</mtext><mi>y</mi><mo>+</mo><mi>δ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>y</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></mrow><annotation encoding="application/x-tex">y-\delta(x)=y&#x27;和y+\delta(x)=y&#x27;&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9463em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord cjk_fallback">和</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9463em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′′</span></span></span></span></span></span></span></span></span></span></span></span>的解。</p></li></ol></li></ol></li><li><p>可化为一元线性回归的非线性回归</p><ul><li><p>非线性回归的实现</p><p>[beta,r,J]=nlinfit(x,y,’model’,beta0)</p><p>或者nlinttool(x,y,’model’,beta0,alpha)</p><p>r为残差。</p><p>J为雅可比矩阵。</p><p>model是一个定义的函数。</p><p>beta0为系数初值，随意设即可。</p><p>预测使用[y,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span>]=nlpredci(’model’,x,beta,r,J)</p></li></ul><p>通过<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>v</mi><mo>=</mo><mi>v</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>u</mi><mo>=</mo><mi>u</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}v=v(y)\\u=u(x)\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">u</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，使得u与v是线性相关的，找到u和v的关系后通过逆函数再还原为y和x即可。</p><p>常用的非线性函数。</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>y</mi><mo>=</mo><mi>a</mi><mo>+</mo><mfrac><mi>b</mi><mi>x</mi></mfrac><mo separator="true">,</mo><mfrac><mn>1</mn><mi>y</mi></mfrac><mo>=</mo><mi>a</mi><mo>+</mo><mfrac><mi>b</mi><mi>x</mi></mfrac><mo separator="true">,</mo><mi>y</mi><mo>=</mo><mi>a</mi><msup><mi>x</mi><mi>b</mi></msup><mo separator="true">,</mo><mi>y</mi><mo>=</mo><mi>a</mi><msup><mi>e</mi><mrow><mi>b</mi><mi>x</mi></mrow></msup><mspace linebreak="newline"></mspace><mi>y</mi><mo>=</mo><mi>a</mi><msup><mi>e</mi><mrow><mi>b</mi><mi mathvariant="normal">/</mi><mi>x</mi></mrow></msup><mo separator="true">,</mo><mi>y</mi><mo>=</mo><mi>a</mi><mo>+</mo><mi>b</mi><mi>l</mi><mi>n</mi><mi>x</mi><mo separator="true">,</mo><mi>S</mi><mtext>型 </mtext><mi>y</mi><mo>=</mo><mfrac><mn>1</mn><mrow><mi>a</mi><mo>+</mo><mi>b</mi><msup><mi>e</mi><mrow><mo>−</mo><mi>x</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">y=a+\frac{b}{x},\frac{1}{y}=a+\frac{b}{x},y=ax^b,y=ae^{bx}\\y=ae^{b/x},y=a+blnx,S型\ y=\frac{1}{a+be^{-x}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.2519em;vertical-align:-0.8804em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0935em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8991em;"></span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1324em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mtight">/</span><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">n</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord cjk_fallback">型</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0908em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6973em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p></li><li><p>多元线性回归</p><ol><li><p>计算</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>Y</mi><mo>=</mo><mi>X</mi><mi>β</mi><mo separator="true">,</mo><mi>Y</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>y</mi><mi>i</mi></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo separator="true">,</mo><mi>X</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mtext> </mtext><msub><mi>x</mi><mrow><mi>i</mi><mn>1</mn></mrow></msub><mtext> </mtext><msub><mi>x</mi><mrow><mi>i</mi><mn>2</mn></mrow></msub><mtext> </mtext><mo>…</mo><mtext> </mtext><msub><mi>x</mi><mrow><mi>i</mi><mi>k</mi></mrow></msub></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo separator="true">,</mo><mi>β</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>β</mi><mrow><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>k</mi></mrow></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">Y=X\beta,Y=\begin{bmatrix}y_i\end{bmatrix},X=\begin{bmatrix}1\ x_{i1}\ x_{i2}\ \dots\ x_{ik}\end{bmatrix},\beta=\begin{bmatrix}\beta_{0,1,\dots,k}\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">Xβ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.35em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.35em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace"> </span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">ik</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.35em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="minner mtight">…</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span></span></span></span></span></p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>通过最小二乘解得</mtext><mo separator="true">,</mo><mi>β</mi><mo>=</mo><mo stretchy="false">(</mo><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mi>Y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">通过最小二乘解得,\beta=(X^TX)^{-1}(X^{-1}Y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord cjk_fallback">通过最小二乘解得</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1413em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span></span></span></p><p>当碰到多项式回归时，只需要使<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>=</mo><msup><mi>x</mi><mi>i</mi></msup></mrow><annotation encoding="application/x-tex">x_i=x^i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8247em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8247em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span></span></span></span>即可，化为多元线性回归。</p><ul><li><p>对于多项式回归的实现</p><p>[p,S]=polyfit(x,y,m),m为最高次次数。</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>a</mi><mrow><mi>m</mi><mo>+</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>a</mi><mi>i</mi></msub><mtext>为</mtext><msup><mi>x</mi><mrow><mi>m</mi><mo>−</mo><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msup><mtext>的系数。</mtext></mrow><annotation encoding="application/x-tex">p=(a_1,a_2,\dots,a_{m+1}),a_i为x^{m-i+1}的系数。</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0747em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">为</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8247em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord cjk_fallback">的系数。</span></span></span></span></p><p>通过y=polyval(p,x)来进行预测。</p><p>通过[y,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span>]=polyconf(p,x,S,alpha)。</p><p>得到其在x处的预测值及估计区间。</p></li><li><p>多元二项式回归</p><p>或者直接将其转化为多元线性</p><p>rstool(x,y,’model’,alpha)</p><p>窗口左边会显示y与置信区间</p><p>最后将结果export出来，会获得beta和rmse，只要rmse&lt;10就不错了。</p><p><img src="/image/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1Untitled%2011.png" alt=""></p></li></ul></li><li><p>检验</p><p>F检验</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>F</mi><mo>=</mo><mfrac><mrow><mi>U</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mrow><msub><mi>Q</mi><mi>e</mi></msub><mi>k</mi></mrow></mfrac><mo>&gt;</mo><msub><mi>F</mi><mrow><mn>1</mn><mo>−</mo><mi>α</mi></mrow></msub><mo stretchy="false">(</mo><mi>k</mi><mo separator="true">,</mo><mi>n</mi><mo>−</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext>其他与一元一致</mtext></mrow><annotation encoding="application/x-tex">F=\frac{U(n-k-1)}{Q_ek}&gt;F_{1-\alpha}(k,n-k-1),其他与一元一致</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3074em;vertical-align:-0.8804em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">其他与一元一致</span></span></span></span></span></p></li><li><p>实现</p><p>[b,bint,r,rint,stats]=regress(Y,X,(alpha)),对于一元和多元是一样的。</p><p>bint为b的区间估计。</p><p>r为残差，也就是每一个y’与y的差值,rint为它的置信空间。</p><p>stats=[<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>r</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">r^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>,F,F对应的概率p]。</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>r</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">r^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>越接近1越好，F越大越好。</p><p>可以通过rcoplot(r,rint)来画出残差与置信区间。</p></li></ol></li><li><p>逐步回归</p><p>一些变量可能实际与y无关，此时通过暴力枚举的方式，选选去去变量，来找到那个最好的方案。</p><ul><li><p>实现</p><p>stepwise(x,y,inmodel(一般空缺),alpha)<br>会出来一个图形窗口，一般直接next step即可，matlab会自动进行逐步回归。</p><p>如果希望手动操作的话，点击左边窗口内的条条即可去掉或选择变量。</p><p>尽量使R.square接近1，且F增大。当变化不大时尽可能保留更多的变量。</p></li></ul></li></ol><h3 id="拟合（预测）">拟合（预测）</h3><p>小样本。</p><p>当需要预测提供数据范围之外的数据的时候，应使用拟合。插值对于数据范围之外的数据会因为runge0现象而波动较大。</p><p>拟合更重要的是求函数关系，而插值是更关注函数值。</p><p>而插值必是过所有已知点的，而拟合不一定。</p><p>线性一般使用最小二乘，而非线性一般使用牛顿。</p><ol><li><p>多项式拟合</p><p>见回归.3</p></li><li><p>非线性拟合</p><p>见回归.2</p></li><li><p>可视化拟合（拟合工具箱）</p><p>通过命令cftool启动。</p><p>其中输入x data与y data，可以直接导入存储在工作区中的变量</p><p>通过右上角的更改可以更改想要拟合的函数类型，函数类型如下。</p><p>或者直接在下方直接输入想要拟合的函数</p><p><img src="/image/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1Untitled%2012.png" alt=""></p><p>左侧的result就是拟合的结果。使SSE体验RMSE趋向0，r-square趋向1。</p></li></ol><h3 id="综合评价">综合评价</h3><p>评价类一般有几种，分类，排序与打分。</p><p>多个指标进行评价。</p><p>最终的权重函数一般有三种。</p><ol><li>线性加权（指标间没有较强关联性）</li></ol><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>y</mi><mo>=</mo><mo>∑</mo><msub><mi>w</mi><mi>i</mi></msub><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">y=\sum w_ix_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.6em;vertical-align:-0.55em;"></span><span class="mop op-symbol large-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><ol><li>非线性加权（指标间有较强关联性）</li></ol><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>y</mi><mo>=</mo><mo>∏</mo><msubsup><mi>x</mi><mi>j</mi><msub><mi>w</mi><mi>j</mi></msub></msubsup></mrow><annotation encoding="application/x-tex">y=\prod x_j^{w_j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.6em;vertical-align:-0.55em;"></span><span class="mop op-symbol large-op" style="position:relative;top:0em;">∏</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8435em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.2421em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0269em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.413em;"><span></span></span></span></span></span></span></span></span></span></span></p><ol><li>topsis</li></ol><h3 id="模糊综合评价">模糊综合评价</h3><p>对于一个事物，有多个指标，而对于一个指标，评价是多种的，且是模糊的，没有明确分界线的，如{好，中，差}。但是我们知道评价的比例。’</p><p>实际上，这里只是将评价的比例作为隶属度而已。隶属度才是真正通用的模糊综合的指标。而隶属度就表示对于这个指标来说对于某一个模糊评价的隶属度。</p><p>而通过将指标的权重（通过层次分析法(主观)或者变异系数法(客观)求得）（列向量）与评价矩阵（每一行是一个指标的隶属度）模糊相乘，得到的新的矩阵就是对于这一个事物整体的评价比例，对其进行归一化即可。</p><p>模糊相乘：原理与矩阵相乘一致，但是相加变为取最大值，相乘变为取最小值。</p><p>实际上模糊相乘有很多种，每一种被称为一种算子，上面的这种就是一种算子，各有各不同的优点。</p><p><img src="/image/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1Untitled%2013.png" alt=""></p><p><img src="/image/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1Untitled%2014.png" alt=""></p><p>若一个指标是由多个二级指标决定的，那么，将这个指标当做事物，进行一次模糊综合评价即可。</p><p>除去算子有很多种，隶属度的得出也有很多方法。下述的两种方法（与灰色关联分析相似）算子一般都是用第4种。</p><ol><li><p>相对偏差评价法</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>u</mi><mi>i</mi></msub><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mtext> 效益型</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mtext> 成本型</mtext></mrow></mstyle></mtd></mtr></mtable></mrow><mspace linebreak="newline"></mspace><msub><mi>r</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>−</mo><msub><mi>u</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi></mrow><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>−</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow></mfrac><mo stretchy="false">(</mo><mtext>一列列进行处理</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">u_i=\begin{cases}max(x_i)\ 效益型\\min(x_i)\ 成本型\end{cases}\\r_{ij}=\frac{|x_{ij}-u_i|}{max(x_i)-min(x_i)}(一列列进行处理)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace"> </span><span class="mord cjk_fallback">效益型</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">min</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace"> </span><span class="mord cjk_fallback">成本型</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">min</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord cjk_fallback">一列列进行处理</span><span class="mclose">)</span></span></span></span></span></p><p>越小越小</p></li><li><p>相对优属度评价法</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>r</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>x</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mi mathvariant="normal">/</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mtext> 效益型</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><msub><mi>x</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mtext> 成本型</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>m</mi><mi>i</mi><mi>n</mi><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>−</mo><msub><mi>X</mi><mi>j</mi></msub><mi mathvariant="normal">∣</mi><mi mathvariant="normal">/</mi><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>−</mo><msub><mi>X</mi><mi>j</mi></msub><mi mathvariant="normal">∣</mi><mtext> 固定性</mtext></mrow></mstyle></mtd></mtr></mtable></mrow><mspace linebreak="newline"></mspace><msub><mi>X</mi><mi>j</mi></msub><mtext>是第</mtext><mi>j</mi><mtext>个指标的适度值。</mtext></mrow><annotation encoding="application/x-tex">r_{ij}=\begin{cases}x_{ij}/max(x_i)\ 效益型\\min(x_i)/x_{ij}\ 成本型\\min|x_{ij}-X_j|/|x_{ij}-X_j|\ 固定性\end{cases}\\X_j是第j个指标的适度值。</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.91em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35em;"><span style="top:-2.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.192em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.316em" style="width:0.8889em" viewBox="0 0 888.89 316" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V316 H384z M384 0 H504 V316 H384z"/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.316em" style="width:0.8889em" viewBox="0 0 888.89 316" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V316 H384z M384 0 H504 V316 H384z"/></svg></span></span><span style="top:-4.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.85em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace"> </span><span class="mord cjk_fallback">效益型</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">min</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord cjk_fallback">成本型</span></span></span><span style="top:-1.53em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">min</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord">∣/∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace"> </span><span class="mord cjk_fallback">固定性</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.91em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">是第</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mord cjk_fallback">个指标的适度值。</span></span></span></span></span></p><p>越大越好</p></li></ol><p>这两种与灰色关联分析法可以综合使用（得出的结果可能不同）</p><h3 id="主成分分析">主成分分析</h3><p>作用：数据的降维；数据的解释</p><p>主成分得出的综合指标数量与原指标数量一致，但是我们只取其中的一部分。</p><p>因子分析法得出的综合指标数量是被指定的。</p><p>主成分最终得出的指标的系数就是斜方差矩阵的特征向量。特征值除以特征值的总和就是贡献度。而这是由于当取特征向量的时候方差会最大，而这是我们所希望的。</p><p>一般选取主成分时有两种方式。</p><ol><li>累计贡献大于85%</li><li>特征根&gt;1</li></ol><p>使用主成分分析必须保证其成分之间是有关联的。</p><p>为了保证有关联，需要进行检验，一般有两种检验方式。</p><ol><li><p>kmo检验</p><p>若&gt;0.5，则非常适合。</p><p>若&gt;0.3，则可以，但不推荐。</p><p>若&lt;0.3，则不要。</p></li><li><p>bartlett’s检验</p><p>若&lt;0.05，则适合。</p><p>若&gt;0.05，则不适合。</p></li></ol><p>上述的两个检验满足任意一个即可。</p><p>（好像spss中会自动检验，如果勾选的话？）</p><p>实现：</p><p>SPSS中：</p><p>使用因子分析法，描述中勾选初始解，与检验，提取中勾选选择主成分，斜方差，可以调整特征值，旋转不用管，得分要选择回归，且显示得分。</p><p>直接观察总方差解释，其中总计就表示特征根。</p><p>而后成分矩阵即为实际的系数。</p><p>都使用重新标注的（经过处理后的）。</p><p>但这里的系数是因子分析法的，而主成分分析法的因子就是因子分析法的因子/开根号的特征根。</p><h3 id="变异系数法">变异系数法</h3><p>由于如果数据的区别非常大，那么更容易来区分，给予它一个更大的权重。</p><p>变异系数法以标准差/均值作为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">v_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>权重，最后对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">v_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>归一化，作为最终的权重<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p><p>但这必须保证重要性相当的情况。</p><h3 id="四种基本变量">四种基本变量</h3><ol><li>定类变量（其中的种类是平等的，没有高低之分的）</li><li>定序变量（其中的种类是有一个序的，但是不能定量）</li><li>定距变量（其中的种类是有一个序的，但是能定量）</li><li>定比变量（其中的种类是有一个序的，能定量，且存在0(没有)的概念，可以作乘除）</li></ol><p>方法使用分类：</p><table><thead><tr><th></th><th>定类</th><th>定序</th><th>定距</th></tr></thead><tbody><tr><td>定类</td><td>卡方类检验</td><td>卡方类检验</td><td>Eta</td></tr><tr><td>定序</td><td></td><td>spearman</td><td>spearman</td></tr><tr><td>定距</td><td></td><td></td><td>pearson</td></tr></tbody></table><ol><li><p>pearson</p><p>适用条件。测量的连续变量。正态分布数据。成对数据。线性关系。</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>r</mi><mo>=</mo><mfrac><mrow><mo>∑</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><mi>x</mi><mo stretchy="true">‾</mo></mover><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><mi>y</mi><mo stretchy="true">‾</mo></mover><mo stretchy="false">)</mo></mrow><msqrt><mrow><mo>∑</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><mi>x</mi><mo stretchy="true">‾</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>∑</mo><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><mi>y</mi><mo stretchy="true">‾</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></msqrt></mfrac><mspace linebreak="newline"></mspace><mi>t</mi><mo>=</mo><mfrac><mi>r</mi><msqrt><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msup><mi>r</mi><mn>2</mn></msup><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo></mrow></msqrt></mfrac></mrow><annotation encoding="application/x-tex">r=\frac{\sum(x_i-\overline{x})(y_i-\overline{y})}{\sqrt{\sum(x_i-\overline{x})^2\sum(y_i-\overline{y})^2}}\\t=\frac{r}{\sqrt{(1-r^2)/(n-2)}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.557em;vertical-align:-1.13em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.175em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.935em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-2.895em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.28em" viewBox="0 0 400000 1296" preserveAspectRatio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.305em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.13em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.2376em;vertical-align:-1.13em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1076em;"><span style="top:-2.175em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.935em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mclose">)</span></span></span><span style="top:-2.895em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.28em" viewBox="0 0 400000 1296" preserveAspectRatio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.305em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.13em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>r即为相关度，而t则需要t检验。当|t|&gt;<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>t</mi><mfrac><mi>a</mi><mn>2</mn></mfrac></msub></mrow><annotation encoding="application/x-tex">t_\frac{a}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0059em;vertical-align:-0.3908em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3341em;"><span style="top:-2.85em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6915em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3908em;"><span></span></span></span></span></span></span></span></span></span>时，则显著，若小于等于，则不显著。</p><p>r的取值与相关程度。取正为正相关，取负则负相关。</p><table><thead><tr><th>0.00-0.19</th><th>极低相关</th></tr></thead><tbody><tr><td>0.20-0.39</td><td>低度相关</td></tr><tr><td>0.40-0.69</td><td>中度相关8</td></tr><tr><td>0.70-0.89</td><td>高度相关</td></tr><tr><td>0.90-1.00</td><td>极高相关</td></tr></tbody></table></li><li><p>spearman</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>r</mi><mi>s</mi></msub><mo>=</mo><mn>1</mn><mo>−</mo><mfrac><mrow><mn>6</mn><mo>∑</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>y</mi><mi>i</mi></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><mi>n</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></mfrac><mspace linebreak="newline"></mspace><mi>t</mi><mo>=</mo><msub><mi>r</mi><mi>s</mi></msub><msqrt><mfrac><mrow><mi>n</mi><mo>−</mo><mn>2</mn></mrow><mrow><mn>1</mn><mo>−</mo><msubsup><mi>r</mi><mi>s</mi><mn>2</mn></msubsup></mrow></mfrac></msqrt></mrow><annotation encoding="application/x-tex">r_s=1-\frac{6\sum (x_i-y_i)^2}{n(n^2-1)}\\t=r_s\sqrt{\frac{n-2}{1-r_s^2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.4271em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4911em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.04em;vertical-align:-1.2119em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8281em;"><span class="svg-align" style="top:-5em;"><span class="pstrut" style="height:5em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.453em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.933em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.7881em;"><span class="pstrut" style="height:5em;"></span><span class="hide-tail" style="min-width:1.02em;height:3.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="3.08em" viewBox="0 0 400000 3240" preserveAspectRatio="xMinYMin slice"><path d="M473,2793c339.3,-1799.3,509.3,-2700,510,-2702 l0 -0c3.3,-7.3,9.3,-11,18,-11 H400000v40H1017.7s-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200c0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26s76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,606zM1001 80h400000v40H1017.7z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2119em;"><span></span></span></span></span></span></span></span></span></span></p><p>其中，xi与yi为其等级。n为样本量，当超过20时，要t检验。而检验基本与pearson一致。</p></li></ol><p>上述两种的实现在spss中分析-相关-双变量中直接调用即可解决，可以在样式中更改输出内容。</p><ol><li><p>卡方检验</p><p>实现：SPSS中分析-描述统计-交叉表，在统计中选择方法（卡方）。行是因变量，列是自变量。</p><p>当皮尔逊卡方的渐进显著性&lt;0.05时，则相关。</p><p>如果数据是频数的，可以使用数据-个案加权来处理。</p></li><li><p>Eta</p><p>实现：SPSS中分析-描述统计-交叉表，在统计中选择方法（相关性）。行是因变量，列是自变量。</p><p>Phi&gt;0.5，则相关。若Phi&gt;皮尔逊R，则关系更有可能为非线性。</p></li><li><p>偏相关</p><p>一个因素可能与多个因素相关，若是我们只想研究二者之间的相关性，那么就需要控制其他变量。</p><p>实现：spss中分析-相关-偏相关，变量中放入研究的几个变量，控制中放入需要控制的变量即可。（用的皮尔森？）</p><p>检验也是t检验，直接看表中的显著性即可。</p></li></ol><h3 id="神经网络：大数据">神经网络：大数据</h3><h3 id="元胞自动机：模拟">元胞自动机：模拟</h3><h3 id="马尔科夫：概率转移，我的建议是直接暴力😀">马尔科夫：概率转移，我的建议是直接暴力😀</h3><h3 id="国赛：颜色与物质浓度的辨识问题（回归-层次分析）">国赛：颜色与物质浓度的辨识问题（回归+层次分析）</h3><p>通过线性回归的置信区间，残差分析来确定数据的优劣，F,R^2,P,S^2，以及剔除点数量。</p><p>解释模型与代码，一一分析。</p><p>给出残差图，残差值，与四个指标，并给出原数据，在过程中如果有异常点，则剔除后再做一次，最后给出该回归模型。</p><p>通过分别尝试线性回归和二次回归来建立模型，比较优劣。</p><p>给出残差，显著性四个指标，并进行检验。</p><p>通过层次分析来确定非定量指标对于最终的影响因子。</p><p>层次分析图</p><h3 id="国赛：校园供水系统智能管理（回归-神经网络）">国赛：校园供水系统智能管理（回归+神经网络）</h3><p>对于找特征，需要涉及特征指标变量。在统计与计算过程中，可以列出，均值，方差，标准差，置信区间**？**(自由度=6/11)</p><p>并且要给出特诊指标变量的意义。</p><p>用图表表示给定数据。</p><p>回归过程中检验可以用SSE，SSR等更加专业的表示。</p><p>回归图中画出理论，实际与置信区间</p><p>神经网络写出模型建立，以及训练过程的图，与最终的结果。</p><h3 id="国赛：葡萄酒质量的评价（回归，聚类，双因子可重复方差分析？）">国赛：葡萄酒质量的评价（回归，聚类，双因子可重复方差分析？）</h3><p>回归前可以使用皮尔森或其他相关性分析去掉几个变量。</p><h3 id="国赛：风电场运行状况分析及优化研究">国赛：风电场运行状况分析及优化研究</h3><p>在优化时考虑实际。</p><h3 id="国赛：葡萄酒质量的评价">国赛：葡萄酒质量的评价</h3><p>用正态分布检验来看统计结果</p><h3 id="遗传算法解决非线性规划与多目标规划">遗传算法解决非线性规划与多目标规划</h3><h3 id="信息不完全、不充分的预测系统——灰色预测">信息不完全、不充分的预测系统——灰色预测</h3><h3 id="校赛：">校赛：</h3><ol><li>战争<ol><li><p>兰彻斯特</p></li><li><p>仿真模拟</p><p><a href="%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%20093740f9344540a5b780855aa3d048d3/System_Dynamics_and_Multi-Agent_Simulation_Research_on_Ground_CombatPersonnel_Attrition.pdf">System Dynamics and Multi-Agent Simulation Research on Ground CombatPersonnel Attrition.pdf</a></p></li><li><p>神经网络/回归预测</p></li><li><p>蒙特卡罗试验？</p></li><li><p>系统动力学</p></li></ol></li><li>共享单车<ol><li><p>（违规区域的划分与罚款金额的制定）</p></li><li><p>根据人的流量来进行投放（多商品流网络流(线性规划)，还要在最小成本的情况下，根据堵塞情况来决定流量大小，或者直接不要流量限制，直接最小成本）</p><p><img src="/image/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1Untitled%2015.png" alt=""></p><p><img src="/image/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1Untitled%2016.png" alt=""></p></li><li><p>对于各品牌的投放策略的改变（因为常常有有蓝车没绿车，有绿车没蓝车的情况）(博弈?)</p></li><li><p>预测使用需求（各种预测模型，小样本灰色）</p></li><li><p>马尔科夫来预测车辆损坏情况来确定维修策略</p></li></ol></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>算法</title>
    <link href="/%E7%AE%97%E6%B3%95/"/>
    <url>/%E7%AE%97%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p><a href="https://lhish.github.io/hide/%E5%86%85%E7%9C%81%E6%8E%92%E5%BA%8F">内省排序</a></p><p><a href="https://lhish.github.io/hide/%E4%B8%89%E8%B7%AF%E6%8E%92%E5%BA%8F">三路排序</a></p><p><a href="https://lhish.github.io/hide/nth_element">nth_element</a></p><p><a href="https://lhish.github.io/hide/%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F">希尔排序</a></p><p><a href="https://lhish.github.io/hide/timsort">timsort</a></p><p><a href="https://lhish.github.io/hide/A">A*</a></p><p><a href="https://lhish.github.io/hide/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%93%88%E5%B8%8C%E7%9B%B8%E5%85%B3">字符串哈希相关</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>系统结构</title>
    <link href="/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/"/>
    <url>/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/</url>
    
    <content type="html"><![CDATA[<p>选择</p><p>判断</p><p>简答</p><p>应用</p><p>编程openmp(简单)</p><p>综合</p><p>算</p><p>非线性流水线</p><p>单级互联网络</p><p>多级互连网络(分析)</p><p>流水线相关性处理</p><p>cache-主存</p><p>概念性</p><p><img src="/image/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84CleanShot_2025-05-29_at_19.43.23.png" alt=""></p><p><img src="/image/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84CleanShot_2025-05-29_at_19.44.23.png" alt=""></p><p><img src="/image/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84CleanShot_2025-05-29_at_19.45.51.png" alt=""></p><p>模拟：用机器语言程序解释实现机器指令，灵活性大，几乎全部机器，但速度慢</p><p>仿真：用微程序去直接解释机器指令，只能在系统结构差别不大的机器，但速度快</p><p>冯•诺依曼体系结构运算器（ALU）、控制器（CU）、存储器（MEM）和输入/输出设备（IN/OUT）</p><p>存储程序，顺序执行</p><p><img src="/image/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84CleanShot_2025-05-29_at_19.54.51.png" alt=""></p><p><img src="/image/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84CleanShot_2025-05-29_at_19.55.19.png" alt=""></p><p>Amdahl 定律：</p><p><img src="/image/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84CleanShot_2025-05-29_at_19.57.56.png" alt=""></p><p><img src="/image/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84CleanShot_2025-05-29_at_19.59.19.png" alt=""></p><p><img src="/image/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84CleanShot_2025-05-29_at_19.59.39.png" alt=""></p><p>cpu内部互连</p><p>星型→环形(无需中间节点中转，核数不能太多≤12)</p><p><img src="/image/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84CleanShot_2025-05-29_at_20.01.28.png" alt=""></p><p><img src="/image/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84CleanShot_2025-05-29_at_20.02.37.png" alt=""></p><p><img src="/image/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84CleanShot_2025-05-29_at_20.05.46.png" alt=""></p><p>GPU 适用于计算粒度大、通信量小、并行度比较高、较少访问内存的计算</p><p>全相联映像，直接映像和组相联映像(特点！）</p><p><img src="/image/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84CleanShot_2025-05-29_at_20.08.31.png" alt=""></p><p>由于 Cache 的地址变换和块替换算法的实现均依靠硬件，故“Cache-主存”层次对系统程序员和用户都是透明的，且Cache 对CPU 与主存间的信息通信也是透明的。</p><p>3.4.7 Cache 性能计算（看懂例子💦）（问法变化）（例3-3，3-4 ，3-6不用看）</p><p><img src="/image/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84CleanShot_2025-05-29_at_20.14.49.png" alt=""></p><p>哪些是以及为什么</p><p>流水线的基本特点（理解）（注意如果时间不相等就不是流水线的特点了）</p><p><img src="/image/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84CleanShot_2025-05-29_at_21.17.40.png" alt=""></p><p>并不会减少单次的时间，只会减少总体的</p><p>评价指标：吞吐率（计算，任务数/时间(花费时间)），加速比，效率</p><p><img src="/image/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84CleanShot_2025-05-29_at_21.20.54.png" alt=""></p><p>只要是连续进入流水线的。</p><p>标量处理机：</p><p><img src="/image/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84CleanShot_2025-05-29_at_21.22.29.png" alt=""></p><p>超标量处理机：（同时发射m条）</p><p><img src="/image/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84CleanShot_2025-05-29_at_21.23.02.png" alt=""></p><p><img src="/image/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84CleanShot_2025-05-29_at_21.24.03.png" alt=""></p><p>超流水线处理机：（同时发射一条）</p><p><img src="/image/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84CleanShot_2025-05-29_at_21.23.22.png" alt=""></p><p><img src="/image/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84CleanShot_2025-05-29_at_21.24.13.png" alt=""></p><p>非线性！！！</p><p>数据相关：写读/读写相关，即用同一个变量或寄存器</p><p><strong>！！！标量流水线，如果碰到循环，怎么去插入延时处理。所有预取指令都要作废，</strong></p><p>？</p><p><img src="/image/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84CleanShot_2025-05-29_at_21.43.28.png" alt=""></p><p>在多核中，关于cache一致性问题，不能用写回法，只能写直达？</p><p>raid通过数据备份和分布存储来提高可靠性和性能的系统。</p><p>计算机系统提高并行性的措施：时间重叠（流水线），资源重复（多核/gpu），资源共享（分时系统）</p><p>并行处理机也称 SIMD 计算机，因为它是用一个控制器控制多个处理单元构成的阵列，所以也称阵列处理机。通过重复设置大量相同的PE，将它们按一定方式互连成阵列，在单一CU控制下，阵列内各个PB 过各自所分配的不同数据并行执行同一条指令规定的操作。</p><p><img src="/image/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84CleanShot_2025-05-29_at_21.57.08.png" alt=""></p><p><img src="/image/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84CleanShot_2025-05-29_at_21.57.17.png" alt=""></p><p><img src="/image/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84CleanShot_2025-05-29_at_21.57.24.png" alt=""></p><p><img src="/image/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84CleanShot_2025-05-29_at_21.57.32.png" alt=""></p><p>注意英文，注意混用</p><p><img src="/image/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84CleanShot_2025-05-29_at_21.58.30.png" alt=""></p><p><img src="/image/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84CleanShot_2025-05-29_at_21.58.37.png" alt=""></p><p><img src="/image/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84CleanShot_2025-05-29_at_21.59.01.png" alt=""></p><p>MPI编程的常见API的含义(比如reduce)</p><p><img src="/image/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84CleanShot_2025-05-29_at_22.36.41.png" alt=""></p><p><img src="/image/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84CleanShot_2025-05-29_at_22.00.58.png" alt=""></p><p><img src="/image/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84CleanShot_2025-05-29_at_22.01.07.png" alt=""></p><p><img src="/image/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84CleanShot_2025-05-29_at_22.01.14.png" alt=""></p><p><img src="/image/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84CleanShot_2025-05-29_at_22.01.20.png" alt=""></p><p><img src="/image/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84CleanShot_2025-05-29_at_22.01.26.png" alt=""></p><p><img src="/image/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84CleanShot_2025-05-29_at_22.01.35.png" alt=""></p><p>linpack测试是什么，是干什么的，会用到哪些程序包，全称是什么，缩写是什么，原理是什么，怎么进行测试的</p><p>关于系统发展中，单核多核适合什么，cpu,gpu适合什么可以思考一下</p><p>集群通过高速互联网络来连接计算机通过消息传递机制向用户提供单一的编程环境计算资源</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>线性代数</title>
    <link href="/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/"/>
    <url>/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<h3 id="矩阵相乘">矩阵相乘</h3><p>当对一个线性空间进行线性变换的时候，可以将i和j变换看做整个空间的变换，因为线性的等式在变换后仍然保持不变。</p><p>另外，假如说i和j变换为了i’和j’，那么对于一个向量的变换就相当于左乘[i’ j’]，这是一个n阶方阵。</p><p>另外，如果对一个空间连续做几次变换，将这些变换方阵相乘实际上就是总的变换，但后变换的永远都是左乘。</p><p>矩阵乘积实际就是变换相加，假设后面一个矩阵是基的i和j，然后前面的矩阵分别对这两个基向量进行变换得到新的i’和j’。</p><h3 id="行列式">行列式</h3><p>行列式的值就代表一个变换对于原线性空间里的任意面积在变换后也就是新的线性空间内的面积的比值，比如说行列式为6就代表变换后面积会变为原来的6倍。因此，如果说行列式等于零，就说明变换后面积等于0，也就是维度降低了，也就是这个变换矩阵线性相关了。</p><p>当行列式的值为负数的时候，就说明空间整个被翻转了，比如二维平面就是另一个面朝上了。或者说，基向量的相对方向已经变了。</p><p>而在三维空间就是体积了。而三维中负值就是原本是右手定则，现在变成左手定则了。</p><h3 id="线性方程组">线性方程组</h3><p>就是一个未知向量乘上一个变换矩阵得到一个特定的向量，那么一般情况下我们求这个未知向量就是将这个变换矩阵的逆左乘这个特定的向量。这个变换矩阵的逆就是逆变换，也就是反着变换，也因此正变换一次，反变换一次，就相当于没变换，也就是单位矩阵，也就是 恒等矩阵。</p><p>整一个线性方程组就是未知向量能由正变换变为已知向量，那么要求未知向量就是将已知向量逆变换一下就得到了。</p><p>当行列式不为0时，变换后仍然是一整个线性空间，因此有且仅有一个解。</p><p>当行列式为0的时候，线性空间的维度就降低了，当且仅当我们的已知向量在这个被降低的新的线性空间上的时候，它才有可能有解。</p><p>而若是当行列式为0，但是已知向量不在这个被降低的新的线性空间的时候，就会导致逆变换的时候一个输入对应多个输出的情况，这是不可能的。</p><h3 id="秩与列空间">秩与列空间</h3><p>秩代表了在经过这个变换矩阵的变换后线性空间的维数，比如秩为1就是变换后事一根直线。</p><p>实际上，变换矩阵本身假设作为一个线性空间的基，那么它能伸展出的维数和别的线性空间通过它来变换延展出的维数时相同的，这很显然。</p><p>因此，列空间就代表变换矩阵的每一个列作为一个向量所组成的基延展出的线性空间。</p><p>而秩实际上是这个列空间的维数。</p><p>而零空间就是指在经过这个变换后会落在0向量上的点所组成的线性空间，而这组成的空间也必然是一个线性空间。</p><h3 id="非方阵">非方阵</h3><p>一个非方阵代表底维向高维的变换或者高维向底维的变换。</p><p>底维向高维的变换实际上是变换到高维中的一个底维空间中。</p><p>而高维到底维就是会产生1对多的情况。</p><h3 id="点积">点积</h3><p>点积是两个向量之间相乘。</p><p>但假如说，我们将其中一个向量看做是一个变换矩阵，那么代表了一个高维到一维的转换，实际上，就是一种投影。假设这个变换矩阵是单位长的，那么这个投影就是垂直的，然后在乘上这个变换矩阵的模，就是实际的投影的。</p><h3 id="叉积">叉积</h3><p>评价是挺有道理的，但是没完全理解，但不是那么的重要。</p><h3 id="空间变换">空间变换</h3><p>如果我们想对别的空间进行变换，那么首先先将别人的基向量换为我们的空间中的语言，对变换的基向量进行变换，然后再转回为他们空间的语言。这得出来的变换矩阵就是在对方空间实际的变换矩阵。用数学表示就是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>A</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mi>M</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">A^{-1}MA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span></span></span></span>，A为变换为我们空间的矩阵，M为我们希望的变换矩阵。</p><h3 id="特征值和特征向量">特征值和特征向量</h3><p>特征向量就是在一个空间中经过变换后方向仍然不会变，但是可能长度会变的向量的集合。</p><p>特征值就是这个长度变化的比例。</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>v</mi><mo>=</mo><mi>λ</mi><mi>v</mi></mrow><annotation encoding="application/x-tex">Av=\lambda v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">λ</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span>实际上就是说v经过A的变换还是v的倍数。</p><p>而这一点很重要，比如在三维中，特征向量的方向实际上就是旋转轴。</p><p>当将其转为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>A</mi><mo>−</mo><mi>λ</mi><mi>I</mi><mo stretchy="false">)</mo><mi>v</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">(A-\lambda I)v=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">λ</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>时，由于前面线性方程组已经说了，当且仅当降为的时候，才有非0向量变为0向量，因此<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>−</mo><mi>λ</mi><mi>I</mi></mrow><annotation encoding="application/x-tex">A-\lambda I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">λ</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span>的行列式必须等于0。</p><p>如果说，解出来<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">λ</span></span></span></span>是一个复数，那么就涉及到了旋转，在这里不赘述。</p><p>对于一个方阵来说，我们希望求以它为变换矩阵变换了n次的结果，那么首先获得它的特征向量，假如说它的特征向量能延展到整个空间，就可以继续，那么首先将这个变换矩阵变换为以它的特征向量作为基向量的变换矩阵，在以它的特征向量为基向量的空间中，这个变换并没有进行旋转，只进行了缩放操作，因为在原空间中，这两个基向量所在的方向上并没有旋转，因此在那个空间里也是。因此就很容易计算了。最后再变换回来就好了</p><h3 id="抽象向量">抽象向量</h3><p>向量是指一切满足线性也就是可加性和数乘的抽象概念。比如可以扩展到函数啊，各种其他的上面。这些“向量”也必然满足线性得出来的一些结论。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>线性规划</title>
    <link href="/%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92/"/>
    <url>/%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92/</url>
    
    <content type="html"><![CDATA[<p>线性规划有两种形式：</p><ol><li><p>标准型：</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mi>m</mi><mi>i</mi><mi>z</mi><mi>e</mi><mtext> </mtext><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>c</mi><mi>j</mi></msub><msub><mi>x</mi><mi>j</mi></msub><mspace linebreak="newline"></mspace><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>a</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><msub><mi>x</mi><mi>j</mi></msub><mo>≤</mo><msub><mi>b</mi><mi>i</mi></msub><mtext> </mtext><mo separator="true">,</mo><mtext> </mtext><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>m</mi><mspace linebreak="newline"></mspace><mtext>           </mtext><msub><mi>x</mi><mi>j</mi></msub><mo>≥</mo><mn>0</mn><mtext> </mtext><mo separator="true">,</mo><mtext> </mtext><mi>j</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">maxmize\ \sum_{j=1}^nc_jx_j\\\sum^n_{j=1}a_{ij}x_j\le b_i\ ,\ i=1,2,\dots,m\\\ \ \ \ \ \ \ \ \ \ \ x_j\ge0\ ,\ j=1,2,\dots,n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0652em;vertical-align:-1.4138em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mord mathnormal">mi</span><span class="mord mathnormal">ze</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:3.0652em;vertical-align:-1.4138em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.9221em;vertical-align:-0.2861em;"></span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord">0</span><span class="mspace"> </span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span></span></span></span></span></p></li></ol><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mi>m</mi><mi>i</mi><mi>z</mi><mi>e</mi><mtext> </mtext><msup><mi>c</mi><mi>T</mi></msup><mi>x</mi><mspace linebreak="newline"></mspace><mi>A</mi><mi>x</mi><mo>≤</mo><mi>b</mi><mspace linebreak="newline"></mspace><mtext>   </mtext><mi>x</mi><mo>≥</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">maxmize\ c^Tx\\Ax\le b\\\ \ \ x\ge0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8913em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mord mathnormal">mi</span><span class="mord mathnormal">ze</span><span class="mspace"> </span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal">x</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></span></p><pre><code class="hljs">   要化为标准型，要克服一下困难。</code></pre><ol><li><p>目标函数不是最大化，而是最小化。</p><p>将所有的都取负。</p></li><li><p>变量不具有非负约束。</p><p>将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">x_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>转为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>x</mi><mi>j</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>−</mo><msubsup><mi>x</mi><mi>j</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">x_j&#x27;-x_j&#x27;&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1467em;vertical-align:-0.3948em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3948em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1467em;vertical-align:-0.3948em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3948em;"><span></span></span></span></span></span></span></span></span></span>，这两个引入的变量有非负约束。</p></li><li><p>有等式约束</p><p>将其转为一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≤</mo><mtext>和一个</mtext><mo>≥</mo><mtext>。</mtext></mrow><annotation encoding="application/x-tex">\le和一个\ge。</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord cjk_fallback">和一个</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">。</span></span></span></span></p></li><li><p>松弛型</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mi>m</mi><mi>i</mi><mi>z</mi><mi>e</mi><mtext> </mtext><mi>z</mi><mo>=</mo><mi>v</mi><mo>+</mo><munder><mo>∑</mo><mrow><mi>j</mi><mo>∈</mo><mi>N</mi></mrow></munder><msub><mi>c</mi><mi>j</mi></msub><msub><mi>x</mi><mi>j</mi></msub><mtext>      </mtext><mspace linebreak="newline"></mspace><mtext>                        </mtext><msub><mi>x</mi><mi>i</mi></msub><mo>=</mo><msub><mi>b</mi><mi>i</mi></msub><mo>−</mo><munder><mo>∑</mo><mrow><mi>j</mi><mo>∈</mo><mi>N</mi></mrow></munder><msub><mi>a</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><msub><mi>x</mi><mi>j</mi></msub><mo separator="true">,</mo><mi>i</mi><mo>∈</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">maxmize\ z=v+\sum_{j\in N}c_jx_j\ \ \ \ \ \ \\\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ x_i=b_i-\sum_{j\in N}a_{ij}x_j,i\in B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mord mathnormal">mi</span><span class="mord mathnormal">ze</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.4804em;vertical-align:-1.4304em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8557em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4304em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.4804em;vertical-align:-1.4304em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8557em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4304em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span></span></p></li></ol><p>松弛型就是对于每一个标准型中的约束引入一个有非负约束的松弛变量来将其改写为等式约束，并且依此改写目标函数。其中，等式左侧的松弛变量是基本变量，而右边的则为非基本变量，最终目标函数中只允许出现非基本变量。其中，B为基本变量的下标集合，而N为非基本变量的下标集合。</p><p>实际上所有的变量都是非负约束的。</p><p>后续中用（N, B, A, b, c, v)来表示一个松弛型。</p><h3 id="一些问题用线性规划解决">一些问题用线性规划解决</h3><ol><li><p>最小费用流</p><p>是对于最大流的一个推广。不再是求最大流，而是在汇点要求一定流的情况下，要求成本最小，这是由于现在每条路径上都存在一个单位流成本。</p></li><li><p>多商品流</p><p>对于最小费用流的一个推广。现在有多种流，但每种流的源节点和汇点不一定相同，但流共享容量。不再需要最小化成本，只需给出一个方案即可。看起来这个并没有目标函数，但实际上，只不过它的目标函数是一个用0替代的常数罢了，所以仍然是一个线性规划。</p></li></ol><h3 id="单纯形算法">单纯形算法</h3><p>对于一个松弛型的线性规划来说，基本解是非基本变量都为0，而基本变量根据非基本变量求出。如果这个基本解是一个可行解，那么称之为可行基本解。</p><p>单纯形算法由一个可行基本解出发，不断将松弛型更改为一个等价的松弛型来缩小可行域的范围(我是这么理解的)。</p><p>而更改松弛型的方式就是转动。将一个基本变量替入其中(变为非基本变量，放到等式右侧)，将一个非基本变量换出（变为非基本变量，放到等式左侧)。</p><p>这个过程的实质就是缩小范围。对于目标函数中系数为正的变量，我们希望其越大越好。而系数为负的变量，我们希望其越小越好，实际上取0即可，因为非负约束。而对于一个系数为正的变量，我们将其增大，而唯一的限制就是所有基本变量的非负约束，我们取对该非基本变量限制最严格的基本变量替入，也就是让该非基本变量变为部分取决于限制最严格的基本变量，其范围也就自然而然被缩小了，缩小为当前限制体现出来不可能的部分。</p><p>当在目标函数中所有自变量的系数都为负数时，其就是最优解了，因为存在一个非负约束，导致最大值就是v。</p><p><strong>无界的情况：当对于某一个系数为正的非基本变量寻找对于它最严格的基本变量的约束时，若发现没有约束或者负相关时，也就是这个非基本变量能够无限增大，也就是说，目标函数可以无限增大，此时无界。</strong></p><p>按理来说，由于松弛型最多只有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>C</mi><mrow><mi>n</mi><mo>+</mo><mi>m</mi></mrow><mi>m</mi></msubsup></mrow><annotation encoding="application/x-tex">C_{n+m}^m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9887em;vertical-align:-0.3053em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.453em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">m</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3053em;"><span></span></span></span></span></span></span></span></span></span>种，n为非基本变量数量，m为基本变量数量，因此循环最多就进行松弛型的种类数。但是有时会出现循环的情况，此时我们可以通过每次都选择具有最小下标的非基本变量这一策略，这一策略能保证不会出现无限循环的情况，在此不做证明。</p><h3 id="对偶性">对偶性</h3><p>对于一个规划问题，原问题是求最大值。则其对偶问题就是求其最小值，且其最优值就是原问题的最大值。对偶问题不唯一，因为实际上要求很少。但是我们针对一个规划问题，去找他的对偶问题实际上是为了简化，并且实际上对偶问题本身也很难找，在我们本身并不知道最优值是多少的情况下。</p><p>常用的有拉格朗日对偶。</p><p>在此处，算法导论使用的对偶比较特殊，是专门针对线性规划问题的。</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>m</mi><mi>i</mi><mi>n</mi><mi>m</mi><mi>i</mi><mi>z</mi><mi>e</mi><mtext> </mtext><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><msub><mi>b</mi><mi>i</mi></msub><msub><mi>y</mi><mi>i</mi></msub><mspace linebreak="newline"></mspace><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><msub><mi>a</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><msub><mi>y</mi><mi>i</mi></msub><mo>≥</mo><msub><mi>c</mi><mi>j</mi></msub><mtext> </mtext><mo separator="true">,</mo><mtext> </mtext><mi>j</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>m</mi><mspace linebreak="newline"></mspace><mtext>           </mtext><msub><mi>y</mi><mi>i</mi></msub><mo>≥</mo><mn>0</mn><mtext> </mtext><mo separator="true">,</mo><mtext> </mtext><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">minmize\ \sum_{i=1}^mb_iy_i\\\sum^m_{i=1}a_{ij}y_i\ge c_j\ ,\ j=1,2,\dots,m\\\ \ \ \ \ \ \ \ \ \ \ y_i\ge0\ ,\ i=1,2,\dots,n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mord mathnormal">minmi</span><span class="mord mathnormal">ze</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9456em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.1944em;"></span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord">0</span><span class="mspace"> </span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span></span></span></span></span></p><p>这就是标准型的对偶问题。</p><p>首先很轻松可以证明，原问题的目标函数必然小于等于该对偶问题的目标函数。证明见附录图1。</p><p>此时，只要我们能够证明其最大值与最小值是相等的，我们就可以证明这个最大值和最小值是最优解。因为互相限制。</p><p>为了证明这一点，我们首先需要求出对偶问题的解。</p><p>假设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>c</mi><mi>j</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup></mrow><annotation encoding="application/x-tex">c_j&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1467em;vertical-align:-0.3948em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3948em;"><span></span></span></span></span></span></span></span></span></span>是最后松弛型的系数，那么<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="true">‾</mo></mover><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><msubsup><mi>c</mi><mrow><mi>n</mi><mo>+</mo><mi>i</mi></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mtext>    若</mtext><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mi>i</mi><mo stretchy="false">)</mo><mo>∈</mo><mi>N</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mtext>            其他</mtext></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">\overline{y_i}=\begin{cases}-c_{n+i}&#x27;\ \ \ \ 若(n+i)\in N\\0\ \ \ \ \ \ \ \ \ \ \ \ 其他 \end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.825em;vertical-align:-0.1944em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">−</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mord cjk_fallback">若</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mord cjk_fallback">其他</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>。</p><p>经过数学证明，可以证明两个最优值相等，且对偶问题的解是可行的。证明见附录图2。</p><h3 id="可行初始解">可行初始解</h3><p>到目前为止，还差最后一块拼图，那就是最初的可行初始解怎么确定，因为当非基本变量全取0的时候可能并不是一个可行初始解。</p><p>但实际上，这样的一个可行初始解相当难找，因此我们构造一个“没有目标”的线性规划来找到任意一组可行初始解。</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mi>m</mi><mi>i</mi><mi>z</mi><mi>e</mi><mtext>    </mtext><mo>−</mo><msub><mi>x</mi><mn>0</mn></msub><mtext>                 </mtext><mspace linebreak="newline"></mspace><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>a</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><msub><mi>x</mi><mi>j</mi></msub><mo>−</mo><msub><mi>x</mi><mn>0</mn></msub><mo>≤</mo><msub><mi>b</mi><mi>i</mi></msub><mtext> </mtext><mo separator="true">,</mo><mtext> </mtext><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>m</mi><mtext>             </mtext><mspace linebreak="newline"></mspace><mtext>           </mtext><msub><mi>x</mi><mi>j</mi></msub><mo>≥</mo><mn>0</mn><mtext> </mtext><mo separator="true">,</mo><mtext> </mtext><mi>j</mi><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">maxmize\ \ \ \ -x_0\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \\\sum^n_{j=1}a_{ij}x_j-x_0\le b_i\ ,\ i=1,2,\dots,m\ \ \ \ \ \ \ \ \ \ \ \ \ \\\ \ \ \ \ \ \ \ \ \ \ x_j\ge0\ ,\ j=0,1,2,\dots,n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mord mathnormal">mi</span><span class="mord mathnormal">ze</span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:3.0652em;vertical-align:-1.4138em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.786em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.9221em;vertical-align:-0.2861em;"></span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord">0</span><span class="mspace"> </span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span></span></span></span></span></p><p>由于限制了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub><mo>≥</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">x_0\ge0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.786em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>，因此若是达到最大化，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">x_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>=0。而此时求出的其他x也是满足约束条件的，因此是一个可行解。若是最优值不能达到0，那么就是没有可行解的。</p><p>流程：</p><ol><li>是否所有b都$\ge$0，如果是，则非基本变量全0是一组可行解。</li><li>否则构造上述线性规划问题。</li><li>用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">x_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>替入替换<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>l</mi></msub><mo separator="true">,</mo><mi>l</mi><mo>=</mo><mi>n</mi><mo>+</mo><mi>k</mi><mo separator="true">,</mo><mi>k</mi><mtext>为最小的</mtext><mi>b</mi><mtext>的下标</mtext></mrow><annotation encoding="application/x-tex">x_l,l=n+k,k为最小的b的下标</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord cjk_fallback">为最小的</span><span class="mord mathnormal">b</span><span class="mord cjk_fallback">的下标</span></span></span></span>，此时基本变量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>l</mi></msub></mrow><annotation encoding="application/x-tex">x_l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>将是最小的基本变量，初始解为全0。</li><li>可以证明，在第三步结束所得的解将会变为一个对于该问题的可行解。证明见附录图3。</li><li>求出辅助线性规划的最优值，判断是否是0</li><li>若是0，则通过转动将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">x_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>变为非基本变量。</li><li>否则无解。</li></ol><h2 id="附录">附录</h2><hr><p><img src="/image/%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92Untitled.png" alt=""></p><p>图1</p><hr><p><img src="/image/%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92Untitled%201.png" alt=""></p><p>图2</p><hr><p><img src="/image/%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92Untitled%202.png" alt=""></p><p>图3</p><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>网络流</title>
    <link href="/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    <url>/%E7%BD%91%E7%BB%9C%E6%B5%81/</url>
    
    <content type="html"><![CDATA[<p>网络流是一张模拟运输或流动的图。其边的权重代表边的容量。一般我们将其看做一个水流系统。有一个源节点和一个汇点（流出点）。每一条边上的流量不能超过容量，而每一个节点也不能存储任何水量。另外，这张图不存在自循环，且不存在反平行边(一对边(u,v)与(v,u))。</p><p>而对于任意一个节点，流入量等于流出量。</p><p>如果遇到反平行边，可以将其中一条边中加入一个新的节点来避免反平行边。</p><p>而若是有多个源节点和多个汇点，则可以建一个超级源节点和超级汇点，其分别指向源节点和被汇点指向，边权为无限即可。</p><h2 id="Ford-Fulkerson">Ford-Fulkerson</h2><p>一个流是一个从源节点到汇点的一条路径。并且这条路径有一个大小，也就是水流的大小，水流的大小必须小于路径上最小的容量。</p><h3 id="残存网络">残存网络</h3><p>对于一个网络流，它所有的边都是单向的。我们将其补全为双向的，顺其方向的路径上的权重表示这条路径上流的大小，而逆其方向的路径(不存在于网络流中的)权重表示这条路径上还能通过的流的大小，也就是容量减去流的大小。</p><p>这样形成的图被称为残存网络。</p><h3 id="增广路径">增广路径</h3><p>残存网络中的一个流就是原网络流中的一个增加流。</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>f</mi><mo>↑</mo><msup><mi>f</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>+</mo><msup><mi>f</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>−</mo><msup><mi>f</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>v</mi><mo separator="true">,</mo><mi>u</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(f↑f&#x27;)(u,v)=f(u,v)+f&#x27;(u,v)-f&#x27;(v,u)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">↑</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">u</span><span class="mclose">)</span></span></span></span>，因为残存网络中的逆向流就是减少流，正向流就是增加流。</p><p>另外，由于该流是在残存网络中的一个流，所以最终肯定是汇入汇点的，因此汇点的流量大小是增加的，这样的流被称为增广路径。</p><p>只要不断地在残存网络中找这样的增广路径并将其增加到原网络流中，汇点的流就是不断增加的，直到找不到这样的增广路径，此时就是最大流了。</p><h3 id="最小割">最小割</h3><p>一个割就是将所有的节点分为两个部分，源节点和汇点必须属于任意一个部分。</p><p>假设源节点所在的部分为S，汇点所在的部分为T。净流量的大小就等于S→T的流量减去T→S的流量。由于流量在路上是没有损失的，也就是说S和T的内部流量都是这么多，因此净流量的大小对于任何割都是一样的(这很显然)。因此净流量的大小就是网络流中流的大小。</p><p>我们假定对于一个割来说，它的容量为S→T的容量和，因此它肯定是大于割的净流量的，因为净流量&lt;S→T的流量&lt;S→T的容量和，因此最大流的大小受最小割的容量限制，也就是最大流的值等于最小割的容量。</p><p>这一点与不存在增广路径是等价的。这一点对于线性规划来解网络流非常关键。</p><h3 id="实现">实现</h3><p>一般使用深搜的方法来寻找增广路径，因为只需要找到任意一个路径就可以了。不断寻找并更新网络流和残存网络，直到增广路径不存在。</p><p>由于每次增广路径为整体流的贡献至少为一个单位，因此整体增广路径的次数为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><msup><mi>f</mi><mo>∗</mo></msup><mi mathvariant="normal">∣</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(|f^*|)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>f</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">f^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>为最大流。而每一次寻找增广路径并更新的复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(E)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span></span></span></span>，总体的复杂度就是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>E</mi><mi mathvariant="normal">∣</mi><msup><mi>f</mi><mo>∗</mo></msup><mi mathvariant="normal">∣</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(E|f^*|)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mclose">)</span></span></span></span>，这复杂度非常玄学。</p><h2 id="Edmonds-Karp">Edmonds-Karp</h2><p>选择增广路径选择从源节点到汇点的最短路，这里的最短路是指假设所有的边的权重都为1的情况下。</p><p>可以证明源节点到任意节点的最短路径必然是随着操作的进行而单调递增的(算法导论引理26.7，证明没懂）。</p><p>我们称一条边为关键边当且仅当这条边在增广路径上且容量最小。</p><p>如果流量增加了一次，那么必然至少有一条边成为了关键边。因此流量增加次数小于等于所有边成为关键边的次数。</p><p>当我们假设一条边成为了关键边，那么它残存网络上这条边就会成为0。如果希望它第二次成为关键边，那么反向边必须已经在增广路径上出现过一次。因为只有这样它的权重才不会为0了。</p><p>由上述的引理26.7可知，每个循环所有节点的最短路径都不会减小。另外，假设某一条路径是源节点到汇点的最短路，那么这条路径也必然是源节点到这个节点的最短路，假设某条关键边的两边节点分别为u和v，那么第一次成为关键边时<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi><mo stretchy="false">(</mo><mi>u</mi><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn><mo>=</mo><mi>δ</mi><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\delta(u)+1=\delta(v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span>，而为了保证它第二次成为关键边，那么，在反向路出现在增广路径中时<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>δ</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn><mo>=</mo><msup><mi>δ</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>u</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\delta&#x27;(v)+1=\delta&#x27;(u)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mclose">)</span></span></span></span>，而<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi><mo stretchy="false">(</mo><mi>v</mi><msup><mo stretchy="false">)</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>≥</mo><mi>δ</mi><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\delta(v)&#x27;\ge\delta(v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span>，因此一次成为关键边u的最短路至少增加2，但最短路径必然是少于整体节点数的（最短路径对于每一个节点最多经过一次），因此一条边最多进行节点数/2个循环。而总共有E条边，因此最多总共<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>V</mi><mi>E</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(VE)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span></span></span></span>次循环。总体就是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>V</mi><msup><mi>E</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(VE^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>强联通分量</title>
    <link href="/%E5%BC%BA%E8%81%94%E9%80%9A%E5%88%86%E9%87%8F/"/>
    <url>/%E5%BC%BA%E8%81%94%E9%80%9A%E5%88%86%E9%87%8F/</url>
    
    <content type="html"><![CDATA[<p>强联通分量指的是一个有向图中的一部分节点，而任意两个其中的节点互相的路径是相通的，既能从一个节点到另一个节点，也可以从另一个节点到这个节点。</p><p>一个图必然能够被分为几个强联通分量的组合，而若是将这几个强联通分量的节点聚合为一个节点，就会得到一个有向无环图，称为分量图。</p><p>求出强联通分量的方法如下：</p><p>首先对图进行深搜，对于每一个节点记录到达顺序和离开顺序，离开顺序和到达顺序共用一个顺序。</p><p>根据这个离开顺序，倒序进行一次深搜，不过深搜的是原图的转置(所有的边的方向都变成原来的反向)。在这种情况下，所能搜索到的必然是一个强联通分量里的所有节点，将这一部分剥离出来后，继续选择剩下的中离开顺序最后的，进行相同的操作。</p><p>原理：</p><p>首先强联通分量之间的边上的那个节点(假设深搜树走了这条边，否则就选择离开顺序最后的那个节点），设其离开顺序为f1，其所连接的强联通分量也一样，设其离开顺序为f2。</p><p>则f1&gt;f2。</p><p>如果路径是从f1→f2的。</p><p>并且首先搜索了f1，那么肯定会由于这条连接边先去搜索f2的强联通分量的所有节点，后返回该强联通分量的节点并进行离开，所以离开顺序后于f2。</p><p>如果首先搜索了f2，那么f2就必然没有一条边能够来到f1强联通分量，否则这两个就是同一个强联通分量了。因此会先把f2搜索完成并离开完成才会去搜索f1，再离开，因此f1&gt;f2。</p><p>由于上述原因，当我们选择离开顺序最后的强联通分量，那么这个强联通分量的所有的与其他强联通分量的边都是由该强联通分量指向其他强联通分量的，因此在图的转置中，其将没有任何一条能够前往其他强联通分量的边，因此可以直接分离，并重复操作。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>散列(hash)</title>
    <link href="/%E6%95%A3%E5%88%97(hash)/"/>
    <url>/%E6%95%A3%E5%88%97(hash)/</url>
    
    <content type="html"><![CDATA[<p>在一个域(一个集合)中，其中存在着一个实际域，包含着我们所实际用到的元素，如自然数是一个域，其中我们有一个实际域，比如说{1,2,3}。这些作为关键字指向元素，这里的关键字就是指数组的下标一样的东西，根据一个关键字，我们就可以得到它所指的元素。</p><p>当全域较小的时候，我们可以之间建立一个表，一一对应。</p><p>但是当全域较大但是实际域并不大的时候，这就过于浪费存储空间了，因为很多的关键字都对应着NIL(空)，因此，我们可以通过一个散列表来建立关系。</p><p>散列表是通过一个散列函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>来建立对应关系的。</p><p>但是不管怎么样，只要我们散列表所</p><h3 id="链接法">链接法</h3><p>将散列表做成一个链表的集合，在通过散列函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>求得值后，在其所对应的链表中进行比对寻找。</p><p><img src="https://fastly.jsdelivr.net/gh/lhish/picture@main/16790580823151679058081587.png" alt=""></p><p>时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>a</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>a</mi><mtext>为链表长度</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(a+1)(a为链表长度)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mord cjk_fallback">为链表长度</span><span class="mclose">)</span></span></span></span></p><p>因为散列函数的时间复杂度是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></p><h3 id="散列函数">散列函数</h3><p>散列函数就是一个很普通的数学公式，将一个数映射到另一个数，如通过<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext></mrow><annotation encoding="application/x-tex">\bmod</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.0556em;"></span></span></span></span>，等等方式。</p><p>但是，由于散列函数存在冲突，所以当一个散列函数被确定的时候，可以通过制造一些特定的数据，来使得散列函数的时间复杂度最劣。</p><p>我们希望能够有一个散列函数对于任何数据都有着良好的时间复杂度，若专业来说就是如下。</p><p><img src="https://files.catbox.moe/2pec7u.png" alt=""></p><p>一个最简单的全域散列函数就是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mrow><mi>a</mi><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>a</mi><mi>k</mi><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi><mo stretchy="false">)</mo><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>m</mi><mi>a</mi><mtext>和</mtext><mi>b</mi><mo>≤</mo><mi>p</mi><mo>−</mo><mn>1</mn><mtext>且属于</mtext><mi>Z</mi><mo separator="true">,</mo><mi>p</mi><mtext>为全域</mtext><mo separator="true">,</mo><mi>m</mi><mtext>为映射后的域</mtext></mrow><annotation encoding="application/x-tex">h_{ab}(k)=((ak+b)\bmod p)\bmod m a和b\le p-1且属于Z,p为全域,m为映射后的域</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ab</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">((</span><span class="mord mathnormal" style="margin-right:0.03148em;">ak</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.136em;"></span><span class="mord mathnormal">ma</span><span class="mord cjk_fallback">和</span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mord cjk_fallback">且属于</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mord cjk_fallback">为全域</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mord cjk_fallback">为映射后的域</span></span></span></span>，通过一些数论的知识可以证明。</p><h3 id="开放寻址法">开放寻址法</h3><p>每一个散列表的槽只能放一个元素，因此散列表的大小需要大于关键字的数量。插入的方法就是按照位置的一个排列的顺序去找空位，若有空位，则插入。</p><p>此处，为了保证这个排列是均匀散列，即探查序列的排列需要是等可能的所有排列中的任何一种，需要去设计探查的方法。</p><p>所有的探查方式的探查顺序都通过一个函数来实现， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>i</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo>=</mo><mi>h</mi><mo stretchy="false">(</mo><mi>k</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">i^{&#x27;}=h(k,i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9425em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9425em;"><span style="top:-2.9425em;margin-right:0.05em;"><span class="pstrut" style="height:2.5795em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span>。</p><p><strong>线性探查</strong></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>k</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><msup><mi>h</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo>+</mo><mi>i</mi><mo stretchy="false">)</mo><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>m</mi></mrow><annotation encoding="application/x-tex">h(k,i)=(h^{&#x27;}(k)+i)\bmod m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1925em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9425em;"><span style="top:-2.9425em;margin-right:0.05em;"><span class="pstrut" style="height:2.5795em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span></p><p><strong>二次探查</strong></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>k</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><msup><mi>h</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mi>c</mi><mn>1</mn></msub><mi>i</mi><mo>+</mo><msub><mi>c</mi><mn>2</mn></msub><msup><mi>i</mi><mn>2</mn></msup><mo stretchy="false">)</mo><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>m</mi></mrow><annotation encoding="application/x-tex">h(k,i)=(h^{&#x27;}(k)+c_1i+c_2i^2)\bmod m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1925em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9425em;"><span style="top:-2.9425em;margin-right:0.05em;"><span class="pstrut" style="height:2.5795em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8095em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span></p><p><strong>双重散列</strong></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>k</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><msub><mi>h</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo>+</mo><mi>i</mi><msub><mi>h</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>m</mi></mrow><annotation encoding="application/x-tex">h(k,i)=(h_1(k)+ih_2(k))\bmod m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span></p><p><strong>优劣</strong></p><p>双重散列&gt;二次探查&gt;线性探查</p><p><strong>实际应用双重散列</strong></p><ol><li>取m为2的幂，并使h2总产生奇数</li><li>取m为素数，并使h2总是产生比m小的正整数</li></ol><p><strong>时间复杂度分析</strong></p><p>插入：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><mrow><mn>1</mn><mo>−</mo><mi>a</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{1-a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2484em;vertical-align:-0.4033em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">a</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4033em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p>查找：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><mi>a</mi></mfrac><mrow><mi mathvariant="normal">l</mi><mi mathvariant="normal">n</mi></mrow><mfrac><mn>1</mn><mrow><mn>1</mn><mo>−</mo><mi>a</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{a}\mathrm{ln}\frac{1}{1-a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2484em;vertical-align:-0.4033em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathrm">ln</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">a</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4033em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p>a为装载因数，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mtext>插入的个数</mtext><mtext>散列表的大小</mtext></mfrac></mrow><annotation encoding="application/x-tex">\frac{插入的个数}{散列表的大小}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2173em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8723em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">散列表的大小</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">插入的个数</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><h3 id="完全散列">完全散列</h3><p>将链表法的链表改为一个散列表，使其大小<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>m</mi><mi>j</mi></msub><mo>=</mo><msubsup><mi>n</mi><mi>j</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">m_j=n_j^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2089em;vertical-align:-0.3948em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3948em;"><span></span></span></span></span></span></span></span></span></span>，即放入该槽元素个数的平方。</p><p>可以证明，冲突的概率小于0.5**(定理1)**，因此可以多次随机散列函数，即可找到一个不冲突的散列函数。</p><p>当n比较大的时候，可以进行第三次散列。</p><aside>💡 我不确定是不是这个意思，下面是原话</aside><p><img src="https://files.catbox.moe/cp0gt1.png" alt=""></p><p>还可以证明，总的空间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span><strong>(定理2)。</strong></p><p>且，总存储空间大于4n的概率小于0.5。</p><p>因此得出的结论如上。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>数据库2</title>
    <link href="/%E6%95%B0%E6%8D%AE%E5%BA%932/"/>
    <url>/%E6%95%B0%E6%8D%AE%E5%BA%932/</url>
    
    <content type="html"><![CDATA[<p>内涵是对数据的定义以及数据完整性约束的定义。对数据的定义包括对关系、属性、域的定义和说明。对数据完整性约束的定义涉及面较广，主要包括以下两个方面。<br>静态约束：涉及数据之间的联系（称为“数据依赖”（Data Dependences））、主键和值域的<br>设计。<br>动态约束：定义各种操作（插入、删除、修改）对关系值的影响。一般，把内涵称为关系<br>模式，所以关系模式应包括这些内容。</p><p>这样的关系模式和关系一般称为泛关系模式和泛关系。</p><p>即原来的关系就是一张完整的大表，而数据库中可能会用多张表去存储它</p><p>数据冗余</p><p>操作异常。由于数据的冗余，在对数据操作时会引起各种异常。</p><p>修改异常。</p><p>插人异常</p><p>删除异常</p><p>但是将R 分解成 R1 和 R2两个模式是否是最佳分解，也不是绝对的。</p><p>对两个关系做连接操作，连接的代价是很大的</p><p>把数据之间存在的联系称为“数据依赖”，函数依赖是基本的一种依赖，它是关键码概念的推广。</p><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_00.53.31.png" alt=""></p><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_00.56.36.png" alt=""></p><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_00.56.48.png" alt=""></p><p>子集必成立，附加必成立，传递必成立</p><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_00.57.38.png" alt=""></p><p>！！！</p><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_00.57.59.png" alt=""></p><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_00.59.19.png" alt=""></p><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_00.59.30.png" alt=""></p><p>从F求F+ 是一个复杂且困难的问题， 可以使用属性集然后用类似于最短路的方式求出？</p><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_01.04.05.png" alt=""></p><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_01.06.15.png" alt=""></p><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_01.06.20.png" alt=""></p><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_01.06.26.png" alt=""></p><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_01.06.33.png" alt=""></p><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_01.06.37.png" alt=""></p><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_01.07.09.png" alt=""></p><h2 id="无损分解">无损分解</h2><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_01.08.06.png" alt=""></p><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_01.08.26.png" alt=""></p><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_01.12.52.png" alt=""></p><p>1:真包含表示有损分解，s是重构出来的r，对于重构所得的r再次进行一样的分解一定是无损的</p><p>模式分解能消除数据冗余和操作异常现象，并能使数据库中存储悬挂元组，即存储泛关系中无法存储的信息。</p><p>前提是r是R的一个关系，先不提泛关系r的存在性，则会出现悬挂问题：</p><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_01.18.28.png" alt=""></p><p>！！！</p><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_01.19.31.png" alt=""></p><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_01.19.42.png" alt=""></p><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_01.19.47.png" alt=""></p><p>无损分解充分必要，即不包含公共属性集？：</p><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_01.21.03.png" alt=""></p><h2 id="保持函数依赖">保持函数依赖</h2><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_01.25.09.png" alt=""></p><p>其分解前后的函数依赖的闭包相等。</p><p>对于不同的函数依赖集，同样的划分可能是无损分解的，也可能是保持FD集的，但也可能都不。</p><h2 id="范式">范式</h2><p>模式的范式这个标准衡量关系模式的好与坏</p><p>1NF:关系模式 R的每个关系r的属性值都是不可分的原子值</p><p>2NF:1NF且不存在局部依赖：每个非主属性（非候选键（候选键可能多个））完全函数依赖于候选键</p><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_01.33.18.png" alt=""></p><p>也就是分解后一张表中的候选键就必须是唯一确定这张表中的任意一列属性的。</p><p>这一点要通过实际的情况来判断，比如课程编号就已经完全推断出课程名了，但是却又课程编号+学生编号推出课程名</p><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_01.38.03.png" alt=""></p><p>3NF:1NF且每个非主属性都不传递依赖于 R 的候选键</p><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_01.40.57.png" alt=""></p><p>关系的规范化处理：将它们变换成3NF 或更高级的范式</p><p>分解为3NF：</p><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_15.25.05.png" alt=""></p><p>A→B,A→C,D→E,F</p><p>1)A→BC</p><p>2){ABC,DE}</p><p>3)候选键：ADF</p><p>4)答案：{ABC,DE,ADF}</p><p>！！！</p><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_01.44.06.png" alt=""></p><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_01.45.17.png" alt=""></p><p>BCNF:1NF且每个属性都不传递依赖于 R 的候选键？</p><p>例如，书名+作者，书号+作者都是候选键，但是书名依赖于书号，就不是BCNF了。</p><p>！！！</p><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_01.51.43.png" alt=""></p><p>X是超键就保证了没有传递依赖？</p><p>分解为BCNF：既然不是BCNF，则必然存在x→y，x不包含超键，那么就将它分解为xy和r_i-y两个模式，但不一定能保持FD</p><p>分解为x→y后x就变成超键了。</p><p>三原则：表达性、分离性和最小冗余性</p><p>表达性涉及两个数据库模式的等价问题</p><p>分离性是指在关系中只存储有直接联系的属性值</p><p>最小冗余性要求分解后的模式个数和模式中属性总效应最少，但带点冗余对提高查询速度是有好处的。</p><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_15.36.27.png" alt=""></p><p>5NF:</p><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_15.39.02.png" alt=""></p><h1>数据库设计概述</h1><p>确切地说，数据库设计是指对于一个给定的应用环境，提供一个确定最优数据模型与处理模式的逻辑设计，以及一个确定数据库存储结构与存取方法的物理设计，建立起既能反映现实世界信息和信息联系，满足用户数据要求和加工要求，又能被某个数据库管理系统所接受，同时能实现系统目标，并有效地存取数据的数据库。</p><p>规划、需求分析(信息，处理，安全与完整）、概念设计(概念模式)、逻辑设计(ddl和应用程序)、物理设计(物理结构和程序设计每个接口)、实现和运行维护阶段</p><p>输入：总体信息需求、处理需求、DBMS的特征、硬件和OS特征</p><p>输出 ：完整的数据库结构、基于数据库结构和处理需求的应用程序的设计原则</p><p>分析需求：分析用户活动，产生用户活动图，确定系统范围，产生系统范围图，分析用户活动所涉及的数据，产生数据流图，分析系统数据，产生数据字典</p><p>数据字典：数据项、数据结构、数据流、数据存储和处理过程</p><p>概念模型是对现实世界的抽象和概括，应简洁、明晰、独立于机器、容易理解，应易于变动，应很容易向关系、层次或网状等各种数据模型转换。</p><p>流程：设计局部，综合成全局，评审</p><p>ER分割：垂直分割(对属性分割，键必须都出现)，水平分割(对实体类型分割)，合并，联系分割，联系合并(必须是定义在相同的实体类型）</p><p>流程：设计局部(确定范围，确定实体定义，确定联系定义，确定属性分配)，设计全局(确定公共实体，局部合并，消除冲突)，全局优化(实体类型合并，冗余属性消除，冗余联系消除)</p><p>逻辑设计流程：初始模式的形成，子模式设计，应用程序设计梗概，模式评价，修正模式</p><p>ER转关系模型：联系：N端加入1端的键作为外键，用波浪线，N：M则新增加一个关系用来中转</p><p>物理设计：存储记录结构设计，确定数据存放位置，存取方法的设计，完𤨣性和安全性考虑，程序设计。</p><p>实现：建立，装入数据并测试，实际运行测试</p><p>维护：维护安全与完整，检测并改善性能，根据用户需求调整，修bug。</p><h2 id="数据库管理">数据库管理</h2><p>定义 8.1 事务（Transaction）是构成单一逻辑工作单元的操作集合。不论发生何种情况，DBS必须保证事务能正确、完整地执行。</p><p>begin transaction开始一个事务，commit提交，rollback回初始状态</p><p>ACID：原子性，一致性，隔离性，持久性</p><p>定义8.2 系统能把数据库从被破坏、不正确的状态，恢复到最近一个正确的状态，DBMS 的这种能力称为数据库的可恢复性（Recovery）。</p><p>转储和建立日志，用redo和undo进行恢复</p><p>事务故障：可以预期的事务故障undo，非预期的事务故障undo</p><p>系统故障：对未完成事务进行 UNDO 处理，对已提交事务但更新还留在缓冲区的事务进行 REDO 处理。</p><p>介质故障：重装转储的后备副本到新的磁盘，使数据库恢复到转储时的正确状态，redo所有已提交的事务。<br>在检查点时刻才真正做到把对 DB 的修改写到磁盘，并在日志文件写人一条检查点记录。</p><p>对于在检查点之前已经完成的不用管，在检查点后故障点前做完的要redo，其他undo。</p><p>操作方式：根据日志建立事务重做队列和事务撤销队列，并作undo和redo。</p><p>运行记录优先原则：先记录后运行</p><p>sql开始就是事务的开始。</p><p>并发问题：丢失更新问题、读脏数据问题、不一致分析问题。</p><p>通过封锁（上锁，lock:X锁，PX协议:使用X锁的协议,通过XFIND R来获取锁,PXC:为了保证不读未commit的数据，解锁合并到commit中，shared_lock：S锁，PS，通过SFIND R来获取锁，UPDX R来升级为X锁来写，PSC）和时标解决。</p><p>活锁：永远上不了锁（FCFS解决/动态优先级）</p><p>饿死：永远有S锁在占用，上不了X（要求在加S锁的时候前方还有其他等待加锁的人）</p><p>死锁</p><p>调度：事务的执行顺序，如果依次执行就是串行调度，如果是分时同时执行，就是并行调度</p><p>如果一个并行调度是可串行化的，那么就是正确的，即这个并行调度是否可以有一种串行调度和它结果一样，即便可能不同的串行调度得到的结果可能不同。</p><p>使用两段封锁法（在使用前先获取锁，不允许在释放锁后再获取锁）的并行调度必然是可串行的。</p><p>SQL-2的事务存取模式：READ ONLY和READ WRITE（set transaction …)</p><p>隔离级别：serializable(可串行化)，repeatable read(在两次读中不能不同)，read committed(不要求可重复读)， read uncommitted(可以读未提交数据)(set transaction isolation level …)</p><p>完整性：正确性（合法性）、有效性（定义的有效范围内）和相容性（同一事实的两个数据应相同）</p><p>完鳖性子系统：DMBS中执行完整性检查的子系统（检查违规和后处理）</p><p>完整性规则三部分：触发条件，检查错误类型(谓词)，后处理行为(ELSE子句)</p><p>域约束（对特定类型约束）：create domain name default … constraint constraint_name 约束子句</p><p>基本表约束：候选键定义(unique(列名)不默认非空，primary key(列名)默认非空)，外键定义(foreign key(列名) reference 参照表 [列名序列] [ON delete动作][on update动作]，检查约束check(条件表达式)，只对他定义的无效</p><p>动作：no action，cascade所有外键一起删除，restrict没有外键才能删除，set null删除时置为空，set default，删除时设置为默认值。</p><p>断言：create assertion name check(条件)/drop assertion name，优于检查子句</p><p>SQL-3触发器：但触发<strong>事件</strong>，若<strong>条件</strong>成立则执行<strong>动作</strong></p><p>create trigger name after/before/instead of(触发事件时如果满足则用这个语句替换越来的语句) update of 属性名/delete/insert on 表 referencing[创建别名] old ad oldtuple\n new as newtuple (只有update的时候用，用来判断变化情况)when (条件) 动作语句 [for each row];</p><p>drop trigger name</p><p>如果有for each row就是对事件执行时改变的每行进行动作，否则就是对事件执行完后的整张表进行操作</p><p>五种级别的安全措施：环境级，职员级，OS级，网络级，DBS级</p><p>权限：数据权限：增(insert)删(delete)查(read)改(update)；结构权限：增(resource创建新关系)删(drop)查(创建删除索引)改(alteration增删属性)</p><p>视图三优点：数据安全性、逻辑数据独立性和操作简便性。</p><p>sql-2中的权限：select，insert，delete，update，references，usage(使用已定义的域)</p><p>grant 权限(具体属性)/all previleges on 关系/视图/domain 域 to sb. (with grant option)(是否可传递)</p><p>可以添加具体属性来具体范围，如grant insert(P,J) on SPJ什么</p><p>回收：revoke 权限 on … from sb. (restrict/cascade)</p><p>可以通过把revoke改成revoke grant option for来回收转让权限</p><p>加密：有一个加密键，对于要加密的内容，将其分割与加密键相同长度，每一段和加密键模27加然后最后组合。</p><h2 id="分布式数据库DDBS">分布式数据库DDBS</h2><p>定义9.1 DDBS 是物理上分散逻辑上集中的数据库系统，系统中的数据分布存放在计算机网络的不同场地的计算机中，每一场地都有自治处理（即独立处理）能力并能完成局部应用，而每一场地也参与（至少一种）全局应用，程序通过网络通信子系统执行全局应用。</p><p>DDBS 中有两个重要的组成部分：分布式数据库（DDB）和分布式数据库管理系统（DDBMS）。</p><p>定义9.2 DDB 是计算机网络环境中各场地上数据库的逻辑集合。换言之，DDB 是组结构化的数据集合，逻辑上属于同一系统，而物理上分布在计算机网络的各个不同场地。DDB具有<strong>数据分布性</strong>和<strong>逻辑整体性</strong>两个特点。</p><p>场地自治性，场地之间协作性，数据独立性，分布透明性，集中与自治相结合的控制机制，适当增加数据冗余度，事务管理的分布性</p><p>数据分片：垂直/水平/导出/混合，完备性条件，可重构条件，不相交条件</p><p>数据分配：集中式，分割式，全复制式，混合式（有相交的分割）</p><p>分层：全局外模式，全局概念模式（逻辑数据独立性），分片模式（分片透明性，不必考虑分片），分配模式（位置透明性，不需考虑位置），局部概念模式（局部数据模型透明性，不需考虑存储不同），局部内模式</p><p>用户和系统都有全局和局部两种。</p><p>功能：接受用户请求，并判定把它送到哪里；访问网络数据字典；进行分布式处理；通信接口功能；异构型中提供数据和进程移植的支持</p><p>查询，完整性，调度，可靠性四大处理模块</p><p>整个过程中性能的最大代价是：传输，因此如果要进行连接，可以先让少的先过来进行半连接，筛选一下需要的数据，然后再传递过去。</p><p>对于局部连接，可以n^2复杂度匹配能连接的元素，也可以先排序然后使用双指针法</p><p>而如果在不同场地，那么第一种就可以传输内层的，也可以传输外层的，而第二种则只需传输需要的数据，但需要互相通信</p><h2 id="对象关系数据库ORDB">对象关系数据库ORDB</h2><p>平面关系模型：1NF</p><p>嵌套关系模型：允许关系的属性值又可以是一个关系，而且可以出现多次嵌套</p><p>复合对象模型：放宽在关系的定义上集合与元组必须严格交替出现的限制，</p><p>可采用“引用”（Reference）的技术解决类型定义中的递归问题</p><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_19.12.01.png" alt=""></p><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_19.13.06.png" alt=""></p><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_19.13.10.png" alt=""></p><p>复合类型：行类型(tuple)，数组(array)，列表(list)，包(multiset)，集合(set)</p><p>引用ref(关系)</p><p>setof,multiset,[],type(每一个类型和名字)</p><p>create type name (每一个类型和名字)/setof()/multiset()/type[] (under type)(继承);</p><p>超表中每个元组最多可以与每个子表中的一个元组对应,子表中每个元组在超表中恰有一个元组对应，并在继承的属性上有相同的值。</p><p>sql-3中创建表的时候可以为元组定义对象标识符，便可以通过ref来引用元组。</p><p>结构体中的变量也用.来使用，但是如果是set或者之类的就必须用一个中间变量来，因为他也是一个表</p><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_19.52.37.png" alt=""></p><p>通过select的属性上加括号查询一个嵌套关系</p><p><img src="/image/%E6%95%B0%E6%8D%AE%E5%BA%932CleanShot_2025-05-28_at_19.54.03.png" alt=""></p><p>create function name(param) returns name as 动作语句;</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>深入理解计算机系统</title>
    <link href="/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F/"/>
    <url>/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<p><strong>信息就是位（bit) + 上下文（使用这些bit的地方，对他们产生不同的解释，理解为一个整数？或者其他）</strong></p><p>源程序.cpp</p><p>预处理器 预处理过的源程序.i</p><p>编译器 汇编程序.s</p><p>汇编器 二进制程序.o（机器语言指令，可重定位目标程序）</p><p>链接器 最后程序（将相应的部分放进来）</p><p>组成：总线，处理器，IO，主存</p><p>执行程序的过程中（./hello）</p><p>键盘经过处理器（寄存器）存储在主存，主存读辅存程序，到处理器运行（寄存器）输出到显示器。</p><p>为了速度，处理器里有cache。 寄存器，l1/2/3缓存（sram），主存（dram），辅存，分布式</p><p>L2对于每个核，L3对于所有核</p><p>操作系统基本功能：防止硬件被滥用并抽象他们。</p><p>系统调用会保存上下文，然后进入内核空间切换上下文，运行完后再出来。</p><p>进程是操作系统对一个正在运行的程序的一种抽象</p><p>虚拟内存提供了一个每个进程都在独占地使用主存的假象</p><p>存储顺序（从小到大）：程序，堆→，共享库，←栈，内核虚拟内存</p><p>加速比定律</p><p>超线程：让一个核心可以同时运行多个线程，因为并不是核心的每个部分都是同时用的，因此提高切换度，就能做到同时运行。</p><p>超标量，同时执行多条指令。</p><p>SIMD。</p><p><img src="/image/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9FCleanShot_2025-08-11_at_02.02.48.png" alt=""></p><p>无符号不使用补码存储</p><p>对于程序看到的地址其实都是虚拟的，是将各种东西组在一起的结果</p><p>字长也就是32位/64位是地址的大小，指针的大小。32位能在64位上运行，反过来不行。</p><p>一般为了可移植性，不会直接写类型的大小，而是sizeof(T)。</p><p>虽然有大小端序和字长的问题，但是ascii码输出则完全不受影响，因为每一个只占一个。</p><p>机器不知道源程序。</p><p><img src="/image/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9FCleanShot_2025-08-11_at_16.00.59.png" alt=""></p><p>当有符号数和无符号数在一起的时候都会被当作无符号数。</p><p>数字转换的时候会先变大小再变符号。往大转换就是无符号补0，有符号就是补与符号位相同的0/1。从大到小就是截断。</p><p><img src="/image/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9FCleanShot_2025-08-11_at_16.18.54.png" alt=""></p><p><img src="/image/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9FCleanShot_2025-08-11_at_16.24.03.png" alt=""></p><p>乘法很慢，但<em>2的幂只需要移位，那不如直接分解成多个</em>2的幂然后相加。（有符号就先转换成无符号）</p><p>但除法并不能推到任意数，只能2的幂。</p><p>浮点数的阶码不能全0或全1，这就是规格化的浮点数。而全0就是非规格化的（此时真实值为1-bias，而非-bias，这是为了过渡连续），用来表示0或者0附近的极小数。而全1，有两种可能，后面全1就是无限，否则就是NaN，not a number，比如sqrt(-1)。</p><p>阶码用移码表示，即加上bias=2^n-1，这是为了方便浮点数比较时的对齐。</p><p>有几种舍入方式，向偶数舍入（&lt;5舍，&gt;5入，对于5舍到最近的偶数，也就是1.25舍入到1.2，1.15也是1.2，对于二进制也类似，在中间值时，即10000的情况，让前面一位为0），去0（就是去掉0），向上和向下舍入。</p><p>相较于整数，浮点数没有结合律和分配律，因为精度的问题，这就导致编译器无法优化（不确定优化后是不是就烂掉了）</p><p>float/double转int是去0舍入，-3.6→-3，3.6→3。如果溢出会取min/max(最大/最小值，数）</p><p>int/double→float也会有精度上的舍入。</p><p>x86，最早的处理器8086，8087加上了浮点</p><p>i386，32位</p><p>Pentium</p><p>core i?</p><p>%rip，pc寄存器</p><p>16个整数寄存器</p><p>条件码寄存器</p><p>在链接前，目标文件中这些未定义的标识符就还会保持符号的状态：bl_Z5mult2ll，而即便有，也只是一个额标签名而已，直到变成二进制后标签名才会变成具体地址。</p><p>一般称2字节为字。</p><p>x86架构下，汇编的结尾代表操作的字长。b，1byte，w,l,q，然后是浮点s和l</p><p><img src="/image/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9FCleanShot_2025-08-11_at_18.52.56.png" alt=""></p><p><img src="/image/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9FCleanShot_2025-08-11_at_19.02.01.png" alt=""></p><p>intel的32位寄存器会把高4字节设置为0</p><p>mov不能两个操作数都是内存，并且立即数最多32位</p><p>为了操作64位立即数，要使用movabsq。但目标只能是寄存器。</p><p>movz(零扩展)/s(符号扩展)源大小(b/w)目标大小(w/l/q),但并不是全有，所以需要一些其他指令中转。</p><p>cltq将eax符号扩展到rax。</p><p>rsp存储了栈指针，push和pop会自动更新rsp，并将操作数存到栈中。</p><p>局部变量也是存储在栈的，当函数开始的时候，就会将rsp的内容存储到bsp中作为当前函数所有局部变量的基地址，然后根据局部变量总共要分配的量手动去调整rsp，也就是减rsp，然后，每个局部变量就会在这一段新的栈空间中，可以通过（基址＋偏移量）寻址立即获取，也就不用忍受栈的麻烦了，当结束的时候再将rsp收回来。而bsp再函数一开始的时候实际存储的是调用者的地址，因此，需要在一开始先推入栈，最后pop出来就可以ret了。</p><p><img src="/image/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9FCleanShot_2025-08-11_at_19.55.34.png" alt=""></p><p>leaq不止能取地址，也能进行一些计算，前面对于地址本身就有一些计算，就可以借用leaq来取到这个地址计算的结果。</p><p>右移也有两种，一种是补0，一种是补符号位。</p><p>在这里也不管有符号还是无符号，因为操作起来都一样。</p><p>对于机器来说，它才不管这里存储的是什么类型，你只要调用正确的汇编命令就好了，而这个汇编命令的决定是由编译器这个知道类型的人来做的。</p><p><img src="/image/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9FCleanShot_2025-08-11_at_20.06.42.png" alt=""></p><p>通过rax和rdx的拼接可以实现128位。</p><p><img src="/image/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9FCleanShot_2025-08-11_at_20.09.27.png" alt=""></p><p><img src="/image/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9FCleanShot_2025-08-11_at_20.11.32.png" alt=""></p><p>根据这些条件位，有三种处理方式。</p><ol><li>设置值</li></ol><p><img src="/image/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9FCleanShot_2025-08-11_at_20.13.28.png" alt=""></p><ol><li>跳转</li></ol><p><img src="/image/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9FCleanShot_2025-08-11_at_20.16.31.png" alt=""></p><p>当进行相对跳转的时候，虽然汇编里写的是jmp 某个特定数字，但最后到机器码中就会变成jmp 数值-下一行的pc，这样就算整体的程序的位置改变了，也不改变它的相对位置。跳转到下一条指令位置加上这个偏移量。</p><ol><li>条件传送</li></ol><p>上面这种被称为条件转移，满足条件就转移，但是效率低下（因为会有预测失败惩罚），因此也可以使用条件传送来替代。</p><p>条件传送就是当条件满足的时候就进行mov。</p><p><img src="/image/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9FCleanShot_2025-08-11_at_20.33.49.png" alt=""></p><p>但是条件转移也并不总是好的，它的实现方式是在一开始就执行条件成功和失败的两种情况，然后根据最后的cmp结果来将其中一种情况作为最终的情况。但当有的时候条件内部的执行是依赖于条件本身的时候，比如在指针不为空的时候对指针解引用之类的。并且由于两个都要执行，所以可能还慢于条件转移，编译器会进行权衡。</p><p>三种循环都可以用条件转移实现，do-while,while,for。</p><p>感觉还是应该多用switch。</p><p>当switch的选项较多的时候，gcc就会启用跳转表，通过偏移量和数组来快速确定跳转位置。o(1)。而ifelse要on。</p><p>当进行函数调用的时候，受限尝试将参数放进6个参数寄存器中，如果放不下，就放到本函数帧的栈上，然后最后放上返回本函数的返回地址。而对于被调用者来说，它要保存之前p的所有寄存器状态（如果它需要更改这个寄存器的话，就需要在函数开始push这个寄存器，在最后pop出来，但如果不更改的话就不需要），然后分配自己的局部空间，然后自己处理，处理完后按返回地址返回。要注意的是，多出来的参数和返回地址都不是在被调用者的帧中的，而是在调用者的。</p><p>call就是压返回地址（调用函数的后面一行），然后设置被调用者的地址为PC。</p><p>ret就是弹出地址，然后设置地址。</p><p>call的对象可以是标识符，也可以是一个操作出来的地址。</p><p>额外的参数要按8字节对齐。通过正数偏移量rsp去取这些参数。</p><p>rsp的变动会自动释放对应的区域的栈。</p><p>有的时候编译器会自动将数组的index的变化优化为指针上的加减。</p><p>结构体中的每一个元素就是一个偏移量而已。</p><p>union可以极大的省空间。数据对齐能够提高程序速度，但存储空间更大。</p><p>由于数组不检查内存范围，因此当超过访问的时候也不会出问题，但是实际上会访问到不该访问的内存。</p><p>这种可能会导致各种攻击。因为能够去访问不该被访问的东西。可以通过多种方法缓解：</p><ol><li>地址随机化，每次都加载到不同的内存空间。</li><li>在栈的局部变量部分和其他部分之间插入一段内存空间，空间的值是金丝雀值，如果这段被访问就立即终止程序。</li><li>对于内存进行权限控制，比如让一段部分只是可读的但是不可执行。</li></ol><p>对于变长的数组，可能就不知道栈上要分配多少长度了，而这本身应该要在编译的时候就确认下来。为了解决这个问题，除了rsp指向栈顶，还会用一个rbp指向帧底，来动态的控制长度。</p><p>浮点数也有对应的16个寄存器。64位，分为两个长度。</p><p><img src="/image/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9FCleanShot_2025-08-11_at_22.19.24.png" alt=""></p><p><img src="/image/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9FCleanShot_2025-08-11_at_22.19.17.png" alt=""></p><p><img src="/image/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9FCleanShot_2025-08-11_at_22.19.57.png" alt=""></p><p>参数传递的时候浮点数也会放在浮点数寄存器中，分别按顺序放。</p><p><img src="/image/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9FCleanShot_2025-08-12_at_00.16.42.png" alt=""></p><p>立即数不能指定为浮点数。因此需要在内存中先设定这个常量然后再读出来，一般通过两个部分组成，一半作为高4位一半作为低4位。</p><p><img src="/image/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9FCleanShot_2025-08-12_at_00.19.04.png" alt=""></p><p><img src="/image/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9FCleanShot_2025-08-12_at_00.19.12.png" alt=""></p><p>实际上现在risc和cisc都已经开始融合了，你中有我，我中有你。</p><p>汇编除了汇编命令，还有很多汇编伪代码来指定一些东西，比如程序开始位置，对齐等等，这些会以点.开头。</p><p><img src="/image/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9FCleanShot_2025-08-12_at_01.07.36.png" alt=""></p><p>取指，译码(同时还会从寄存器读操作数)，执行（计算），访存（内存），写回（寄存器）</p><p><img src="/image/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9FCleanShot_2025-08-12_at_01.41.28.png" alt=""></p><p>这才是真正流水线的样子。每经过一段逻辑，要对所有寄存器存储一下，这样才能真正的实现并行，每次从寄存器中出来，再回到寄存器中，互不干扰。</p><p>不同层级的寄存器可以完全不同，只需要存需要的就可以了。</p><p><img src="/image/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9FCleanShot_2025-08-12_at_01.49.50.png" alt=""></p><p>总共有两种相关性：数据相关和控制相关</p><p>但数据相关中只有寄存器会产生冒险，因为寄存器的读写不是同一个环节完成的。</p><p>而对于这种，有几种方法解决。</p><ol><li>暂停：如果发现当前流水线中正在处理3，4步的会更改我指令的操作数，那么就插入nop进行阻塞。</li><li>转发：但这样还是太慢了，阻塞太久了，不如直接从3，4步把算出来的值直接送到驿码这里。（但是要求这个3，4步执行的事件早于或等于译码的时候）</li><li>加载/使用：但如果晚于译码，那就将暂停和转发结合。</li></ol><p>而对于控制冒险，对于ret来说，就在ret后等待直到ret写回寄存器的同时取出它写回的返回地址进行取指就可以了。而对于跳转来说，但到达第3步的时候，也就是执行的时候，就能判断到底是否要跳转了，而这时候前面预测的指令才刚刚执行完1，2步，还没能对整个程序造成任何可见的影响，因此直接让他们后续终止，立刻开始新的一条就可以了。</p><p>对于异常处理：只处理最深的那一条异常，对于预测产生的异常如果后续发现预测失败就忽略，当发现异常后要立刻停止任何命令更改可见状态。</p><p>实际上暂停和插入气泡是有区别的，暂停时保持不变，一直输入相同的内容，而插入气泡则是将输入改为nop。气泡是因为比如预测错误，那这些指令就不能要了，因此要填入气泡。而对于数据相关，指令并没有改变，但只是要延迟而已。</p><p>并且实际处理的时候不能将这些特殊情况都单独处理，应该要假设他们可能会同时发生，对于每一个部分如果产生不同的操作，那么就需要进行特殊处理。</p><p>通过对于每种不正常的流水线情况都计算cpi就能估计总体平均的cpi。</p><p>对于较为复杂的指令，一般就不使用流水线来处理了。而是发射到专门的处理单元中处理。</p><p>编译器只能进行安全的优化，而不能假设你程序中蕴含的一些隐藏的特性。（比如两个指针可能指向同样的位置）</p><p>CPE：每元素周期数，每个元素处理所花费的周期数</p><p>提取循环中的不变量。使用临时量，减少读写。</p><p>在优化程序性能的时候，应该找到关键路径（也就是耗时最长的不能并行的这些操作），对这条关键路径进行优化。</p><p>可以使用循环展开进行优化。并且，每一轮之间的同样适用的元素也是会产生数据依赖的，就不能并行，就应该在多个不同的变量上进行操作进行循环展开，最后在统计在一起。</p><p>有的时候运算执行的先后顺序也会对于数据依赖产生影响，可以通过调整括号来避免。</p><p>但是无限增加循环展开的程度也不行，每增加一个临时元素就要占用一个寄存器，如果超过寄存器数量，就产生了寄存器溢出，就会放到内存上去了，导致速度下降。</p><p>通过修改程序让程序更容易被优化为条件传送可能能够优化原本的条件转移。</p><p>避免产生内存读写相关。</p><p><img src="/image/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9FCleanShot_2025-08-12_at_17.32.17.png" alt=""></p><p><img src="/image/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9FCleanShot_2025-08-12_at_17.32.22.png" alt=""></p><p><img src="/image/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9FCleanShot_2025-08-12_at_17.47.18.png" alt=""></p><p>局部性：循环越小，迭代越多，访问的变量更相同，步长更短</p><p>全相连因为要大量并行匹配所以昂贵，因为产生冲突的可能大大减少。</p><p>主存地址：行标记，组标记（全相连不需要），块偏移</p><p>cache地址：组标记</p><p>有三种链接，编译时，加载时，运行时。</p><p>编译器和汇编器生成可重定位目标文件和共享目标文件（加载时或运行时链接），一个目标文件就是存储目标模块的文件。</p><p>链接后就会变成可执行目标文件。</p><p>目标文件格式：elf/exe/mach-o</p><p>一个ELF的文件格式：ELF头（包括一些编译这个文件的信息），各种信息的节（.text，编译的机器代码，.rodata，只读数据，.data，已初始化的全局变量和静态变量，.bss，未初始化的全局和静态便令，（实际上只是一个标识符，没有任何数据），.symtab，符号表（只包含函数的符号，不包含局部变量），.rel.text，需要更改（链接）的.text中的位置列表，.rel.data，需要更改的全局变量的地址，.debug，调试信息表，.line，行号信息），节头部表（后面每一个节的位置和大小）</p><p>感觉链接就是处理.rel这一部分。</p><p>static全局变量/函数只能在本源文件中使用。不const的全局变量默认时extern的，可以重声明。</p><p>实际上对于全局的函数或者变量，static就是只能被本文件，extern就是能被别的文件。</p><p>符号表中的内容：本文件能被别人引用的符号，本文件引用的别人的符号，不能被别的文件引用的本文件符号</p><p><img src="/image/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9FCleanShot_2025-08-12_at_21.12.30.png" alt=""></p><p>符号表每一行数据数据。</p><p>每个符号最后都会对应到某个节中，也就是这边的section。</p><p>有三个特殊节，COMMON，UNDEF（未定义），ABS（不需要重定位）</p><p>COMMON 未初始化的全局变量<br>.bss 未初始化的静态变量，以及初始化为0的全局或静态变量（初始化为0后就说明这是强变量，也就不用交给链接器ld去决定了。</p><p>c++要求使用不同的符号，而对于函数重载，它的名字就会和后续的参数连起来形成一个字符串也就达到了不同。</p><p>当面对多个同名符号时，最多只允许有一个强对象，并且会选择这个强对象。如果有多个弱对象，那就随机选择一个。</p><p>函数和已初始化的变量是强对象。为初始化的为弱对象。</p><p>extern后的必然是弱对象。因此实际上一个变量可以以不同的类型多次定义，而最终会随机选择。</p><p>如果是正常情况下，我直接将一个库编译为一个目标文件，当我把它链接到我的程序上时会将全部内容塞到我的程序里面。最终导致每一个程序都会包含一个库。</p><p>而如果我要更改这个库，那么每次都要全部重新编译。那么一个简单的办法就是把它分成多个目标文件进行编译，但还是没解决重复包含的问题，而且没必要的也包含了。</p><p>因此静态库就被提出来，只会复制被引用的部分。</p><p>静态库以一种称为存档的特殊文件格式存放在磁盘中。存档文件是一组连接起来的可重定位目标文件的集合，有一个头部用来描述每个成员目标文件的大小和位置。</p><p>但是静态库链接的方式很抽象，按照gcc 文件排序的顺序，它只会给前面的可重定位目标文件提供符号。还是cmake好。</p><p>而到目前为止，只是目标文件中的所有符号找到了自己的符号引用是谁。</p><p>接下来要将这些目标文件合并为一个可执行目标文件。</p><p>将所有输入模块中的相同段合并，并确定地址。然后根据重定位条目更改所有符号引用的地址。</p><p><img src="/image/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9FCleanShot_2025-08-12_at_22.01.18.png" alt=""></p><p>重定位条目。这些在编译为可重定位目标文件的时候就生成了。已初始化的在.data，为初始化的在.text。这里的type代表这个重定位的数据代表着什么，该如何重定位，相对的，还是绝对的。addend有的时候作为一些相对定位的偏移量。</p><p>之所以在生成的时候不能定位是因为不知道addr(symbol)的值，而现在链接的时候就知道了，因为所有的都合并了，确定了地址。</p><p>最终生成的可执行程序。</p><p><img src="/image/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9FCleanShot_2025-08-12_at_22.09.31.png" alt=""></p><p>会额外增加一个入口点。去掉.rel，因为已经链接完了。</p><p><img src="/image/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9FCleanShot_2025-08-13_at_00.40.36.png" alt=""></p><p>一般会生成两端，一段读执行，就是程序段，一段读写就是数据段，vaddr就是虚拟地址，paddr就是物理地址，一般要求off%align=vaddr%align。</p><p>程序复制到内存：加载，调用exec就是加载。将自己这个程序给清空，然后复制对应的过来，但实际上并不是全部复制，而是根据缺页中断自动复制。开始是先到_start函数，然后调用__libc_start_main，然后再调用main，结束后__libc_start_main会处理返回值。</p><p>为了避免更新库后需要显式链接，以及常用函数在多个程序中的冗余，就是用动态链接库。</p><p>动态目标/库由动态链接器来在运行时或加载时自动链接。</p><p>-fpic生成与位置无关的代码。对于动态链接库，在编译期链接的时候仅仅加入了一些重定位和符号表信息，直到加载的时候才将代码和数据放进来。加载的过程中，如果发现了.interp节，那么就将动态库重定位到内存后（位置就不会再变了），重定位程序的所有引用。</p><p>也可以在运行时动态链接，dlopen(动态库路径，flag(立即加载/使用时加载等))，返回一个句柄。dlsym(动态库句柄，符号名)返回符号地址。dlclose(句柄)卸载动态库。</p><p>fpic(position independent code)。共享库的编译必须总是启用fpic。</p><p>如果不开启fpic，那么它在内存中的加载位置就是固定的，这在现代显然难以想象，所以现在都是默认开启fpic的。</p><p>因为我们希望无论动态库在内存的哪里，用这个动态库的都能正确的使用。而对于本目标文件里的符号来说，都是pic的，因为相对位置不变。</p><p>其实很简单，对于变量，就维护一个GOT表(global offset table)，所有的全局变量的符号都会在GOT总有一个表项，对于本模块的，就直接有一个固定的相对偏移量就好了，这在编译期就能确定，而对于其他模块的就先空着。在加载的时候，就会调用动态链接器，而动态链接器作为加载过所有模块的，自然知道其他的在哪里，就会将真正的地址加载到GOT表中。</p><p>而对于函数，在进行call的时候，会进入过程链接表(PLT)中，这个PLT会间接的去访问GOT去查询真正的函数的位置，查询完后保存在GOT中，以后就不用再查了。相较于变量是加载的时候就绑定，函数是延迟绑定的，即当第一次调用的时候才会去查询。</p><p>所以对于全局函数的使用，都会在第一次比较慢。</p><p>所以现在一个程序里只有相对地址而没有绝对地址了，编译期间的重定位也只是重定位这些相对位置的值。原本可能是空的。直到加载的时候才有绝对位置。</p><p>库打桩（一般是动态库）：通过某种方式在编译/加载/运行时替换掉某个原本的函数。</p><p>编译期间链接替换函数的库的时候用-I指定搜索路径来让它先查找到替换函数所在的库。</p><p>在链接时-Wl将后面的参数传给链接器,—wrap,函数名，就会在链接时将f符号链接到__wrap_函数名上，而__real_函数名链接到真实的f函数上。</p><p>在运行时只需要通过LD_PRELOAD环境变量设置为假库，它就会在查找符号的时候优先查找假库的符号，而为了调用真库，一种是运行时链接，一种是额找更深一层的函数或者函数别名。</p><p><img src="/image/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9FCleanShot_2025-08-13_at_01.38.17.png" alt=""></p><p>异常处理：中断然后根据异常表调用对应的异常处理程序，处理完后要么回来继续，要么跳过中断的这条语句继续，要么终止程序。异常表每一行存储着一个异常处理程序的地址，通过异常表的基址和编号即可求出地址。作为一个特殊的系统调用，在内核态运行。既有操作系统定义的异常，也有处理器定义的。</p><p><img src="/image/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9FCleanShot_2025-08-13_at_13.41.08.png" alt=""></p><p>陷阱就是系统调用（参数只允许通过寄存器传递）。中断I/O。</p><p>进程：虚拟的处理器独占，虚拟的私有内存空间，上下文切换（保存，切换，读出）用户栈，内核栈寄存器等等。</p><p>系统调用都应该要检查返回值。</p><p><img src="/image/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9FCleanShot_2025-08-13_at_14.07.51.png" alt=""></p><p><img src="/image/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9FCleanShot_2025-08-13_at_14.14.18.png" alt=""></p><p>pause函数，进程睡觉直到收到一个信号。</p><p>在exec的时候除了传递参数，还可以传递环境变量。接受者用int main(argc,argv,envp)来接收。也可以通过getenv(名字)来获取，setenv(名字，值，是否覆写）来更改，unsetenv来取消。</p><p>eval(command)用来评估是不是内置命令，如果是就直接运行。对于shell来说，如果不是后台程序，就需要fork一个子进程并wait它完成。</p><p>在终端界面的ctrl+c/z都是给命令行前端进程发送一个全体信号。</p><p>信号默认阻塞同类型的信号。处理程序中最好只调用可重入函数以保证处理程序的可重入性。阻塞信号。由于每一个信号最多pending一个，因此要尽快处理，避免遗漏信号。</p><p>系统调用也可以被中断，这个时候就会返回EINTR，需要手动重新调用。当主进程和信号处理竞争的时候可以通过设置屏蔽来避免。</p><p>通过sigsuspend可以用暂时设定的mask屏蔽自身并挂起。</p><p>通过setjmp和longjmp可以无视程序位置随意跳转，很像throw的概念，setjmp为跳跃回来的位置，longjmp进行一次跳跃到对应的setjmp。setsigjmp和longsigjmp也是类似，不过是从信号处理函数中跳出来。</p><p>strace实际上是显示进程和每一个子进程进行的所有系统调用。</p><p>程序提供给cpu的永远是虚拟地址，再由mmu转换为物理地址。物理地址就是磁盘上的一段存储空间。被分割成页。有的未被分配，有的未缓存，有的已缓存（进入内存）。DRAM缓存永远使用全相连，因为不命中代价过大。并且采用写回法。</p><p>通过一个常驻主存的页表来记录虚拟地址和真实地址的对应。（每一页都很大）</p><p>但实际上每一个程序都有一个自己的页表，也就形成了自己的虚拟内存空间。因此实际上程序本身可以放在虚拟内存空间中的任何位置（所以实际上如果不开启fpic那么地址都还是绝对地址，ASLR不需要fpic，只需要将它开头加载到随机的基址上就好了，里面的地址加上一个这个偏移量就好了），因此不需要fpic，但是共享内存复制进来的时候可能就不能放在固定位置上了，需要fpic，而为了统一，因此即便不需要fpic也统一开始用fpic了。通过虚拟页表指向同一个真实地址就实现了共享。</p><p>通过程序页表就可以进行权限管理，内存保护。</p><p>整个流程：处理器产生虚拟地址，转换为PTE地址，获得物理地址，去磁盘获取。</p><p>如果与cache结合：处理器产生虚拟地址，问mmu，mmu问cache有没有pte，没有就去内存要，否则就返回mmu pte，根据pte获得addr，问cache有没有addr之后相同。</p><p>但现在职责已经分离了，专门有一个cache叫tlb来缓存页表，cache中只缓存真实数据（好吧，也可能缓存PTE）。但为了让虚拟内存尽可能大，页表也就会随之增大，导致内存装不下。因此引入多级页表，只将最常用的留在内存中。进程切换的时候实际上也只是切换了页表基址而已，但是tlb，l1,l2之类的cache是完全失效的。tlb也可以是多级的。</p><p>所以整个映射关系是程序虚拟内存中的一部分存储在物理内存上，物理内存映射了一部分存储虚拟空间的页。如果发现在内存中也没有，就是缺页中断咯，然后这个时候会把程序给的虚拟地址在外存中进行定位。</p><p>在程序的虚拟内存的内核虚拟内存部分，一部分记录了一些运行程序的信息，一部分是内核的程序和数据，还有一部分是映射了内存。</p><p>程序的虚拟空间也可以直接映射磁盘对象，一种是映射具体文件，那并不会在内存中申请空间，直到真正使用到的时候才会弄入内存，也就是缺页。另一种是匿名申请一段空间，设置为全0。大概就是动态内存分配。</p><p>实际上也正是通过映射具体文件的方式和磁盘产生了联系。</p><p>但一旦一个页面被初始化了，它要么呆在内存，要么呆在磁盘的swap空间，不可能再出去了，除非被显式关闭。当超出之后就开始kill程序了。蚌埠住了，macos会自动扩容swap。</p><p><img src="/image/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9FCleanShot_2025-08-13_at_16.40.50.png" alt=""></p><p>通过mmap可以手动映射。动态内存分配就是与磁盘对象产生联系的第二种方式。有一个brk指针指向堆顶。有两种分配方式，一种是显式，就是c++这种，另一种隐式，就是gc。除了malloc之类的，也可以直接调用sbrk来brk指针。</p><p>mmap也会从内存中进行分配，但单位是页，所以就没什么好思考的。而malloc分配则是不按大小的，所以需要内存分配算法。</p><p>分配内存空间的时候会产生两种碎片。内部碎片：分配的时候也要对齐，对齐时就会额外申请空间来填补这一部分，这一部分就是内部碎片。外部碎片：加起来能够容纳。</p><p>但这块内存上还是需要一些数据结构来管理已分配或者未分配的内存。一种就是，每分配一块，就让它是一个完整的数据结构，头部有长度和一些管理信息，后面是具体的空间。这样就可以从前往后按照头部的长度编译了。当找到一个可用内存块后，可以分割，也可以不分割。</p><p>当一段空间释放后，可以选择立即和附近的空闲块合并，也可以推迟。但是立即合并可能导致紧接着又切割了，所以一般都会有一定的延迟去合并。</p><p>但是合并的时候合并后面一块很方便，但合并前面一块并不是很方便，因为不知道前面一块的长度，因此可以给每个块的倒数一个字节里额外记录长度和状态。</p><p>另一种就是显式的一种双向链表，有效荷载里额外维护一个前指针和后指针。但即便是用指针串起来了，它的合并仍然是o(1)的，因为，它要合并的还是它真实存储位置上的。</p><p>维护链表的方式，也就是链表的排序方式有很多种。链表的排序会对最终申请的内存空间产生很大的影响，就比如首次适应下使用按地址排序就会内存利用率更高，但是释放比较慢。</p><p>但这样随着块的增多，链表会越来越长。因此也可以按块的大小存储在不同的链表中。每个链表存储大小在a-b范围内的所有块。简单分离存储就是在最开始分配好大小放在不同的链表中，但分配的时候不分割，不调整，这就会导致内存利用率低。而分离适配就是会额外进行分割，并放到对应大小的链表中，内存利用率非常高（不知道为什么），gcc的malloc就是。</p><p>还有就是伙伴系统，每个块都是2的幂，效率很高，但是内部碎片也会很高，2的幂的差值太大了，只适合特定的任务群。</p><p>对于垃圾回收，所有引用比如栈，或者寄存器都会到这个分配的内存有一条有向边，当发现一个内存没有任何外部的节点指向它之后，就可以说是垃圾了，就可以释放了。</p><p>每一轮都对所有根节点mark一遍，第二遍扫描的时候如果没有被mark就可以被释放了。</p><p>这个操作将在malloc发现没有能够分配的空间的时候进行。</p><p>但是这里很重要的一点是要识别内存中存储的是不是指针，但对于c来说并不能判断，内存里是不存储信息的，一个对象可能是指针也可能是其他类型。因此只能保守的进行回收。</p><p>文件读写不一定会映射到内存中，内核还是进行了一些操作，只是维护了一个数据结构，然后将对应的部分复制到缓冲区。</p><p>硬链接和软连接就是shared_ptr和weak_ptr。</p><p>读写要缓冲是因为IO很慢，尽量一次性多处理一点。</p><p>可以用stat和fstat来读inode内容。</p><p>可以用open/read/closedir来读目录。</p><p>每个进程持有一个打开的文件描述符表，内核共享一个所有打开的文件表，维护比如当前有几个人打开。文件表指向inode。但也可能有指向相同inode的文件表，因为还要维护读写位置，这个每个进程可能不同。</p><p>dup实际上就相当于文件重定向。</p><p>对于流I/O，如果要同时输入输出，要刷新缓冲区。</p><p>多线程尽量先进行局部计算，再进行统一。</p><p>可重入不是指线程安全，而是线程安全中的子集，代表没有任何共享变量。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>生成式人工智能</title>
    <link href="/%E7%94%9F%E6%88%90%E5%BC%8F%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    <url>/%E7%94%9F%E6%88%90%E5%BC%8F%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/</url>
    
    <content type="html"><![CDATA[<p>chain of thought</p><p>情绪勒索</p><p>强化学习寻找prompt</p><p>in context learning（随着模型的增强，这个也越来越强了）</p><p>拆解任务</p><p>自我检查</p><p>做同一个任务多次，然后让他选择其中最正确的</p><p>rag</p><p>Program of thoughts</p><p>tree of thoughts(对于一个任务进行分拆，然后对于每一个任务进行多次，然后选择其中正确的继续）</p><p>调用工具，即让训练产生特殊的token，然后遇到这个token就去调用</p><p>模型合作</p><p>让一个前面的模型来决定用哪个模型来解决</p><p>让多个模型互相讨论</p><p>引入不同的角色</p><p>lora：不改变原本的pretrained参数，而是额外加一些类似的参数，对这些参数进行训练</p><p>pretrain sft</p><p>可以通过chat来获得大量的资料</p><p>RL：可以训练一个回馈模型来做RL吗</p><p>agent</p><p>AG和NAG</p><p>进行混合</p><p>speculative generation，就是通过一些更加快速比如NAG或者较小的模型进行快速的生成，这样原本的大模型就可以同时进行生成，然后再舍弃掉预言所得的错误的结果</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>设计模式</title>
    <link href="/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    <url>/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<p>设计模式相当于是一种抽象的思路，为解决问题而生的固定化的套路思路。</p><h3 id="面向对象">面向对象</h3><p>抽象：将具体事物抽象</p><p>封装：隐藏接口实现</p><p>继承：提取相同部分</p><p>多态：用相同的代码调用不同但类似的对象</p><h3 id="对象之间的关系">对象之间的关系</h3><ol><li>依赖：类A中存在类B相关的东西</li><li>关联：类A中有类B</li><li>聚合：类A与类B是包含的关系但是非单一</li><li>组合：类A完全由类B等类组成</li><li>实现：类A实现接口类B</li><li>继承：类A继承B的接口与实现，并可以拓展</li></ol><p>面向对象最重要的两个设计要点就是：</p><ol><li>复用代码</li><li>扩展性</li></ol><p>而一个好的设计最重要的事：不要依赖于具体类或它的实现，而是要依赖于一个接口。</p><p>这个接口可以由对方来实现，也可以通过一个抽象类（接口类）作为中间层，而这个接口类表示我们所想要依赖的最本质的特性，如吃的依赖是食物等等。</p><p>另外，抽象类不要特化，特化交给继承来做，来实现接口。</p><p>且，有时组合是由于继承的。继承在枚举其下属属性的所有可能性，而组合就是将乘法变为加法，将无关的属性抽离出原本的类，作为一个新的类来实现，再通过对各自属性的继承来实现总体属性的枚举。</p><h2 id="SOLID">SOLID</h2><h3 id="单一职责原则">单一职责原则</h3><p>将一个复杂职责的类切分为多个单职责的类，使得对于每一个类仅需关注其本身而对于整体的组合也无需关注细节实现。这一点并不仅仅是为了模块化，还是为了方便我们更加掌控代码，调整整体逻辑。</p><p>但一般在实现上就是将实现归类，放在更关联的类中。</p><h3 id="开闭原则">开闭原则</h3><p>闭：不修改类本身与实现。保证原本的依赖类的对象仍能正常工作。</p><p>开：通过继承的方式扩展其功能或进行修改，如需要重构某一个类，通过一个子类继承后重写对应方法即可。</p><p>不要动屎山，而是在屎山上添砖加瓦。</p><h3 id="里氏替换原则">里氏替换原则</h3><p>在扩展类，也就是在进行子类继承时，必须保证子类对象能够作为父类对象而进行使用。</p><p>在对于其他的要求上，子类必须相同或更加宽泛（在函数参数与依赖对象的要求上）。</p><p>在他类对自己的要求上，子类必须相同或更加狭窄（在函数返回值与抛出异常和对他类的保证上）。</p><h3 id="接口隔离原则">接口隔离原则</h3><p>当继承时，不希望继承许多无用的声明，可以将其中一起的一部分抽象为一个接口类。而对于接口类，也可以通过组合的方式将其拆分为多个更小的接口类来防止无用的继承实现。</p><p>可以使用多重继承来实现多个接口类。</p><h3 id="依赖倒置原则">依赖倒置原则</h3><p>当高层次的类直接依赖于低层次的类时，但我们不希望高层次的类关注低层次的实现，应该将低层次的类抽象为一个抽象类，使高层次的类依赖于它（同样高层次），但此时低层次的类就使依赖***(?)***于该抽象类了。</p><h2 id="创建型模式">创建型模式</h2><p>提供代码灵活性和复用性的创建对象的模式。</p><h3 id="工厂模式">工厂模式</h3><p>将多种具体产品抽象为一个抽象的产品，并以一个抽象类“工厂”来创建产品，返回一个抽象产品指针，其通过继承来实现对于不同产品的创建。</p><p>优点：</p><p>这样可以使创建与对象本身相分离，使得更加具有扩展性。</p><p>不用构造函数而使用其他的函数简介创建对象能够实现更加复杂的功能，如使其变为单例。</p><p><img src="/image/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8FUntitled.png" alt=""></p><h3 id="抽象工厂">抽象工厂</h3><p>抽象工厂实际是工厂模式的上位。工厂模式中是只有一个工厂，而抽象工厂将工厂也抽象出来，很多具体工厂继承抽象工厂，返回对应产品的抽象产品。不同的工厂生产的产品抽象为不同的抽象产品。</p><p>一般用于二维的种类情况下，多个不同系列的相关产品。</p><blockquote><p>如果你有一个基于一组抽象方法的类，且其主要功能因此变得不明确，那么在这种情况下可以考虑使用抽象工厂模式。</p></blockquote><h3 id="生成器">生成器</h3><p>当一个类的种类维度很大的时候，若是通过工厂的方式，需要建立很多子类，使代码变复杂。这个时候就应该使用生成器。</p><p>生成器拥有一个建造者抽象类来负责具体某一维度的创建（通过多个建造者可以来实现不同情景下的类似的结构，如windows和mac），另外一个主管类来负责决定到底让建造者抽象类来创建哪一部分。最终通过主管类来获取最终产品。</p><p>实现上，一般使用一个容器来装维度。另外，每一个建造者类需要创建一个获取最终产品的函数，这是由于产品可能接口不同，因此不能再基类中使用抽象接口返回。另外，在创建交付完后，需要重置建造者的产品以为下一次建造做准备。</p><p>可以用于构造组合树和其他复杂对象。</p><h3 id="原型">原型</h3><p>由于类的有一部分成员是私有的，所以很难完全进行复制。为了能够进行复制，因此使用原型的方式。</p><p>原型实际就是通过复制一个具体的类的实例来“复制”。将需要复制的原型归于一个抽象原型类，其提供一个返回指向自身的指针。另外需要一个注册表类来对应类名和类的实例，一般使用map存储即可。这个类的实例里的属性可以是任意的初值，根据情况而定。</p><p>优点：</p><p>一般复制使用拷贝构造或拷贝赋值，但这会和具体类的实现相关联，原型可以使复制代码独立于具体类。</p><p>对于常用的一些特定的类实例，可以通过原型来去掉初始化时使用的时间，也可以使更加方便。</p><p>并可以通过继承以外的方式来处理复杂对象的不同配置。</p><h3 id="单例">单例</h3><p>正如其名，就是永远只有一个实例。而这是构造函数所不能实现的。</p><p>使用单例不但是为了让某个对象共享，更是为其提供了全局变量不能提供的安全性(不懂是什么样的安全性)。</p><p>实现时在单例类中创建一个该单例类的静态指针，指向实际有意义的那个实例。另外通过一个新的函数来代替构造函数来间接构造。该函数来判断是调用构造函数创建实例或者返回已有实例。</p><p>若是在多线程中，需要使用线程锁来保证安全，否则可能最后因为多线程而创造了多个实例。</p><p>优点：</p><p>可以用作一个全局变量（用函数来调用获得）</p><h1>下面都得重写</h1><h3 id="适配器">适配器</h3><p>有时程序库提供的接口并不符合我们的希望，如数据类型不同等等，此时我们可以通过更改程序库来支持这样的一个接口。但是一般来说能不改原来已有完成的类是不好的，有的时候甚至我们并没有程序库的源代码，无法进行更改，因此，我们可以使用适配器来提供一个间接的接口。</p><p>适配器实际上很简单，就是一个类，类的构造函数传入一个要被适配的对象(调用函数库者)，继承程序库，并重写接口，使接口符合我们希望的样子。</p><p>或者也可以使用多重继承，就无需传入被适配的对象。</p><p>一般用于使某个接口可以使用，或者当一个继承体系下某一些类共有一些方法可以通过适配器来实现（如何实现?）。</p><p>适配器一般用于更改已有接口使其适配各种各样的。</p><h3 id="桥接">桥接</h3><p>对于一个非常复杂的类，我们可以通过将其转化为一个多层的层级结构（每一个节点都是一个类）来简化它。</p><p>在这种情况下，下级的具体类将作为上级抽象类的一个对象而存在，这可以使上级抽象类不用管下级具体类的实现，自己直接调用接口即可。</p><p>每一层的类的修改都不影响其他类的情况，易于更改，维护。</p><p>另外由于下层类仅仅是上层的一个对象，因此可以通过传入各种不同的底层实现具体类对象来轻松更改下层实现方式。</p><h3 id="组合">组合</h3><p>当对于当个对象和复合对象都有着很多很多类似的操作时，可以使用组合，如军队，窗口等等。</p><p>实现上：用一个类实现所有相同的操作，再分别用叶节点和组合体继承这个类。整体实现一个树的结构。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>差分约束</title>
    <link href="/%E5%B7%AE%E5%88%86%E7%BA%A6%E6%9D%9F/"/>
    <url>/%E5%B7%AE%E5%88%86%E7%BA%A6%E6%9D%9F/</url>
    
    <content type="html"><![CDATA[<p>一个差分约束问题是一个线性规划问题，只不过只有一个限制条件。</p><p>Ax<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\le</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≤</span></span></span></span>B。</p><p>而在A矩阵中每一行只存在一个1和一个-1，其他全为0。</p><p>我们可以将这个问题转换为一个图论问题。</p><p>对于这样的问题，我们进行建图，如果存在一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>x</mi><mi>j</mi></msub><mo>≤</mo><mi>a</mi></mrow><annotation encoding="application/x-tex">x_i-x_j\le a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9221em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span>，则建立一条从<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">x_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的边，边的权重为a。</p><p>另外新建一个节点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">x_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，它指向所有的原有未知数节点，权重大小都为0。</p><p>这个图被称为约束图。</p><p>最终求<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">x_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>到其他所有节点的最短路，得出的最短路径的长度就是每个未知数的一个可行解。</p><p>当存在包含负环时，无解。</p><p>接下来用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mtext>表示边的权重，</mtext><mi>δ</mi><mtext>表示最短路</mtext></mrow><annotation encoding="application/x-tex">w表示边的权重，\delta表示最短路</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord cjk_fallback">表示边的权重，</span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mord cjk_fallback">表示最短路</span></span></span></span>，由于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi><mo stretchy="false">(</mo><msub><mi>v</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo>≤</mo><mi>δ</mi><mo stretchy="false">(</mo><msub><mi>v</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>+</mo><mi>w</mi><mo stretchy="false">(</mo><msub><mi>v</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\delta(v_0,v_j)\le\delta(v_0,v_i)+w(v_i,v_j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，这是由于右式是一条可行路径，因此最短路小于等于可行路径。因此，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi><mo stretchy="false">(</mo><msub><mi>v</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo>−</mo><mi>d</mi><mi>e</mi><mi>l</mi><mi>t</mi><mi>a</mi><mo stretchy="false">(</mo><msub><mi>v</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>≤</mo><mtext> </mtext><mi>w</mi><mo stretchy="false">(</mo><msub><mi>v</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\delta(v_0,v_j)-delta(v_0,v_i)\le\ w(v_i,v_j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mord mathnormal">lt</span><span class="mord mathnormal">a</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，符合差分约束条件。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>汇编</title>
    <link href="/%E6%B1%87%E7%BC%96/"/>
    <url>/%E6%B1%87%E7%BC%96/</url>
    
    <content type="html"><![CDATA[<ol><li><p>编译</p><p>nasm -f elf 文件名</p><p>-f：指定输出文件格式，elf：linux格式下的可执行文件</p><p>ld -m elf_i386 -s -o 目标文件名 原可执行文件名</p><p>ld：调用ld链接器 -m：指定格式(elf_i386) -s：去除所有符号表和重定位信息,生成更小的可执行文件 -o：指定输出名</p></li><li><p>代码部分（section后面都有空格）</p><ol><li>section .data：常量</li><li>section .bss：变量</li><li>分号后是注释，如//</li><li>section .text：代码，格式必须是</li></ol> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs nasm">section.text<br>   global _start ;must be declared for linker (gcc)<br><br>_start:         ;tell linker entry point<br>   code<br></code></pre></td></tr></table></figure></li><li><p>每一句代码的格式：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>l</mi><mi>a</mi><mi>b</mi><mi>e</mi><mi>l</mi><mo stretchy="false">]</mo><mtext> 操作码 </mtext><mo stretchy="false">[</mo><mtext>目标对象地址</mtext><mo stretchy="false">]</mo><mtext> </mtext><mo stretchy="false">[</mo><mtext>源对象地址</mtext><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[label]\ 操作码\ [目标对象地址]\ [源对象地址]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">ab</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mclose">]</span><span class="mspace"> </span><span class="mord cjk_fallback">操作码</span><span class="mspace"> </span><span class="mopen">[</span><span class="mord cjk_fallback">目标对象地址</span><span class="mclose">]</span><span class="mspace"> </span><span class="mopen">[</span><span class="mord cjk_fallback">源对象地址</span><span class="mclose">]</span></span></span></span></p><p>INC：  1  加1</p><p>MOV：2  后赋值前</p><p>ADD： 2 后加到前</p><p>AND： 2 后与前</p></li><li><p>内存一般有三个部分：</p><ol><li>数据段</li><li>代码段</li><li>堆栈</li></ol></li><li><p>寄存器</p><ol><li><p>普通寄存器：EAX，EBX，ECX，EDX</p><p>低16位：AX(accumualator，用于输入输出和算数)，BX(用于索引地址)，CX(记录循环次数)，DX(输入输出)</p><p>低8位：AL，BL，CL，DL</p><p>中低8位：AH，BH，CH，DH</p></li><li><p>指针寄存器(ESP，EBP)</p><p>SP：栈指针(函数调用就会下移，返回就上移)</p><p>BP：栈数据指针，指向函数的局部变量和参数</p><p>IP：记录下一条要执行语句的位置</p></li><li><p>索引寄存器(ESI，EDI）</p><p>SI：源对象地址</p><p>DI：目标对象地址</p></li><li><p>标志状态寄存器</p><p>OF：计算溢出</p><p>DF：表示字符串处理方向</p><p>IF：是否启用外部中断(如键盘)</p><p>TF：是否启用单步执行(调试)</p><p>SF：算数结果的符号</p><p>ZF：运算或比较的结果是否为0</p><p>AF：存储第3位到第四位的进位情况(有些运算需要)</p><p>PF：奇偶校验</p><p>CF：存储最高位进位</p></li><li><p>段寄存器</p><p>CS：代码段寄存器，记录代码段的起始处和最大大小</p><p>DS：数据段寄存器，记录全局变量和静态变量的首地址和最大大小</p><p>SS：堆栈段寄存器，记录栈的底部位置和最大可扩展深度</p><p>ES：额外段寄存器，可以临时被更改指向用于访问特定空间，用于字符串</p><p>FS/GS：同ES</p><p>由于指向的地址一般为16的整数倍，因此在16进制下，最右侧的一位0被省略</p></li></ol></li><li><p>系统调用</p><p>系统的内核中有一些已经写好的汇编函数，可以用来使用当前系统进行一些操作，而不需要知道细节。</p><p>方法：将syscall的代码mov入EAX，将参数mov入EBX，ECX等等，最后调用相关中断（int 0x80/80h)。</p><p>syscall的代码能在/usr/include/asm/unistd.h中找到。</p><p>sys_exit 返回状态码</p><p>sys_read 输入状态码 address length</p><p>sys_write 输出状态码 address length（只能输出字符字符串）</p><p>sys_write null address length</p><p>sys_close(对文件) null 文件描述符（文件描述符在创建新文件或打开现有文件时会生成一个）</p><p>sys_open ？</p></li><li><p>寻址</p><ol><li>寄存器操作数：操作数为寄存器（<code>MOV EAX, EBX</code>）</li><li>立即操作数：操作数为立即数，一般为第二个操作数（<code>ADD BYTE_VALUE, 65</code>）</li><li>直接存储地址：使用变量名存储地址(偏移值)（<code>ADD BYTE_VALUE, DL</code>）(byte_value就是变量)</li><li>直接偏移寻址：就像数组一样，用数组名[n]或者数组名+n来获取</li><li>间接存储器寻址：对于一个变量，给它加上[]就是取地址，而给寄存器加上[]就是获取其存储的地址所指向的值。</li></ol><p>对于mov来说不能将memory移动到memory，一般来说都会通过寄存器来中转。</p><p>如果一开始定义变量没有定义类型，那么给它mov立即数时要在立即数前加上类型来避免歧义<code>mov[name],  dword 'Nuha'</code>。</p></li><li><p>定义变量（变量实际上就是一个地址，指向内存中的一个位置）</p><ol><li><p>要初始化D(B/E/D/Q/T)</p><p>变量名 类型 初始值（可以是各种类型的初始值，只是按照这种类型的方式存储了）</p><p>可以一下子写很多初始值，相当于申请了一个数组，而对于字符串来说本身没有逗号也算是一个字符数组了</p></li><li><p>不初始化RES(B/E/D/Q/T)</p><p>为未初始化的数据保留空间。</p></li><li><p>定义数组</p><p>变量名 times 数组大小 类型 初始化值(给每一个元素都赋这样的初始值)</p></li></ol><p>当连续进行定义的时候会连续分配空间？</p></li><li><p>定义常量</p><ol><li><p>equ</p><p>常量名 equ 表达式(如变量和变量✖️)</p></li><li><p>%assign</p><p>常量名 assign 值(不知道可不可以表达式)</p><p>可以被重复赋值，但是有限制，只能用这个定义表达式对已定义的进行修改。</p></li><li><p>%define(宏)</p><p>%define 被替换字符串 替换字符串</p></li></ol></li><li><p>算数运算</p><ol><li><p>inc/dec(可以操作内存)，加减1</p></li><li><p>add/sub，会影响溢出和进位状态位</p></li><li><p>mul(无符号)/imul(有符号) 乘数</p><p>被乘数必须是已经放在特定寄存器中了</p><p>1字节相乘：放AL，结果在AX</p><p>2字节相乘：放AX，结果在DX(高)和AX(低)</p><p>4字节相乘：放EAX，结果在EDX和EAX</p></li><li><p>div/idiv 除数（会影响状态标志位，OF,SF,ZF,AF,PF,CF）</p><p>2字节/1字节：放AX，AL为商，AH为余数</p><p>4字节/2字节：高位放DX，低位放AX，商在AX，余数在DX</p><p>8字节/4字节：高位放EDX，低位放EAX，商在EAX，余数在EDX</p></li></ol></li><li><p>逻辑运算</p><ol><li>and,or,xor,not，会更改第一个操作数，并改变标志状态位(CF,OF,PF,SF,ZF)</li><li>test，与and效果一致，但不会更改第一个操作数，但会改变标志状态位。</li></ol></li><li><p>汇编条件</p><ol><li><p>设定label，格式，一行label:</p></li><li><p>无条件跳转，jmp label。</p></li><li><p>有条件跳转，通过判断标志状态位来选择是否跳转。</p><p>可以通过cmp来辅助跳转，判断两个是否相等。</p><table><thead><tr><th>条件跳转指令</th><th>检查的标志位</th><th>跳转条件</th></tr></thead><tbody><tr><td>JE/JZ</td><td>ZF</td><td>相等/为零时跳转</td></tr><tr><td>JNE/JNZ</td><td>ZF</td><td>不相等/不为零时跳转</td></tr><tr><td>JG/JNLE</td><td>SF, ZF</td><td>大于/不小于等于时跳转</td></tr><tr><td>JGE/JNL</td><td>SF, OF</td><td>大于等于/不小于时跳转</td></tr><tr><td>JL/JNGE</td><td>SF, OF</td><td>小于/不大于等于时跳转</td></tr><tr><td>JLE/JNG</td><td>SF, ZF</td><td>小于等于/不大于时跳转</td></tr><tr><td>JA/JNBE</td><td>CF, ZF</td><td>高于/不低于等于时跳转</td></tr><tr><td>JAE/JNB</td><td>CF</td><td>高于等于/不低于时跳转</td></tr><tr><td>JB/JNAE</td><td>CF</td><td>低于/不高于等于时跳转</td></tr><tr><td>JBE/JNA</td><td>CF, AF</td><td>低于等于/不高于时跳转</td></tr><tr><td>JCXZ</td><td></td><td>CX寄存器为零时跳转</td></tr><tr><td>JC</td><td>CF</td><td>有进位时跳转</td></tr><tr><td>JNC</td><td>CF</td><td>无进位时跳转</td></tr><tr><td>JO</td><td>OF</td><td>有溢出时跳转</td></tr><tr><td>JNO</td><td>OF</td><td>无溢出时跳转</td></tr><tr><td>JP/JPE</td><td>PF</td><td>奇偶校验为偶数时跳转</td></tr><tr><td>JNP/JPO</td><td>PF</td><td>奇偶校验为奇数时跳转</td></tr><tr><td>JS</td><td>SF</td><td>负值时跳转</td></tr><tr><td>JNS</td><td>SF</td><td>正值时跳转</td></tr></tbody></table></li></ol></li><li><p>汇编循环</p><p>虽然可以使用条件和跳转来实现循环，但也可以更加简便。</p><p>loop label</p><p>次数为ecx中存储的数字，ecx会递减，直到0。</p></li><li><p>汇编编号</p><p>汇编中输入，都会用ascii存储。如果要进行算数运算，就得先-’0’将其转为数字，运算后再转回去，效率低下。</p><p>在ascii(或者BCD)下进行三者运算后和除法前进行调整来在ascii下的运算也能是正确的，AA(A/S/M/D)，并使用DA(A/S)来调整小数加减。对于压缩的BCD(两位放在一个字节)不能乘除。</p></li><li><p>字符串</p><p>要获取一个字符串的长度，一种方式是显式定义长度，另一种是在字符串定义之后，立即计算<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mtext>字符串变量名，</mtext></mrow><annotation encoding="application/x-tex">-字符串变量名，</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord cjk_fallback">字符串变量名，</span></span></span></span>代表现在能用的存储开头，而字符串变量名指的是字符串的首地址，相减得出的自然就是长度了。</p><ol><li>MOVS EDI ESI，将EDI指向的内存存储的字符串MOV到ESI指向的内存</li><li>LODS (E)A(X/L) ESI，将ESI指向的内存存储的字符串MOV到寄存器中</li><li>STOS EDI (E)A(X/L)，将寄存器存储的字符串MOV到ESI指向的内存存储中</li><li>CMPS ESI EDI，将两处字符串进行比较</li><li>SCAS EDI (E)A(X/L)，将内存中的字符串与寄存器中的字符串进行比较</li></ol><p>更大的部分进行操作的时候在指令后加上对应的字母(B/W/D)</p><p>方向标志会决定进行的顺序，无方向则从小到大，否则从大到小</p><p>在操作前加上REP会使操作进行CX(随之变小)次，REPE/Z和REPNE/Z会根据0标志位来决定是否继续循环。</p></li><li><p>函数</p><p>对于一段代码，在前面加上label:，在结尾加上ret这一段程序就变成函数了。</p><p>在调用时，直接call label即可。</p></li><li><p>栈（用于形参等方面）</p><p>push memory/reigiter/imediate</p><p>pop memory/reigiter</p></li><li><p>宏函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs nasm">%macro name 参数个数<br>body;要用参数的时候直接按顺序形参名分别位%i<br>%endmacro<br><br>调用：name 参数1, 参数2....<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>离散</title>
    <link href="/%E7%A6%BB%E6%95%A3/"/>
    <url>/%E7%A6%BB%E6%95%A3/</url>
    
    <content type="html"><![CDATA[<h3 id="1-1">1.1</h3><p>无序对</p><p>无序积 &amp;</p><p>多重集</p><p>重复度</p><p>无向图G</p><p>顶点集V 无序积</p><p>边集E</p><p>有向图D 多重子集</p><p>n个定点的图被称为n阶图</p><p>无边为零图</p><p>平凡图： 1阶0图</p><p>空图：无顶点</p><p>环：两端点重合</p><p>关联，关联次数：与边相接的边数</p><p>相邻：共同点或共同边</p><p>有向图始点，终点</p><p>相邻也要遵从有向</p><p>孤立点：没边</p><h3 id="1-2">1.2</h3><p>度d：连接的边数，环算2</p><p>握手定理：度和为2*边</p><p>有向图出就是出度，如就是入度</p><p>悬挂顶点：度1，悬挂边</p><p>最大(小)(入/出)度△/δ</p><p>度数为奇数的顶点为偶数个</p><p>有向图入度=出度=边数</p><p>度数列：每个节点的度的数组</p><h3 id="1-3">1.3</h3><p>平行边：关联同一对顶点</p><p>重数：平行边的数量</p><p>有向平行边：简称平行边</p><p>多重图：有平行边</p><p>简单图：无环无平行边</p><p>无K<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow></mrow><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3014em;vertical-align:-0.15em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>(有)向完全图：m=n(n-1)(/2)</p><p>k-正则图：无向图且度都为k</p><p>无≥3(有≥2)向圈图，无向的简称圈图</p><p>轮图：≥4无向圈图加一点全连</p><p>n方体图：以2进制记录每一个点，只与其只有一位不同的点相连</p><h3 id="1-4">1.4</h3><p>(真)子图，母图：V和E都(或真)包含于</p><p>生成子图：只去边</p><p>导出子图G[V’/E’]：根据选择的V’或E‘将相关的另一个集合中的元素全部保留</p><p>补图：对于无向图，补成完全图的边集所得图</p><h3 id="1-5">1.5</h3><p>同构：完全一致，可以通过调整边和点的位置来使其相同</p><h3 id="2-1">2.1</h3><p>通路：a→b的一条路</p><p>长度：边的数量</p><p>回路：a=b</p><p>简单通/回路：边异</p><p>初级通/回路(路径/圈)：边异且点异</p><p>奇/偶圈</p><p>复杂通/回路：一条边多次出现</p><p>表示：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mn>0</mn></msub><msub><mi>e</mi><mn>0</mn></msub><msub><mi>v</mi><mn>1</mn></msub><mo>⋯</mo><msub><mi>v</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><msub><mi>e</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><msub><mi>v</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">v_0e_0v_1\cdots v_{n-1}e_{n-1}v_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>若u能到v，那么存在通路，那么必有≤n-1</p><p>若u存在简单回路，那么必有≤n</p><h3 id="2-2">2.2</h3><p>连通的：存在通路</p><p>连通图：平凡图/任意两点都连通</p><p>连通分支：互相能到的一个部分，其R={&lt;x,y&gt;}为等价关系，即自反，对称，传递</p><p>p(G)：连通分支的数量，=1时为连通图</p><p>短程线d(a,b)：最短路</p><p>距离：短程线长度</p><p>删除：G-V’或G-E’</p><p>点(边)割集：这些点(边)删除正好使连通分支增加</p><p>割点(边)(桥)：只有一个点(边)的点割集</p><p>完全图无点割集</p><p>0图都无</p><p>边割集最多增加1个，而点割集≥1</p><p>点(边)连通度κ(G)/λ(G):最小的点(边)割集大小或者（或者让点数只剩1个）</p><p>平凡图，都0</p><p>完全图，点 n-1</p><p>κ≤λ≤δ</p><h3 id="2-3">2.3</h3><p>可达：a→b</p><p>相互可达：a→b，b→a</p><p>短程线d&lt;a,b&gt;</p><p>弱连通图：去掉方向为连通图</p><p>单向连通图：任意两个顶点一个可达另一个   存在经过每个点的一条通路</p><p>强联通：互相可达                                            存在经过每个点的一条回路</p><h3 id="3-1">3.1</h3><p>关联矩阵M(G)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow></mrow><mrow><mi>n</mi><mo>×</mo><mi>m</mi></mrow></msub></mrow><annotation encoding="application/x-tex">_{n×m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4667em;vertical-align:-0.2083em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2583em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span>：点和边的关联次数</p><p>每列和2，每行和度，总和握手</p><h3 id="3-2">3.2</h3><p>有向关联矩阵M(D)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow></mrow><mrow><mi>n</mi><mo>×</mo><mi>m</mi></mrow></msub></mrow><annotation encoding="application/x-tex">_{n×m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4667em;vertical-align:-0.2083em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2583em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span>：始点1，终点-1</p><p>可算入度出度，列和0</p><h3 id="3-3">3.3</h3><p>有向邻接矩阵A(D)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow></mrow><mrow><mi>n</mi><mo>×</mo><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">_{n×n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4667em;vertical-align:-0.2083em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2583em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span>：i到j的边数</p><p>A<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mrow></mrow><mrow><mi>i</mi><mi>j</mi></mrow><mi>l</mi></msubsup></mrow><annotation encoding="application/x-tex">^l_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2439em;vertical-align:-0.3948em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.4413em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3948em;"><span></span></span></span></span></span></span></span></span></span>：i到j长度为l的通路数</p><p>B<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mrow></mrow><mrow><mi>i</mi><mi>j</mi></mrow><mi>l</mi></msubsup></mrow><annotation encoding="application/x-tex">^l_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2439em;vertical-align:-0.3948em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.4413em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3948em;"><span></span></span></span></span></span></span></span></span></span>：i到j长度≤l的通路数</p><h3 id="3-4">3.4</h3><p>有向可达矩阵P(D)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow></mrow><mrow><mi>n</mi><mo>×</mo><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">_{n×n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4667em;vertical-align:-0.2083em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2583em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span>：i能不能到j    iff B<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mrow></mrow><mrow><mi>i</mi><mi>j</mi></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msubsup></mrow><annotation encoding="application/x-tex">^{n-1}_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2672em;vertical-align:-0.413em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8542em;"><span style="top:-2.4231em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span><span style="top:-3.1031em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.413em;"><span></span></span></span></span></span></span></span></span></span>&gt;0</p><p>无向图的可达和邻接类似</p><h3 id="4-1">4.1</h3><p>二部图：将图中的顶点分为两个点集，任意一条边的两个端点各属于一个点集</p><p>完全二部图<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mrow><mi>r</mi><mo separator="true">,</mo><mi>s</mi></mrow></msub></mrow><annotation encoding="application/x-tex">K_{r,s}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>：两个点集两两互联</p><p>两个点集被称为互补顶点子集</p><p>判定：无奇数长度回路</p><p>一般判定：直接分类标记</p><p>匹配：指二部图的一个子图，一个顶点的边数≤1</p><p>极大匹配：多一条边就不是匹配了</p><p>完备匹配：一个点集都配备了一条边</p><p>完美匹配：双方都完备匹配</p><p>hall定理(相异性条件)(充要)：v1中的任意k各顶点至少与v2中的任意k各顶点相邻</p><p>t条件(充分)：存在整数t，使v1中每个顶点的度≥t，且v2中每个顶点的度≤t</p><h3 id="4-2">4.2</h3><p>欧拉通路：经过每条边=1的通路</p><p>欧拉回路：是回路的欧拉通路</p><p>欧拉图：有欧拉回路</p><p>无向图判定条件：连通图且无奇度顶点</p><p>有向图判定条件：连通图且所有顶点入度=出度</p><p>有向图欧拉通路非回路判定条件：连通图且有2个不满足，一个差值为1，一个为-1</p><h3 id="4-3">4.3</h3><p>哈密顿通路：经过每个点=1的通路</p><p>哈密顿回路(必为初级)：是回路的哈密顿通路</p><p>哈密顿图：有哈密顿回路</p><p>删除v1个顶点，p≤v1</p><p>有割点的不是哈密顿图</p><p>因为是回路</p><p>(充分)：n≥3无向简单图，任意一对不相邻顶点度和≥n-1存在通路，≥n为哈密顿图</p><p>最小度≥<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>n</mi><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{n}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0404em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6954em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>也是哈密顿图</p><p>n≥2有向图，略去方向存在K<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow></mrow><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3014em;vertical-align:-0.15em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，则存在哈密顿通路</p><h3 id="4-4">4.4</h3><p>平面图仅讨论无向图</p><p>平面嵌入：画在平面上无交叉边</p><p>平面图：有平面嵌入的图</p><p>面R<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow></mrow><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4617em;vertical-align:-0.15em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>：平面图的一个区域</p><p>无限面：最外侧的无线区域</p><p>内部面：除无限面的其他面</p><p>边界：一个面的边界</p><p>次数deg(R<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow></mrow><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4617em;vertical-align:-0.15em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>)：边界的长度，即边界的边数</p><p>面的次数之和*2=边数，即握手定理</p><p>极大平面图：加入一条边就不是平面图了</p><p>性质：连通且当n≥3时每个面的次数都为3</p><p>n-m+r=k+1    k为连通分支数</p><p>若为连通平面图，且min次数≥l，则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>≤</mo><mfrac><mi>l</mi><mrow><mi>l</mi><mo>−</mo><mn>2</mn></mrow></mfrac><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">m\le \frac{l}{l-2}(n-2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2834em;vertical-align:-0.4033em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4033em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">)</span></span></span></span></p><p>同胚：同构或反复插入或消去2度顶点后同构</p><p>收缩：重合两点，删除关联边，剩下保留</p><p>库拉图斯基定理(判定)：iff不含与k5或k33同胚的子图</p><pre><code class="hljs">                                   iff不含可收缩到k5或k33的子图</code></pre><p>对偶图：面作点，若有共边，则相连，经过这条边，为连通平面图</p><p>点面数互换，边数不变</p><p>对偶图vi的度=ri的次数</p><p>点着色：对每个顶点涂色，要求相邻颜色不同</p><p>k-可着色的：能用k中颜色点着色</p><p>任何平面图都是4-可着色的</p><h3 id="1-1-2">1.1</h3><p>无向树(树)：连通不含回路的图</p><p>森林：每个连通分支都是树</p><p>平凡树：平凡图</p><p>树叶：d=1</p><p>分支点：d≥2</p><p>非平凡树的叶子数≥2</p><p>不同度数列对应的树必不同构，但同度数列对应的树也可能不同构</p><h3 id="1-2-2">1.2</h3><p>生成树：是树的生成子图</p><p>树枝：在生成树中的边</p><p>弦：非树枝</p><p>余树：弦的导出子图</p><p>无向连通图都存在生成树</p><p>权：边上的实数</p><p>带权图</p><p>kruskal(避圈法)</p><h3 id="2">2</h3><p>有向树：略去方向为树的有向图</p><p>根树：一个顶点入度=0，其他入度=1</p><p>树根</p><p>树叶</p><p>内点：除去树根和树叶的点</p><p>分支点：内点和树根</p><p>层数：树根到该点的通路长度，即树根为0层</p><p>树高：max层</p><p>根子树：其实就是子树</p><p>有序树：将每一层的顶点都规定次序</p><p>r元树：每个节点的孩子≤r</p><p>r元正则树：每个节点的孩子=r</p><p>完全的：树叶的层数相同</p><p>最优二叉树(哈夫曼树)：选最小的合并</p><p>最佳前缀码：根据频率生成哈夫曼树</p><p>前中后遍历</p><p>周游/行遍：每个顶点访问次数=1</p><p>前缀表示法：从右到左每个运算符对后面紧挨的两个数运算</p><p>后缀：从左到右~对前面~</p><h3 id="1-1-3">1.1</h3><p>S上的二元运算：S运算S→S</p><p>封闭：S上的二元运算对S封闭</p><p>S上的一元运算：运算S→S</p><h3 id="1-2-3">1.2</h3><p>交换律</p><p>结合律</p><p>幂等律<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>=</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">x^2=x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span></p><p>分配律</p><p>吸收律：在交换律的基础上，x*(x+y)=x且x+(x*y)=x</p><p>代数常数：单位元，零元，可逆元，逆元</p><p>(左/右)单位元：ex=x</p><p>(左/右)零元：θx=θ</p><p>(左/右)逆元：yx=e</p><p>可逆：存在逆元</p><p>若存在左右单位元，则相等且为单位元</p><p>若存在左右逆元，则相等且为逆元</p><p>消去律</p><h3 id="2-1-2">2.1</h3><p>代数系统(代数)V：非空集合S和其上的k个1/2元运算，</p><p>&lt;S,f1,f2,…&gt;一般二元运算写在前，S被称为载体，还可写上代数常数</p><h3 id="2-2-2">2.2</h3><p>同类型的代数系统：运算个数，对应的元数，代数常数个数都相同</p><p>同种的代数系统：对应运算性质相同的同类型的代数系统</p><h3 id="2-3-2">2.3</h3><p>(真)子代数(同种)：S中的一个(真)子集S‘，对所有运算封闭且代数常数相同</p><p>平凡子代数：V自身，其代数常数若封闭则为最小平凡子代数</p><p>积代数：两个同类型代数系统&lt;A,+&gt;,&lt;B,<em>&gt;，&lt;a1,b1&gt;- &lt;a2,b2&gt;=&lt;a1+a2,b1</em>b2&gt;，则&lt;A×B,-&gt;为两代数系统的积代数，反之两者为其因子代数</p><p>特性：同类型，保留除消去律以外的所有运算性质，且保留代数常数</p><h3 id="2-4">2.4</h3><p>同态映射(同态)：f:V1→V2(同类型)，f(x+y)=f(x)*f(y)</p><p>单同态：单射</p><p>满同态(同态像)：满射</p><p>同构≌：双射</p><p>自同态：到自身的同态</p><p>零同态：f(x)=0x，x∈Z</p><p>同态：能够保留除消去律以外的大多性质和代数常数</p><p>同构：拥有完全相同的性质，被认为是同一代数系统</p><h3 id="3-1-2">3.1</h3><p>半群：&lt;S,+&gt;，+可结合</p><p>含幺半群(独异点)：有单位元的半群</p><p>若可结合，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mn>0</mn></msup><mo>=</mo><mi>e</mi></mrow><annotation encoding="application/x-tex">x^0=e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">e</span></span></span></span></p><p>子半群，子独异点(要求e要保留)</p><p>独异点的同态要求<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>e</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>=</mo><msub><mi>e</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">f(e_1)=e_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><h3 id="3-2-2">3.2</h3><p>群：每个元素都有逆元的独异点</p><p>有限群：有限元素群</p><p>无限群：无限元素群</p><p>阶|G|：元素的个数</p><p>平凡群：只有单位元</p><p>交换群(阿贝尔群)：二元运算还是可交换的群</p><p>有负次方：即(-1)*n</p><p>元素的阶|a|：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>i</mi><mi>n</mi><mtext> </mtext><mi>k</mi><mo separator="true">,</mo><msup><mi>a</mi><mi>k</mi></msup><mo>=</mo><mi>e</mi></mrow><annotation encoding="application/x-tex">min\ k,a^k=e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0435em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">min</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">e</span></span></span></span></p><p>无限阶元：不存在阶</p><p>像矩阵一样,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>a</mi><mn>1</mn></msub><mo>⋯</mo><msub><mi>a</mi><mi>n</mi></msub><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>=</mo><msubsup><mi>a</mi><mi>n</mi><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mo>⋯</mo><msubsup><mi>a</mi><mn>1</mn><mrow><mo>−</mo><mn>1</mn></mrow></msubsup></mrow><annotation encoding="application/x-tex">(a_1\cdots a_n)^{-1}=a_n^{-1}\cdots a_1^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1205em;vertical-align:-0.2663em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8542em;"><span style="top:-2.4337em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.1031em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2663em;"><span></span></span></span></span></span></span></span></span></span></p><p>ax=b和ya=b都有唯一解，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mi>b</mi><mtext>和</mtext><mi>b</mi><msup><mi>a</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">a^{-1}b和ba^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">b</span><span class="mord cjk_fallback">和</span><span class="mord mathnormal">b</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></p><p>群可以使用消去律</p><p>iff k是阶的整数倍的时候时<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mi>k</mi></msup><mo>=</mo><mi>e</mi></mrow><annotation encoding="application/x-tex">a^k=e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">e</span></span></span></span></p><p>逆元的阶相同</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><msup><mi>b</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mi>a</mi><mi>b</mi><mi mathvariant="normal">∣</mi><mo>=</mo><mi mathvariant="normal">∣</mi><mi>a</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|b^{-1}ab|=|a|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">ab</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal">a</span><span class="mord">∣</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>a</mi><mi>b</mi><mi mathvariant="normal">∣</mi><mo>=</mo><mi mathvariant="normal">∣</mi><mi>b</mi><mi>a</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|ab|=|ba|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal">ab</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal">ba</span><span class="mord">∣</span></span></span></span></p><p>(真)子群</p><p>平凡子群：G和{e}</p><p>判定定理1：ab∈G且<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">a^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>∈G</p><p>判定定理2：ab<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mrow></mrow><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>∈G</p><p>由a生成的子群：{a<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mrow></mrow><mi>k</mi></msup><mi mathvariant="normal">∣</mi><mi>k</mi><mtext>是整数</mtext></mrow><annotation encoding="application/x-tex">^k|k是整数</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0991em;vertical-align:-0.25em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord cjk_fallback">是整数</span></span></span></span>}</p><p>群的中心：{a|对任意x，ax=xa}</p><p>交换群的中心就是自身</p><p>子群格</p><p>零同态：G1→G2,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>e</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">f(x)=e_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>内自同构：G→G,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>a</mi><mi>x</mi><msup><mi>a</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">f(x)=axa^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></p><p>循环群<a></p><p>a为生成元</p><p>无限循环群，只有两个生成元，生成元和它的逆元</p><p>n阶循环群，与n互质的a^k</p><p>n元置换σ(i)</p><p><img src="/image/%E7%A6%BB%E6%95%A3Untitled.png" alt=""></p><p><img src="/image/%E7%A6%BB%E6%95%A3Untitled%201.png" alt=""></p><p><img src="/image/%E7%A6%BB%E6%95%A3Untitled%202.png" alt=""></p><p><img src="/image/%E7%A6%BB%E6%95%A3Untitled%203.png" alt=""></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>红黑树</title>
    <link href="/%E7%BA%A2%E9%BB%91%E6%A0%91/"/>
    <url>/%E7%BA%A2%E9%BB%91%E6%A0%91/</url>
    
    <content type="html"><![CDATA[<h3 id="性质">性质</h3><p><img src="https://files.catbox.moe/54xclr.png" alt=""></p><p><img src="https://files.catbox.moe/krcb5i.png" alt=""></p><h3 id="旋转">旋转</h3><p><img src="https://files.catbox.moe/rcl4yj.png" alt=""></p><h3 id="插入">插入</h3><p>插入的新节点或者需要调整的节点必然是红色的</p><p>当该节点的父亲是红色的时候，就需要调整。</p><p>情况一：叔节点是红色，将爷节点的黑色下放</p><p><img src="https://files.catbox.moe/c62w8n.png" alt=""></p><p>情况二：叔节点是黑色，当父节点是左节点时，本节点是左节点就右旋，右节点就左旋，有节点则相反，当与叔节点是异边节点时调整颜色</p><p>操作完成之后要么循环结束，要么矛盾节点上移产生新的矛盾</p><p>仍然没有搞懂为啥左节点的时候就不能左旋，虽然确实会不平衡，但为什么这样就会不平衡呢</p><h3 id="删除">删除</h3><p><strong>二叉搜索树的删除</strong></p><p>情况一：要删除的节点有一个子节点不存在，将子节点替换掉本节点即可</p><p>情况二：两个子节点都存在，在右子树上找到第一个没有左节点的节点，将它替换掉本节点，其右子树直接上升</p><p><img src="https://files.catbox.moe/3wbhvn.png" alt=""></p><p>实现方法：tranplant函数，即用某节点替换某节点</p><p><strong>红黑树的删除</strong></p><p>无论是情况一还是情况二中，唯一会影响红黑树的正确性的就是y的移动，因此需要记录y的原始颜色。</p><p>情况一：y的原始颜色就是z的颜色。</p><p>情况二：y的原始颜色就是上图中y中的颜色。因为最后y的颜色会改为z的颜色，所有是y原本的颜色消失了。</p><p>而这一切的产生的违反性质的问题都将在x节点上反映出来，x为y的子节点。</p><blockquote><p>不知道为什么有x是根节点的情况</p></blockquote><p>当x为红色时，染黑即可。</p><p>当x不为红色为黑色时，将它变红。</p><blockquote><p>为什么2,3,4的父节点是红的，如果节点是黑的是否有问题</p></blockquote><p>情况一：如果兄节点是红的，将它转为黑的，变为情况2,3,4</p><p>情况二：如果兄节点的两个孩子都是黑的，可以将x一重黑与兄节点的黑色提到父节点，即可去除一重黑。</p><p>情况三：如果兄节点的左孩子是红的，右孩子是黑的，将其右孩子转为红色，转为情况4。</p><p>情况四：如果兄弟的右孩子是红的，直接解决。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>计算机组成原理</title>
    <link href="/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    <url>/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/</url>
    
    <content type="html"><![CDATA[<p><a href="https://lhish.github.io/hide/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA">计算机系统概论</a></p><p><a href="https://lhish.github.io/hide/%E8%BF%90%E7%AE%97%E6%96%B9%E6%B3%95%E5%92%8C%E8%BF%90%E7%AE%97%E5%99%A8">运算方法和运算器</a></p><p><a href="https://lhish.github.io/hide/%E6%8C%87%E4%BB%A4%E7%B3%BB%E7%BB%9F">指令系统</a></p><p><a href="https://lhish.github.io/hide/CPU">CPU</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>计算机网络</title>
    <link href="/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    <url>/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</url>
    
    <content type="html"><![CDATA[<p>网络层及以下都是内核空间。</p><p>端口和每一层的类型一样，都是用来表示它上面一层使用的协议类型。</p><p>arp在局域网内一段传输主机之间知道互相的ip的时候广播arp请求询问对方的mac地址并由对方也已arp应答。包大小46，但填充到64（以太网传输要求）。</p><p>dns（应用层但直接用ip服务）就是类似于网上有一个分布式维护的域名和ip转换的数据库，所谓的dns服务器就是其中的一个服务器，里面的数据是动态更新的，如果发现查询的不存在且开启递归，那么这个服务器也会去问别的dns服务器。</p><p>socket不仅于tcp/udp，通过socketopt还可以使用其他的协议。</p><p>IP协议无状态（如果发多个报文段，不管整理，标识符只是用来分片的），无连接（每次都要输入IP），不可靠（尽最大努力）。</p><p>IP会分片，因为最大1500的长度。</p><p>tcp，字节流，面向连接，可靠。但是发送不是一个一个发的，我们将数据通过write放进缓冲区的次数与发出的tcp的个数不一定一样，通过read读到的个数和tcp的个数不一定一致，有粘包和半包的问题。</p><p>udp就是一个数据包就是一个信息。如果缓冲区不够还会直接被截断，接收不及时还可能直接没掉。</p><p><img src="/image/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCleanShot_2025-08-08_at_20.28.34.png" alt=""></p><p>time_wait状态是为了可靠的终止tcp连接，一种可能是超时了，需要重发什么的（并保证不再存在失效的报文段），另一种是如果关的早，那么自身客户端端口关闭了就可能被其他使用，导致和服务端建立错误的连接。</p><p>半连接，不能回消息或者异常终止就会发RST。</p><p>服务端一般会延迟确认（将确认放在数据一起发），而客户端不会。</p><p>但这样会产生很多小包，nagle算法要求任意时刻只能有一个未确认的包在传输。</p><p>正向代理就是客户端主动指定代理服务器，然后向他发请求让他转发，vpn就是。</p><p>反向代理就是请求同一个服务器，但是这个服务器表现的像一个真实的服务器一样，来将请求转发给可能多个服务器，一般网站都是这么搞的。</p><p>透明代理只能设置在网关上。</p><p>小端序是反的（主机），大端序是正的（网络）。</p><p>socket(协议族，传输类型(数据包/字节流/不阻塞（但这个不阻塞不是指收到的这些连接的fd不阻塞，而是这个监听的fd不阻塞，也就是accept不阻塞，但是read,write还是阻塞的)等等)，0(指定协议，但一般默认))</p><p>bind(fd，地址的指针，地址的长度)，地址可以通过getaddrinfo获取，进行转换。</p><p>然后listen(fd，缓冲区大小）</p><p>这个时候完成三次握手。</p><p>accept（fd，接收到的连接的地址的指针和，长度），不在乎握手完后的状态，只是从缓冲区中取一个出来。</p><p>connect(fd，服务器的地址的指针和，长度）</p><p>close只是将fd的引用计数-1，当fork的时候会自动让子进程多获得一个引用。</p><p>shutdown则是直接关闭fd，可以分别关闭读写和一起关。关闭读会清空读缓冲，关闭写会将写缓冲的全发出。</p><p>读写的时候0代表关闭连接，-1代表阻塞或者其他错，得靠我们自己来判断要读多少。</p><p>recv和send就是比read和send多了一个flag参数，这个flag可以指定不阻塞啊，处理紧急数据啊等等</p><p>紧急数据接收到的时候只会将最后一个字符认为是紧急数据，而前面的会跟着正常数据走。</p><p>recvfrom和sendto就是多两个参数，表示对方的地址指针和长度，作为udp的send和recv，但是如果设置为面向连接，那么也可以省略。</p><p>recvmsg和sendmsg则是一套通用的接口，支持分散存储的读写。</p><p>一般通过IO复用来判断现在是不是有带外（紧急）数据，然后调用对应带flag的读写。</p><p><img src="/image/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCleanShot_2025-08-09_at_18.38.20.png" alt=""></p><p>对于fd设置的sockopt中的一部分设置同时也会对accept返回的fd代表的socket生效。</p><p><img src="/image/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCleanShot_2025-08-09_at_18.42.06.png" alt=""></p><p>reuse_addr选项就是能够无视time_wait而去重用。</p><p>低水位标记就是什么时候去通知多路复用。</p><p><img src="/image/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCleanShot_2025-08-09_at_18.53.55.png" alt=""></p><p>可以通过gethostbyname/addr来查/etc/host，也可以通过getserbyname/port来查/etc/service。</p><p>getaddrinfo则是统一了上面两个,getaddrinfo(主机名/ip，服务名/port，提示(针对于返回的结果进行一些设置，比如是否是服务端啊，如果是的话就应该设置为通用的之类的），addrinfo* 结果）</p><p><img src="/image/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCleanShot_2025-08-09_at_19.03.14.png" alt=""></p><p>比如这里的ai_passive就是要求返回的ip是一个通用的，因为对于这些要求实际上也是在ip的类型上体现的，比如说设置为0.0.0.0。</p><p>getaddrinfo会分配堆内存，需要通过freeaddrinfo来销毁。</p><p>管道，pipe(int fd[2])，fd[0]只能读，fd[1]只能写。如果对fd[1]的引用为0，这fd[0]读到eof，即0。如果fd[0]的引用为0，则fd[1]报错。和tcp一样是字节流。</p><p>socketpair也能创建管道，用unix本地协议，并且创建出来的是可读可写的。</p><p>dup，复制一个指向同样文件的fd。取最小能取到的fd。dup2则是大于参数的最小的。复制所得的不保留标志。</p><p><img src="/image/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCleanShot_2025-08-09_at_20.09.17.png" alt=""></p><p>writev和readv就是同时往多个内存读或者写。</p><p>sendfile(输出fd，输入fd，输入offset，字符数）。要求输出是socket，输入是普通文件，专门为网络文件传输服务。（零拷贝，因为是在内核中做的）</p><p>而一般情况下都会多两次拷贝，到用户空间和离开用户空间的拷贝。</p><p>mmap(指定内存开始地址(也可以不指定)，长度，权限(rwx无权限)，类型（共享/私有/与文件无关/等等)，fd，文件偏移量）</p><p>splice，零拷贝(输入fd，输入偏移量，输出fd，输出偏移量，长度，flag(基本无用))，不能自己拷贝到自己，需要靠一个管道中转。</p><p>tee，零拷贝，管道到管道（输入fd，输出fd，长度，flag），不消耗输入fd中的数据。</p><p>fnctl，复制fd，获取/设置 fd标志/状态标志/信号/管道大小</p><p>一般服务器都会有日志，以守护进程运行，以非root用户运行，有配置文件，记录pid。</p><p>日志：linux的日志实际上不是直接输出到程序，而是跟Linux上运行的一个守护进程rsyslogd通信，rsyslogd才输出到日志。</p><p>通过syslog(优先级，内容，…）来通信。可以通过open_log来设置一些默认东西，并通过setlogmask来设置掩码。</p><p>一般进程会有两个uid，一个uid，即运行者的uid，一个是euid，有效uid，代表这个程序的有euid的权限。一般用来获取root权限，这样就能让普通用户也能运行一些部分需要root权限的程序，并且这些权限也保证不会拿这些权限干坏事，而为了获取root权限，就必须要给这个可执行文件设置suid，也就是chmod +s，而这是需要sudo权限的，因此权限上也是安全的。同样也有egid。</p><p>而进程组pgid就是同一管理进程嘛。以上这5个东西都可以在程序中get和set。</p><p>会话比进程组更高一个级别。一个会话可以有多个进程组，一般跟终端绑定。当终端有什么操作的时候都会反应到这个会话上的所有进程上，比如发个信号之类的。因此为了保证不跟终端绑定，就可以用setsid来创建新的会话。这个调用者就会创建一个新的会话，会话里有唯一一个进程组，首领是它。会话sid实际上就是首领的pid。</p><p>set/getrlimit可以设置程序的各种资源限制，其实和ulimit差不多，但是如果没有root权限，那么就不能增加，只能减少。一般有两个值，软限制和硬限制，硬限制是软限制的上线，超过软限制就会发送信号。</p><p>getcwd获取当前目录，chdir设置工作目录。chroot设置进程根目录（进程能看到的最根的目录）但是仍然能访问之前打开的fd，这个命令需要特权。</p><p>一般要成为守护进程，需要进行成为子进程（脱离终端）(fork)，创建新会话，切换工作目录到根，关闭三大标准流重定向到/dev/null来进一步脱离终端。之所以要重定向是因为如果在关闭的状态下进行标准三大行为就会报错。</p><p>linux也提供daemon函数来做到上述流程，daemon(是否切换工作目录到根，是否重定向标准流）。</p><p><img src="/image/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCleanShot_2025-08-10_at_02.05.33.png" alt=""></p><p>reactor就是IO复用，proactor就是异步I/O。可以用IO复用模拟proactor。</p><p>reactor读写在工作线程，因为是半同步阻塞的。（读写都是工作线程在干）</p><p>proactor则不在，在异步接收的部分，因为是异步的，所以工作线程只需要处理逻辑就可以了。（读写都是异步I/O在干，也就是内核在干）</p><p>模拟的就是将读写放在异步的部分，但是是用IO复用来做。也就是我实现的这种，虽然我的工作线程其实也放在了同一个线程中。（读写都是epoll在干，主线程在干）</p><p>半同步半异步（不是指异步I/O，而是通过事件驱动，而非立即进行），半异步指的是把收到的任务全部扔进队列里，工作线程池自己从里面一个一个取出来处理（同步的）。</p><p>半同步半反应堆，就是将异步I/O替换为I/O复用。</p><p>更高效的话就是主线程只管accept，accept完就将fd扔队列里，工作线程自己抢，然后将fd注册到自己的epoll里，后续的这个fd都由这个工作线程来处理。</p><p>而半同步半反应堆则是每一个客户的每一个请求都是由主线程来负责，工作线程每次只处理一个来回的请求。而高效则是所有来回都由工作线程来负责。</p><p>领导者追随者就是，领导者监听，然后当听到一个请求后就去处理（也可能指定其中一个fellow去处理），并将监听的活交给其中一个fellow。但一个线程处理完成回来并发现现在没有领导者，就成为领导者。</p><p>池就是将动态的资源先全部静态的申请。</p><p>能不拷贝就不拷贝，去使用零拷贝的函数，共享内存也由于管道和消息队列。</p><p>减少锁和切换。</p><p>select注册起来是直接传入一个类似于bit_seqence的东西，设置为1代表监听，返回发生的个数，但不知道是哪几个，会将bit_sequence对应的位置设置1，你需要自己查，并且分别查，读，写，异常是三个队列。</p><p>poll则是将select的事件进行了统一。</p><p>但都是只有LT模式，并且都是轮询，比较慢，而非像epoll是计时器回调。</p><p>除了关闭连接read和write都会返回0，出错回返回错，能读能写返回个数，还有就是connect的时候超时会返回，accept时候会返回。</p><p>LT水平触发，只要能触发，就会一直触发。ET，只触发一次，如果这次不处理，以后就无了。因为要一次处理完，所以要while。并且ET的情况下一定要非阻塞，否则以后就会一直阻塞。</p><p>ET情况下，处理进来的数据的时候也有可能又有新的数据到来，因为网络并不是一个一读一写的过程，比如http2就不会，但是http1.1还是会一读一写的。有的时候我们要保证一个socket都是由一个工作线程来处理，这个时候我们就可以设置EPOLLONESHOT让它暂时屏蔽后面的，直到我再次调用epoll_ctl设置epolloneshot，才会又接收一个请求。</p><p>但活动较多的时候，则效率不一定epoll高。epoll适用于连接多但活动不多。</p><p>带外数据一般也会算做一个error信号，可以与普通的进行区分。</p><p>connect一般是不能非阻塞的，但是，当使用非阻塞的时候，并且没有立刻建立连接，就会返回一个专属EINPROGRESS错误，后续监听它如果发现可写就说明连接建立了，就实现了非阻塞。但这不一定能成功，得看实际机器实现情况。</p><p>信号，kill(pid，信号）pid为0时发送给本进程组的其他进程，-1发给所有除init之外的进程，只要有权限，-pid发送给组id为pid的进程组。在c++中一般通过std::signal(信号，处理函数）来注册。处理函数也可以是两个预定义的宏SIG_DFL(默认)和SIG_IGN(忽略)。</p><p>一般为了避免让信号迅速处理完以不屏蔽后续的信号并且避免一些竞争状态（因为一般信号处理都是在一个新的线程上处理的），一般信号处理只是将接收到的信号放到管道中，在主循环中监听并一起处理。</p><p>sigaction是定义在posix中的，并且功能更加全面。同时能屏蔽信号，设定中断后的重启设置等等，并且是原子的，处理函数也可以更复杂。signal这个东西本身就是当收到信号的时候立刻从收到信号的这个线程中断叉出去，然后同步处理，然后返回。</p><p>信号是整个进程都会接收到的，也就是每一个线程都会接收到。并通过pthread_sigmask来设置每一个线程的掩码来控制每个线程的信号处理的情况。并且，所有线程都共用同一个信号处理函数，这就很糟糕了。一般来说通过在建立子线程之前开启所有掩码让所有的线程都不收到任何信号，然后再在一个专门的线程中集中处理线程。sigwait返回收到的信号。也就是sigwait和中断式的信号处理二选一。</p><p>但linux同样也提供了向特定线程发送信号的函数pthread_kill。</p><p>如果没有设置信号掩码，那么信号处理函数也会被新来的信号中断，但如果不用sigaction，那么默认一般都是全掩的，如果掩码了，那么新的信号过来就会暂时被阻塞，挂起到挂起信号集，直到掩码结束，进程就会接收到这个被阻塞的信号。而很显然，掩码维护了一坨子信号，因此对于这个信号集也有专门的信号集函数来处理，也就用来设置掩码。</p><p>可以用strace来追踪程序中的信号处理过程。</p><p>SIGHUP：一般表示要求重新读配置文件，根据变化更新服务</p><p>SIGPIPE：当往关闭的管道里读写的时候就会发生并使程序终止，一般要IGN，或者也可以使用IO复用的函数来处理关闭管道的一些事情</p><p>SIGURG：除了监听IO复用的信号来处理带外数据，带外数据来的时候也会触发SIGURG，我们也就可以在这里设置特定的读带外数据的标志进行读了。需要用sockatmark来定位带外数据。</p><p>操作超时后会返回特定错误。</p><p>一般处理定时任务都是隔一个固定时间调用一下一个处理函数，看看有没有定时任务到期了。而这定时一般用alarm来进行，到时间后就会发出特定的信号，调用处理函数并再次设定下一个alarm。而定时任务要么用有序链表来实现，要么堆。</p><p>然后由于不止有IO事件，还有其他事件，因此epoll不应该设置为无限等待。</p><p>epollwait的这个超时实际上也可以作为类似的固定时间调用，但由于它是一有信号就返回，因此需要动态的调整超时时间，当有一次epollwait返回时0的时候，那就是超时了，也就是到时间了。</p><p>时间轮算法就是对于定时进行散列，比如设置一轮时1s，总共6个分区，那么就是每秒的对应1/6会到对应的分区里，但是这个分区本身仍然是一个有序链表，时间轮每一轮就走到下一个分区就好了，本质上就是hash加有序链表。</p><p>要么就是用堆。</p><p>fork的时候大部分都很原本的相同，但又一些仍然会不同。并且数据并没有直接复制，而是继续和父进程共用一块，只有在修改的时候才会真正的进行复制。</p><p>当子进程运行完而父进程还没运行完的时候（为了让父进程能跟踪子进程状态，子进程在运行完后还会保留），或者父进程先死了，子进程的父进程就变成init了，这种状态就是僵尸进程，没用但是占据着内核资源。</p><p>通过wait来等待任意一子进程退出，waitpid就是指定。一般都是在子进程结束的那一瞬间父进程去wait一下最好，而子进程结束的时候会给父进程发一个信号SIGCHLD，这样就可以了。</p><p>而父子进程通信一般用管道，一方关一个fd，就单方向了。</p><p>信号量</p><p>semget(标识符，信号量集大小，flag（低9位控制权限3*wrx)）用来获取或创建信号量集。</p><p>通过将标识符设置为IPC_PRIVATE可以不管三七二十一创建新的sem。有着不同的semid，而其他如果相同的标识符一定会创建出来相同的semid。</p><p>这里的标识符和semget返回的标识符不是同一个标识符，后续操作用的标识符都是semget返回的标识符。但semget注册用的标识符是特用的，虽然都是一一对应的。</p><p>semop(标识符，操作数组，数组元素个数）</p><p>操作数组：信号量集中的编号，增减大小(如果是0就是等待它为0)，flag（nowait不阻塞或者undo就是会记录）</p><p>semctl(标识符，信号量集中的编号，命令，参数）</p><p><img src="/image/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCleanShot_2025-08-10_at_18.43.57.png" alt=""></p><p>semget出来是没有初始化的，需要用semctl的setval设置最大值。</p><p>shmget(标识符，共享内存大小，flag（低9位控制权限3*wrx)）用来获取或创建共享内存。</p><p>SHMHUGETLB使用大页面分配共享内存，SHMNORESERVE不使用swap。会memset0。</p><p>使用shmat/dt来映射共享内存，shmat(标识符，地址，flag）返回地址，可以选择不指定，shmdt(地址)。</p><p>shmctl进行控制。</p><p>也可以使用POSIX的shm_open和shm_unlink和mmap和ummap来操作，但是要家-lrt。</p><p>还有一种是消息队列。相较于管道，它能不fifo，而是能够选择其中某种类型的第一个或者之类的。调用和其他类似。</p><p>上面三种信号量，共享内存和消息队列可以在系统中用ipc命令查看。</p><p>虽然子进程会仍然保留父进程的fd，但是不能直接使用，需要dup一下，需要获得一个不同的指向同一个文件的fd。而为了让两个不相关的进程持有同一个文件，也可以直接通过ipc进行传输fd，然后dup或者之类的。</p><p>可重入函数：线程安全的函数</p><p>池的分配一般有两种，一种是统一的由一个最高层的去分配，另一种就是将任务加进队列，然后自己去抢。如果一个请求是有上下文的，那么一般由同一个对象去处理。</p><p>系统有自己的最大fd数，有的时候需要通过ulimit或者改配置文件去调大。</p><p>sysctl也可以查看一些内核配置，比如/proc/sys/fs/epoll/max user watches限制了用户最大epoll监听个数，因为监听会耗内存。</p><p><img src="/image/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCleanShot_2025-08-10_at_21.46.09.png" alt=""></p><p>为了调试子进程，可以在程序启动后attach到子进程上</p><p>或者在调试时开启follow-fork-mode，通过在进入gdb后set follow-fork-mode。</p><p>调试线程会方便一点，通过info threads获取所有的threads，thread ID来切换。</p><p>而有的时候只希望其中一个线程继续的时候其他全暂停的时候可以使用set scheduler-locking off(无效果)/step(只在单步执行的时候这个程序单独运行)/on(这个线程单独运行)</p><p>而压测一般就是epoll发起很多个conn。</p><p>tcpdump抓网络包，lsof看文件描述符使用情况，有的时候要sudo才能看全部，nc用来发请求，strace看信号情况，netstat看网络信息，vmstat看资源使用情况，ifstat网络流量检测，mpstat多处理器情况监测。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>vim</title>
    <link href="/vim/"/>
    <url>/vim/</url>
    
    <content type="html"><![CDATA[<p>hjkl:←↓↑→</p><p>w:向后移动到单词头，将标点符号视为分割，不包括第一个字符</p><p>e:像后移动到单词尾，不将标点符号视为分割，包括最后一个字符</p><p>b:向前移动到单词头，将标点符号视为分割</p><p>B:向前移动到单词头，不将标点符号视为分割</p><p>$:向后移动到行尾，包括最后一个字符</p><p>x:删除当前所在字符</p><p>X:删除当前所在前一个字符</p><p>i:当前位置下开始insert</p><p>a:当前后面一个位置开始insert</p><p>A:从当前行行尾开始insert</p><p>dw:删除当前字符开始的一个word</p><p>d$:删除从当前字符到行尾</p><p>d?:删除从当前字符到?返回的那个字符这一串</p><p>d空:删除整行</p><p>通过在前面加数字可以repeat这么多次</p><p>0:向前移动到行首</p><p>dd:删除整行</p><p>u:undo，可以undo U</p><p>U:对于刚刚操作的这一行，撤销从到他对他开始操作的所有步骤</p><p>Crtl+R:redo</p><p>前面被d掉的东西会暂时存储在p中，可以通过p取出</p><p>r？：将当前这个字符替换为?</p><p>ce:将当前字符到这个word结尾全部删除，并进入insert mode</p><p>c实际就是d然后进入insert mode</p><p>gg:移动到开头</p><p>G:移动到结尾</p><p>行号G:移动到这一行</p><p>/字符串：搜索这个字符串</p><p>n向前，N向相反方向</p><p>?与/正好相反</p><p>Crtl+O:向后返回到上一个位置，这里的位置是指所有的进行更改的地方和跳转的地方</p><p>Crtl+I正好相反</p><p>%：跳转到对应的另一半括号，若是不在括号上，这跳转到它后面的第一个括号对应的括号处</p><p>((%),(#,#)s/old/new(/g©):将这一行第一个old替换为new，/g使它替换所有，c使其对于每一个进行询问，%表示全file，#,#表示几行到几行，#是数字</p><p>：！命令：暂时返回到shell执行命令，再返回</p><p>:w Filename:保存(另存为到Filename)</p><p>v:选择，以开始v的地方作为起点，cursor的位置为终点</p><p>在选择后保存会只保存选择的这一段文本</p><p>:r filename:将file中的内容插入到光标后</p><p>o:在当前行下方插入一行并开始insert</p><p>O:在当前行上方插入一行并开始insert</p><p>e与a一般一起用</p><p>R:从cursor开始替换，直到ESC</p><p>v与w,b,e都差不多都是选择</p><p>y可以copy当前选择的，因此可以yw等等</p><p>通过p可以paste</p><p>d包括了y</p><p>可以通过:set 命令来调整vim的设置</p><p>如ic是不管大小写</p><p>hls是高亮搜索</p><p>is是实时搜索</p><p>通过在前面加no可以反向设置</p><p>:help可以获取帮助文档，会在上方打开，通过Ctrl+W可以切换窗口</p><p>:help 文档名 可以打开对应的帮助文档</p><p>通过修改.vimrc可以调整vim的设置</p><p>在命令中可以用tab补全，或者用Crtl+D来显示所有待选项</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>problems</title>
    <link href="/problems/"/>
    <url>/problems/</url>
    
    <content type="html"><![CDATA[<p>C2039和C3861这两个错误同时出现在标准库上</p><p>因为自己的工程里有一个math.h文件</p><p>重载解引用运算符识别不出来？</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>操作系统</title>
    <link href="/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    <url>/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<p><a href="https://lhish.github.io/hide/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BC%95%E8%AE%BA">操作系统引论</a></p><p><a href="https://lhish.github.io/hide/%E8%BF%9B%E7%A8%8B%E7%9A%84%E6%8F%8F%E8%BF%B0%E4%B8%8E%E6%8E%A7%E5%88%B6">进程的描述与控制</a></p><p><a href="https://lhish.github.io/hide/%E5%A4%84%E7%90%86%E6%9C%BA%E8%B0%83%E5%BA%A6%E4%B8%8E%E6%AD%BB%E9%94%81">处理机调度与死锁</a></p><p><a href="https://lhish.github.io/hide/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%8E%A5%E5%8F%A3">操作系统接口</a></p><p><a href="https://lhish.github.io/hide/%E5%AD%98%E5%82%A8%E5%99%A8%E7%AE%A1%E7%90%86">存储器管理</a></p><p><a href="https://lhish.github.io/hide/%E8%99%9A%E6%8B%9F%E5%AD%98%E5%82%A8%E5%99%A8">虚拟存储器</a></p><p><a href="https://lhish.github.io/hide/%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E7%B3%BB%E7%BB%9F">输入输出系统</a></p><p><a href="https://lhish.github.io/hide/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86">文件管理</a></p><p><a href="https://lhish.github.io/hide/%E7%A3%81%E7%9B%98%E5%AD%98%E5%82%A8%E5%99%A8%E7%9A%84%E7%AE%A1%E7%90%86">磁盘存储器的管理</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>编译</title>
    <link href="/%E7%BC%96%E8%AF%91/"/>
    <url>/%E7%BC%96%E8%AF%91/</url>
    
    <content type="html"><![CDATA[<p>一个编译程序的重要性体现在它使得多数计算机用户不必考虑与机器有关的烦琐细<br>节，使程序员和程序设计专家独立于机器</p><p>词法分析程序的生成系统 LEX ，语法分析程序的生成系统 YACC</p><p>词法分析、语法分析、语义分析、中间代码生成、代码优化和目标代码</p><p>词法分析：这个阶段的任务是从左到右一个字符一个字符地读入源程序，对构成源程序的字符目标程序 流进行扫描和分解，从而识别出一个个单词。</p><p>语法分析：在词法分析的基础上将单词序列分解成各类语法短语(语法单位)</p><p>语义分析：审查源程序有无语义错误，为代码生成阶段收集类型信息</p><p>中间代码生成：将源程序变成一种内部表示形式（一是容易生成；二是容易将它翻译成目标代码）</p><p>代码优化：使生成的目标代码更为高效</p><p>目标代码生成：把中间代码变换成特定机器上的绝对指令代码或可重定位的指令代码或汇编指令代码</p><p>一般还会有表格管理程序和出错处理程序辅助。</p><p><img src="/image/%E7%BC%96%E8%AF%91CleanShot_2025-06-01_at_21.37.10.png" alt=""></p><p>上下文：当前符号前后的符号</p><p><img src="/image/%E7%BC%96%E8%AF%91CleanShot_2025-06-01_at_21.44.33.png" alt=""></p><p><img src="/image/%E7%BC%96%E8%AF%91CleanShot_2025-06-01_at_21.46.04.png" alt=""></p><p><img src="/image/%E7%BC%96%E8%AF%91CleanShot_2025-06-01_at_21.50.13.png" alt=""></p><p><img src="/image/%E7%BC%96%E8%AF%91CleanShot_2025-06-01_at_21.51.39.png" alt=""></p><p>都是最左推倒，但是树不同，则是二义的。</p><p><img src="/image/%E7%BC%96%E8%AF%91CleanShot_2025-06-01_at_21.52.30.png" alt=""></p><p><img src="/image/%E7%BC%96%E8%AF%91CleanShot_2025-06-01_at_21.52.40.png" alt=""></p><p><img src="/image/%E7%BC%96%E8%AF%91CleanShot_2025-06-01_at_21.53.26.png" alt=""></p><p><img src="/image/%E7%BC%96%E8%AF%91CleanShot_2025-06-01_at_21.54.15.png" alt=""></p><p><img src="/image/%E7%BC%96%E8%AF%91CleanShot_2025-06-01_at_22.00.53.png" alt=""></p><p>短语就是在这个上下文中能够规约的一个字符串</p><p><img src="/image/%E7%BC%96%E8%AF%91CleanShot_2025-06-02_at_00.41.01.png" alt=""></p><p><img src="/image/%E7%BC%96%E8%AF%91CleanShot_2025-06-02_at_00.42.36.png" alt=""></p><p><img src="/image/%E7%BC%96%E8%AF%91CleanShot_2025-06-02_at_00.47.19.png" alt=""></p><p>即在中间路上</p><p><img src="/image/%E7%BC%96%E8%AF%91CleanShot_2025-06-02_at_00.50.10.png" alt=""></p><p>有没有空这个符号不影响文法的属性</p><p><img src="/image/%E7%BC%96%E8%AF%91CleanShot_2025-06-02_at_00.52.35.png" alt=""></p><p><img src="/image/%E7%BC%96%E8%AF%91CleanShot_2025-06-02_at_01.23.32.png" alt=""></p><p><img src="/image/%E7%BC%96%E8%AF%91CleanShot_2025-06-02_at_02.07.44.png" alt=""></p><p><img src="/image/%E7%BC%96%E8%AF%91CleanShot_2025-06-02_at_02.08.59.png" alt=""></p><p>非终结符后跟的所有可能终结符或者无(#)</p><p><img src="/image/%E7%BC%96%E8%AF%91CleanShot_2025-06-02_at_02.12.23.png" alt=""></p><p><img src="/image/%E7%BC%96%E8%AF%91CleanShot_2025-06-02_at_02.14.56.png" alt=""></p><p>如果不会推出空，那么选择它是因为输入了最终推导出的首终结符</p><p>如果会推出空，那么还有可能就是输入了跟在它后面的首终结符</p><p><img src="/image/%E7%BC%96%E8%AF%91CleanShot_2025-06-02_at_02.17.34.png" alt=""></p><p><img src="/image/%E7%BC%96%E8%AF%91CleanShot_2025-06-02_at_18.06.03.png" alt=""></p><p>代换后再提取</p><p><img src="/image/%E7%BC%96%E8%AF%91CleanShot_2025-06-02_at_18.07.41.png" alt=""></p><p><img src="/image/%E7%BC%96%E8%AF%91CleanShot_2025-06-02_at_18.08.49.png" alt=""></p><p><img src="/image/%E7%BC%96%E8%AF%91CleanShot_2025-06-02_at_18.14.50.png" alt=""></p><p><img src="/image/%E7%BC%96%E8%AF%91CleanShot_2025-06-02_at_18.16.29.png" alt=""></p><p><img src="/image/%E7%BC%96%E8%AF%91CleanShot_2025-06-02_at_18.20.32.png" alt=""></p><p><img src="/image/%E7%BC%96%E8%AF%91CleanShot_2025-06-02_at_18.24.24.png" alt=""></p><p><img src="/image/%E7%BC%96%E8%AF%91CleanShot_2025-06-02_at_18.27.00.png" alt=""></p><p><img src="/image/%E7%BC%96%E8%AF%91CleanShot_2025-06-02_at_18.32.32.png" alt=""></p><p><img src="/image/%E7%BC%96%E8%AF%91CleanShot_2025-06-02_at_18.33.38.png" alt=""></p><p><img src="/image/%E7%BC%96%E8%AF%91CleanShot_2025-06-02_at_18.34.53.png" alt=""></p><p>找到直接推导出a的，然后找出所有间接推导出a的</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>LaTeX数学公式</title>
    <link href="/LaTeX%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/"/>
    <url>/LaTeX%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>x</mi><mrow><mn>2</mn><mo>∗</mo><mn>1</mn></mrow><mrow><mn>21</mn><mo>⋅</mo><msqrt><mrow><mi>θ</mi><mi>α</mi></mrow></msqrt></mrow></msubsup><msubsup><mo>∫</mo><mn>0</mn><mi>x</mi></msubsup><mi>b</mi><mrow><mi mathvariant="normal">d</mi><mo stretchy="false">(</mo><mtext>正</mtext><mo stretchy="false">)</mo></mrow><mi>b</mi><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mn>100</mn></munderover><mover><mover><mrow><mi>x</mi><mo>⋯</mo><mi>x</mi></mrow><mo stretchy="true">⏞</mo></mover><mrow><mi>i</mi><mtext>个</mtext></mrow></mover><munder><mo>∏</mo><mi>j</mi></munder><msubsup><mi>j</mi><mn>1</mn><mn>2</mn></msubsup><mi>l</mi><mi>i</mi><msubsup><mi>m</mi><mrow><mi>x</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow><mrow><mo stretchy="false">(</mo><mi>k</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo></mrow></msubsup><mover accent="true"><mrow><mn>0.</mn><msup><mn>1</mn><mi>x</mi></msup><mi mathvariant="normal">/</mi><mover accent="true"><mi>a</mi><mo>⃗</mo></mover></mrow><mo stretchy="true">‾</mo></mover><mover accent="true"><mrow><mi>A</mi><mi>B</mi></mrow><mo stretchy="true">←</mo></mover><mfrac><msup><mover accent="true"><mrow><mi>β</mi><mi>d</mi></mrow><mo stretchy="true">→</mo></mover><mrow><mo fence="true">∣</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo fence="true">(</mo><mtable rowspacing="0.16em" columnalign="center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋱</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>7</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mstyle></mtd></mtr></mtable><mo fence="true">∣</mo></mrow></msup><mrow><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><mo>+</mo><mover accent="true"><mi>x</mi><mo>^</mo></mover><mo>−</mo><mover accent="true"><mi>x</mi><mo>~</mo></mover><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mn>1</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">x_{2*1}^{21\cdot\sqrt{\theta\alpha}}\int_0^xb\mathrm{d(正)}b\sum_{i=1}^{100}\overbrace{x\cdots x}^{i个}\prod_jj^2_1lim^{(k=1,\ldots,n)}_{x \to\infty}\overline{0.1^x/\vec{a}}\overleftarrow{AB}\frac{\overrightarrow{\beta d}^{\begin{vmatrix}\begin{bmatrix}\begin{pmatrix}1&amp;\cdots&amp;5\\ \vdots&amp;\ddots&amp;\vdots \\5&amp;\cdots&amp;7 \\\end{pmatrix}\end{bmatrix}\end{vmatrix}}}{\bar{x}+\hat{x}-\tilde{x}\bmod1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.4585em;vertical-align:-1.4138em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0728em;"><span style="top:-2.4337em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mbin mtight">∗</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1163em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">21</span><span class="mbin mtight">⋅</span><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9378em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span><span style="top:-2.8978em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1022em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2663em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4143em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9119em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mord"><span class="mord mathrm">d</span><span class="mopen">(</span><span class="mord mathrm cjk_fallback">正</span><span class="mclose">)</span></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">100</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mover"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.7569em;"><span style="top:-3.0786em;"><span class="pstrut" style="height:3.0786em;"></span><span class="mord mover"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0786em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span></span></span><span class="svg-align" style="top:-3.5306em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewBox="0 0 400000 548" preserveAspectRatio="xMinYMin slice"><path d="M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7 5-6 9-10 13-.7 1-7.3 1-20 1H6z"/></svg></span><span class="brace-center" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewBox="0 0 400000 548" preserveAspectRatio="xMidYMin slice"><path d="M200428 334c-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z"/></svg></span><span class="brace-right" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewBox="0 0 400000 548" preserveAspectRatio="xMaxYMin slice"><path d="M400000 542l-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5s-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1c124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z"/></svg></span></span></span></span></span></span></span></span><span style="top:-4.3571em;"><span class="pstrut" style="height:3.0786em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord cjk_fallback mtight">个</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0572em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mrel mtight">→</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="minner mtight">…</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">n</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5904em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span><span class="mord">/</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">a</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.471em" height="0.714em" style="width:0.471em" viewBox="0 0 471 714" preserveAspectRatio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"/></svg></span></span></span></span></span></span></span></span></span><span style="top:-3.87em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.25em;"><span></span></span></span></span></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.2053em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span><span class="svg-align" style="top:-3.6833em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.522em" viewBox="0 0 400000 522" preserveAspectRatio="xMinYMin slice"><path d="M400000 241H110l3-3c68.7-52.7 113.7-120 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247c-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202 l-3-3h399890zM100 241v40h399900v-40z"/></svg></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.0447em;"><span style="top:-5.6817em;"><span class="pstrut" style="height:6.3677em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3.35em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span><span style="top:-6.5977em;"><span class="pstrut" style="height:6.3677em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-7.0447em;"><span class="pstrut" style="height:6.3677em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2164em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mord mathnormal">d</span></span></span><span class="svg-align" style="top:-3.6944em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.522em" viewBox="0 0 400000 522" preserveAspectRatio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:4.3677em;"><span style="top:-6.3677em;margin-right:0.05em;"><span class="pstrut" style="height:4.305em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="minner mtight"><span class="mopen sizing reset-size3 size6 mtight"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.275em;"><span style="top:-4.275em;"><span class="pstrut" style="height:6.2em;"></span><span class="mtight" style="width:0.333em;height:4.200em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.333em" height="4.200em" viewBox="0 0 333 4200"><path d="M145 15 v585 v3000 v585 c2.667,10,9.667,15,21,15c10,0,16.667,-5,20,-15 v-585 v-3000 v-585 c-2.667,-10,-9.667,-15,-21,-15c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v3000 v585 h43z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.925em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2929em;"><span style="top:-5.2929em;"><span class="pstrut" style="height:5.4em;"></span><span class="mord sizing reset-size3 size6"><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35em;"><span style="top:-4.35em;"><span class="pstrut" style="height:6.2em;"></span><span style="width:0.667em;height:4.200em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.667em" height="4.200em" viewBox="0 0 667 4200"><path d="M403 1759 V84 H666 V0 H319 V1759 v600 v1759 h347 v-84H403z M403 1759 V0 H319 V1759 v600 v1759 h84z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.85em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.38em;"><span style="top:-4.38em;"><span class="pstrut" style="height:4.38em;"></span><span class="mord"><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35em;"><span style="top:-4.35em;"><span class="pstrut" style="height:6.2em;"></span><span style="width:0.875em;height:4.200em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.875em" height="4.200em" viewBox="0 0 875 4200"><path d="M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1c-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,-36,557 l0,684c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9c0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189l0,-692c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.85em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.38em;"><span style="top:-5.2275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.3675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-2.1675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.88em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.38em;"><span style="top:-5.04em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-3.18em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋱</span></span></span><span style="top:-1.98em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.88em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.38em;"><span style="top:-5.2275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-3.3675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-2.1675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.88em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35em;"><span style="top:-4.35em;"><span class="pstrut" style="height:6.2em;"></span><span style="width:0.875em;height:4.200em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.875em" height="4.200em" viewBox="0 0 875 4200"><path d="M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5c11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,609c-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664c-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11c0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17c242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558l0,-744c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.85em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.88em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35em;"><span style="top:-4.35em;"><span class="pstrut" style="height:6.2em;"></span><span style="width:0.667em;height:4.200em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.667em" height="4.200em" viewBox="0 0 667 4200"><path d="M347 1759 V0 H0 V84 H263 V1759 v600 v1759 H0 v84 H347zM347 1759 V0 H263 V1759 v600 v1759 h84z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.85em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7929em;"><span></span></span></span></span></span></span></span><span class="mclose sizing reset-size3 size6 mtight"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.275em;"><span style="top:-4.275em;"><span class="pstrut" style="height:6.2em;"></span><span class="mtight" style="width:0.333em;height:4.200em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.333em" height="4.200em" viewBox="0 0 333 4200"><path d="M145 15 v585 v3000 v585 c2.667,10,9.667,15,21,15c10,0,16.667,-5,20,-15 v-585 v-3000 v-585 c-2.667,-10,-9.667,-15,-21,-15c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v3000 v585 h43z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.925em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs latex">x<span class="hljs-built_in">_</span>&#123;2*1&#125;<span class="hljs-built_in">^</span>&#123;//<span class="hljs-built_in">_</span>下标，&#123;&#125;当内容为不止一个字符时，<span class="hljs-built_in">^</span>上标<br>21<span class="hljs-keyword">\cdot</span>//点×<br><span class="hljs-keyword">\sqrt</span>&#123;<span class="hljs-keyword">\theta</span><span class="hljs-keyword">\alpha</span>&#125;//根号 <span class="hljs-keyword">\罗</span>马读音:罗马字<br>&#125;<br><br><span class="hljs-keyword">\int</span><span class="hljs-built_in">_</span>0<span class="hljs-built_in">^</span>xb<span class="hljs-keyword">\mathrm</span>&#123;d(正)&#125;b//int积分,mathrm正体<br><br><span class="hljs-keyword">\sum</span><span class="hljs-built_in">_</span>&#123;i=1&#125;<span class="hljs-built_in">^</span>&#123;100&#125; <span class="hljs-keyword">\overbrace</span>&#123;x<span class="hljs-keyword">\cdots</span> x&#125;<span class="hljs-built_in">^</span>&#123;i个&#125;//sum和 overbrace上括号 cdots横省略号<br><br><span class="hljs-keyword">\prod</span><span class="hljs-built_in">_</span>j j<span class="hljs-built_in">^</span>2<span class="hljs-built_in">_</span>1//prod×<br><br>lim<span class="hljs-built_in">^</span>&#123;<br>(k=1,<span class="hljs-keyword">\ldots</span>,n)//ldots底省略号<br>&#125;<span class="hljs-built_in">_</span>&#123;<br>x <span class="hljs-keyword">\to</span> <span class="hljs-keyword">\infty</span>//to箭头，infty无限<br>&#125;<br><span class="hljs-keyword">\overline</span>&#123;//上划线<br>0.1<span class="hljs-built_in">^</span>x/<span class="hljs-keyword">\vec</span>&#123;a&#125;//vec向量<br>&#125;<br><span class="hljs-keyword">\overleftarrow</span>&#123;AB&#125;//overleftarrow上左箭头<br><br><span class="hljs-keyword">\frac</span>//frac分数<br>&#123;//上部<br><span class="hljs-keyword">\overrightarrow</span>&#123;//overrightarror上右箭头<br><span class="hljs-keyword">\beta</span> d<br>&#125;<span class="hljs-built_in">^</span><br>&#123;<span class="hljs-keyword">\begin</span>&#123;vmatrix&#125;//||<br><span class="hljs-keyword">\begin</span>&#123;bmatrix&#125;//[]<br><span class="hljs-keyword">\begin</span>&#123;pmatrix&#125;//()<br>1<span class="hljs-built_in">&amp;</span><span class="hljs-keyword">\cdots</span><span class="hljs-built_in">&amp;</span>5<span class="hljs-keyword">\\</span><br><span class="hljs-keyword">\vdots</span><span class="hljs-built_in">&amp;</span><span class="hljs-keyword">\ddots</span><span class="hljs-built_in">&amp;</span><span class="hljs-keyword">\vdots</span><span class="hljs-keyword">\\</span>//vdots列省略号，ddots斜省略号<br>5<span class="hljs-built_in">&amp;</span><span class="hljs-keyword">\cdots</span><span class="hljs-built_in">&amp;</span>7 <span class="hljs-keyword">\\</span><br><span class="hljs-keyword">\end</span>&#123;pmatrix&#125;<br><span class="hljs-keyword">\end</span>&#123;bmatrix&#125;<br><span class="hljs-keyword">\end</span>&#123;vmatrix&#125;&#125;<br>&#125;<br>&#123;//下部<br><span class="hljs-keyword">\bar</span>&#123;x&#125;+<span class="hljs-keyword">\hat</span>&#123;x&#125;-<span class="hljs-keyword">\tilde</span>&#123;x&#125;<span class="hljs-keyword">\bmod</span>1<br>&#125;<br></code></pre></td></tr></table></figure><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo>≤</mo><mo>≥</mo><mtext> </mtext><mo>≡</mo></mrow><annotation encoding="application/x-tex">\le \ge\  \equiv</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≤≥</span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:0.4637em;"></span><span class="mrel">≡</span></span></span></span></span></p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\le</span> <span class="hljs-keyword">\ge</span><span class="hljs-keyword">\ </span> <span class="hljs-keyword">\equiv</span><br>(<span class="hljs-keyword">\ </span>)是空格<br></code></pre></td></tr></table></figure><p><a href="https://api.onedrive.com/v1.0/shares/s!At1YQCR5yNu4hkONFDhPfpnVY7lA/root/content">https://api.onedrive.com/v1.0/shares/s!At1YQCR5yNu4hkONFDhPfpnVY7lA/root/content</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>LaTex</title>
    <link href="/LaTex/"/>
    <url>/LaTex/</url>
    
    <content type="html"><![CDATA[<table><thead><tr><th>\</th><th>换行</th></tr></thead><tbody><tr><td>\newline</td><td>换行</td></tr><tr><td>两个Enter</td><td>换行</td></tr><tr><td>一个Enter</td><td>空格</td></tr><tr><td>多个空格</td><td>一个空格</td></tr><tr><td>\usepackage[option]{packname}</td><td>导入外部包</td></tr><tr><td>\newpage或\clearpage</td><td>换页</td></tr><tr><td>\documentclass{type}</td><td>指定整个文件的风格，用在开头，artical,report,book等等</td></tr><tr><td>\chapter[shorttitle]{title}</td><td>title为实际显示的，short title为目录和页眉页脚的，若[]前带*则无序号且无目录</td></tr><tr><td>\section</td><td></td></tr><tr><td>\subsection</td><td></td></tr><tr><td>\subsubsection</td><td></td></tr><tr><td>\paragraph</td><td></td></tr><tr><td>\subparagraph</td><td></td></tr></tbody></table><p><img src="/image/LaTexUntitled.png" alt=""></p><table><thead><tr><th>\tableofcontents</th><th>目录</th></tr></thead><tbody><tr><td>\addcontentsline{toc}{level}{title}</td><td>为用了*的标题生成目录，用于标题后</td></tr><tr><td>\title{}，\author{}，\date{}</td><td>设定基本信息</td></tr><tr><td>\and</td><td>用于在\author里连接人名</td></tr><tr><td>\maketitle</td><td>这才是真正生成一个标题页，只能用一次</td></tr><tr><td>\begin{verbatim}\end{verbatim</td><td>用于代码，但是不对tab起作用</td></tr></tbody></table>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>modern c++</title>
    <link href="/modern%20c++/"/>
    <url>/modern%20c++/</url>
    
    <content type="html"><![CDATA[<h2 id="默认实参">默认实参</h2><p>对于某一个函数，其默认参数可以通过多次声明来一起组成。只要保证当前声明的默认实参后的形参在该作用域之前的地方已经声明过默认实参即可，而总体的结果就是这些合并起来。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">void</span> <span class="hljs-title function_">C</span>(int a,int b=<span class="hljs-number">1</span>);<br><span class="hljs-keyword">void</span> <span class="hljs-title function_">C</span>(int a=<span class="hljs-number">1</span>,int b);<br></code></pre></td></tr></table></figure><p>但是，默认实参不能被重定义，即便默认实参的值一致。</p><blockquote><p>对于类模板的成员函数，所有默认实参必须在成员函数的初始声明处提供。</p></blockquote><p>如果不是类模板，实际上是可以类内不声明默认实参，但是在类外定义的使用再加上默认实参。</p><p>[[?/ide的问题?]]但是，如果是将定义写在.cpp中而将声明写在.h中，使用的时候就不知道有cpp中的默认实参的增加，也就链接不起来。</p><p>默认实参不能用非静态成员变量来赋值。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>more c++</title>
    <link href="/more%20c++/"/>
    <url>/more%20c++/</url>
    
    <content type="html"><![CDATA[<p><a href="https://lhish.github.io/hide/map">map</a></p><p><a href="https://lhish.github.io/hide/variant_constexpr">variant_constexpr</a></p><ul><li>多维数组如果真的用多维数组，因为有多个指针，所以更慢，而如果就用一维数组模拟存储，就不会有这种问题</li><li>为什么要用begin()或者end()这个泛型，一部分是为了匹配c的老式数组</li></ul><p><a href="https://lhish.github.io/hide/PImpl">PImpl</a></p><ul><li><p>但实际上，输出流 cout 默认的设置就是“行刷新缓存”，也就是说，检测到 <code>'\n'</code> 时，就会自动刷新一次，根本不需要我们手动刷新！</p><p>如果还用 endl 的话，就相当于刷新了两次，浪费性能。</p></li></ul><p><a href="https://lhish.github.io/hide/back_erase">back_erase</a></p><ul><li>通过包裹在一个lambda里面，来实现不用flag来保存状态，直接return出来</li></ul><p><a href="https://lhish.github.io/hide/%E7%8E%B0%E4%BB%A3cmake">现代cmake</a></p><ul><li>#pragma once能实现ifndef一样的事情</li><li>get,set只有在有必要的时候才使用，因为甚至会有性能开销</li><li>explicit对多个参数也有效</li><li>POD类型可以默认生成构造</li><li>移动赋值≈解构+移动构造</li><li>管理着资源：删除拷贝函数，然后统一用智能指针管理</li><li>数据结构：如果可以，定义拷贝和移动</li><li>非类型模板参数可以用来在编译期优化</li><li>可以用一个假的模板来实现延迟编译，如果有需要才编译</li><li>auto作为函数返回不能分离声明与定义</li><li>函数也可以 auto，lambda 也可以 <class T></li><li>variant：判断当前是哪个类型用 std::holds_alternative</li><li>用size_t，因为会根据平台变化</li></ul><p><a href="https://lhish.github.io/hide/SIMD">SIMD</a></p><ul><li>set内部会排序</li><li>只要定义一个仿函数就能作为set的比较函数</li><li>空基类，为了保证数组的不同位置指向不同的地方，必须保证类非空，即便类是空也会给他强行加一段空的大小，而如果有一个类继承了空基类，就会将空基类的这一部分空间给优化掉</li><li>find(x) 是找第一个等于 x 的元素。<br>lower_bound(x) 找第一个大于等于 x 的元素。<br>upper_bound(x) 找第一个大于 x 的元素。</li><li>可以对标准库的东西定义特化</li></ul><p><a href="https://lhish.github.io/hide/char%E4%B8%8Estring">char与string</a></p><ul><li>为什么int等类型不用指针或者引用，是因为他们本身就比一个指针要小，一般来说一个指针8byte呢</li><li>span其实也是一个弱引用</li><li>弱引用实际上就是用来切片的</li></ul><p><a href="https://lhish.github.io/hide/CRTP">CRTP</a></p><ul><li>静态或全局的是在main前初始化，main后析构的，可以通过static int a=(函数,1)来实现在一开始调用这个函数</li><li>如果在同一个文件，静态变量根据其声明顺序初始化，而如果不在同一个文件中，则不一定，因此要根据链接顺序来保证他的顺序</li><li>而另一种解决方式就是通过在将需要先声明的static对象弄成一个函数单例对象，而后续依赖于这个对象的变量都通过这个函数来获取这个对象，就能保证其顺序，因为函数中的static变量一定是在进入函数的时候被初始化的</li><li>当对一个模板类型调用一个模板的成员的时候，需要在调用符后(::, ., →)，成员名前加template空格来显示表示 显式的&lt;&gt;的&lt;不是小于。</li></ul><p><a href="https://lhish.github.io/hide/%E7%BC%96%E8%AF%91%E6%9C%9F">编译期</a></p><ul><li>由于编译期的语句是不允许未定义行为的，因此可以将函数和接受他返回值的变量设置为constexpr来检测函数中的未定义行为</li><li>decay能将类型的const，&amp;，&amp;&amp;去掉，并将[]→*</li><li>declval能够根据类型凭空创造一个左值对象，但结果不能求值</li><li>require()和require{}其实完全不同，require{}的完整形态是require(){}，但()可以省略，其整体返回一个编译期bool，可以用在各种地方，而require(编译期常量)只是用在template后面表示对其的约束</li></ul><p><a href="https://lhish.github.io/hide/SFINAE">SFINAE</a></p><p><a href="https://lhish.github.io/hide/%E5%AE%8F">宏</a></p><ul><li>decay_t可以去掉引用，去掉cv，去掉[]等等，但不能去掉reference_wrapper</li><li>可以通过逗号运算符来将多句语句组合在一起，配合…运算符展开实现for循环</li><li>由于c++17中引入了if constexpr，因此一些编译期做的事情也可以写成函数式的形式，而其中有一个要解决的问题是函数式会产生实际对象，就不能用declval来解决，因此可以使用type_identity_v&lt;&gt;来作为declval的类似方法</li><li>std::source_location loc=std::source_location::current();这个函数包括调用该行的一些信息。可以用来做trace或者log，可以作为一个函数形参的默认参数来使用，因为默认参数的求值是在调用行求值的</li></ul><p><a href="https://lhish.github.io/hide/Xmacro">Xmacro</a></p><p><a href="https://lhish.github.io/hide/random">random</a></p><ul><li>inclusive_scan(begin,end，output_iterator(一般是back_inserter))就是前缀和</li></ul><p><a href="https://lhish.github.io/hide/allocator">allocator</a></p><ul><li>可以使用&amp;类型::成员名来获取其指针</li></ul><p><a href="https://lhish.github.io/hide/%E7%B1%BB%E5%9E%8B%E6%93%A6%E9%99%A4">类型擦除</a></p><ul><li>全局变量加上extern就是让编译器不把他当作一个定义，而是一个声明。而函数本身就能区别这两种，就隐式extern了。</li><li>而全局的static变量或者函数就是将这个变量或者函数限制在当前翻译单元。</li><li>inline则是能让这个定义违反ODR原则，能够被定义多次，而在使用中，编译器会随机选择其中一个定义作为最后的定义</li><li>由于模板要么显式实例化，要么就得全部公开，就很麻烦。为了解决这一问题，可以有两种办法，一种是直接将其类型擦除，另一种就是用variant来存储，而后续则使用visit进行使用。</li></ul><p><a href="https://lhish.github.io/hide/format">format</a></p><ul><li>用户定义字面量</li></ul><p><img src="/image/c++image.png" alt=""></p><ul><li>类成员的静态初始化是无序的，因此最好还是通过函数的静态局部来让其有序</li><li>当一个类要存储乱七八糟的参数的时候，就用tuple。并且，如果推导不出来，可以显式的写一个推导指引。</li><li>当一个函数被声明为noexcept，他里面抛出错误的时候就会直接terminate。这样能够减少代码生成的体积，因为这样就不用管如果不声明noexcept的时候，处理异常等相关问题的代码，如析构等等。</li><li>当通过…捕获异常的时候，如果想要再将他抛出，就要用<code>std::rethrow_exception(std::current_exception());</code></li><li>推导指引，就是在不指定&lt;&gt;的时候根据初始化参数来推断&lt;&gt;</li></ul><p><a href="https://lhish.github.io/hide/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F">设计模式</a></p><p><a href="https://lhish.github.io/hide/%E5%A4%9A%E7%BA%BF%E7%A8%8B">多线程</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>mit_os</title>
    <link href="/mit_os/"/>
    <url>/mit_os/</url>
    
    <content type="html"><![CDATA[<h2 id="lesson1">lesson1</h2><p>exec的时候虽然会把进程映像替换，但是会保留FD，并且会保留FD中的偏移量。</p><p>但即便保留了FD，也可以在exec的时候更改FD，进行重定向，并且不会影响主进程。</p><p>open是可以open文件夹的，并且也可以读出来的就是这个目录下的所有文件名，需要按照一定格式去一个一个读出来。</p><p>exit是用来结束进程的，一般子进程结束后就要exit一下，虽然不exit也问题不大，感觉类似return 0把。</p><p>fork的子进程是从fork这一行继续执行，而exec则是从头。</p><p>第一个参数是程序名字，所以exec的第一个参数一般没什么用吧。</p><p>只要我不exit，那么我就能一直去exec其他进程，直到我exit，就会立即结束，源程序也就会开始运行。</p><p>虽然看似创建并替换好像比较浪费，但实际上会用虚存技术来把这个浪费优化掉。</p><p>sbrk，申请更多内存。</p><p>FD1是标准输出，FD2是错误输出。</p><p>对于read和write文件都有一个偏移量，读写都是从偏移量开始的。</p><p>虽然cat的时候是从0读入，1输出。但是在exec的时候是保留FD的，因此并不知道exec之前原进程是否重定向过输入输出。</p><p>close可以关闭FD。使用的FD永远是当前进程未被使用的最小自然数。</p><p>因此一般的过程都是，先fork，然后在if里重定向，然后exec。</p><p>而为了更改FD对应的文件，就需要先close掉FD，然后再open。</p><p>TRUNC是把文件中的所有内容删了。</p><p>使用dup可以给同一个低层文件创建一个新的FD，这两个FD共享同一个文件，同一个偏移量。但如果是另一个open或者不是在同一个进程中，那么就不会共享偏移量。并且dup只有一个参数，即文件标识符，然后这个新的文件标识符也是当前进程未被使用的最小自然数。</p><p>ls existing-file non-existing-file &gt; tmp1 2&gt;&amp;1。未写任何东西的&gt;是指将1进行从形象，然后再将2重定向到1。这里的&amp;代表将这个1是一个文件标识符（作为目标的时候需要&amp;）。</p><p>对于一个管道来说，0是读，1是写，而当且仅当所有写的FD都close之后，read才会返回0，表示结束。而其会返回0的原因是管道的末尾被写入了EOF。</p><p>Pipe的代码。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs jsx">pcmd = (struct pipecmd*)cmd;<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_">pipe</span>(p) &lt; <span class="hljs-number">0</span>)<br>  <span class="hljs-title function_">panic</span>(<span class="hljs-string">&quot;pipe&quot;</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_">fork1</span>() == <span class="hljs-number">0</span>)&#123;<br>  <span class="hljs-title function_">close</span>(<span class="hljs-number">1</span>);<br>  <span class="hljs-title function_">dup</span>(p[<span class="hljs-number">1</span>]);<br>  <span class="hljs-title function_">close</span>(p[<span class="hljs-number">0</span>]);<br>  <span class="hljs-title function_">close</span>(p[<span class="hljs-number">1</span>]);<br>  <span class="hljs-title function_">runcmd</span>(pcmd-&gt;left);<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_">fork1</span>() == <span class="hljs-number">0</span>)&#123;<br>  <span class="hljs-title function_">close</span>(<span class="hljs-number">0</span>);<br>  <span class="hljs-title function_">dup</span>(p[<span class="hljs-number">0</span>]);<br>  <span class="hljs-title function_">close</span>(p[<span class="hljs-number">0</span>]);<br>  <span class="hljs-title function_">close</span>(p[<span class="hljs-number">1</span>]);<br>  <span class="hljs-title function_">runcmd</span>(pcmd-&gt;right);<br>&#125;<br><span class="hljs-title function_">close</span>(p[<span class="hljs-number">0</span>]);<br><span class="hljs-title function_">close</span>(p[<span class="hljs-number">1</span>]);<br><span class="hljs-title function_">wait</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_">wait</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">break</span>;<br></code></pre></td></tr></table></figure><p>需要注意的是，虽然在子进程中关掉了管道，主进程中也要关掉管道。</p><p>管道也可以通过临时文件重定向来解决，但是他有三个好处，不用自己清理临时文件；不占用太多存储空间；两条命令可以并行执行。</p><p>对于一般的文件读写，都是在用户空间完成的，而如果是设备文件，读写则会直接调入内核空间。</p><p>Unix就是索引节点文件结构。索引节点中会有一个属性表示这是文件夹，设备还是文件。</p><p>如果在open一个文件并给他创建FD后，然后消除他的所有链接，那么他将变成一个没有名称的临时inode。</p><p>对于所有的命令来说，实际上都是存在一个对应的程序，而shell只是运行了这些程序。而只有cd是例外，sh内置了这条命令，因为切换文件夹最终切换的是子进程的文件夹。</p><h2 id="Task-1">Task 1</h2><p>它的调用很奇怪，只需要声明，就对应到对应的系统调用了</p><p>管道一般是单向的，虽然有的时候如果用的好可以用来做双向，但是双向一半就直接用两个管道算了</p><p>[<strong>Bell Labs and CSP Threads</strong>](<a href="https://lhish.github.io/hide/Bell">https://lhish.github.io/hide/Bell</a> Labs and CSP Threads)</p><p>实现筛素数。</p><p>草你妈。这勾八的fd在fork的时候完全复制是真nm逆天。</p><h2 id="lesson-2">lesson 2</h2><p>实际上，C程序在内存上除了程序区，栈区和堆区，还有data区，用来存放全局变量。</p><p><img src="/image/mit_osimage.png" alt=""></p><p><img src="/image/mit_osimage%201.png" alt=""></p><p>对于整个程序来说argc和argv就像是调用main的人的本地变量一样。这里实际上是每一个程序的内存空间。trampoline用于保存系统调用的语句，trapframe则是用于保存PCB的状态。</p><p><img src="/image/mit_osimage%202.png" alt=""></p><h2 id="lesson-3">lesson 3</h2><p>用户态使用系统调用的时候不应该通过地址来访问，因为这样就可能跳过内核态对于这个系统调用请求的验证部分，导致非法的事情。</p><p>使用微内核的还有一个好处就是内核内的代码很少，也就更少的概率出现更加严重的内核错误。</p><blockquote><p>为了帮助实施隔离，进程抽象为程序提供了它拥有自己的私有机器的错觉。进程为程<br>序提供了看似私有的内存系统，或者 address space ，其他进程无法读取或写入。进程还为<br>程序提供看似其自己的 CPU 来执行程序的指令。</p></blockquote><p>机器模式：kernel</p><p>用户模式：user</p><p>管理模式：操作系统一般处在的状态，管理应用程序，并响应系统调用</p><p>当刚刚开机的时候，首先先用汇编分配一块物理内存供每个cpu分别使用，然后在机器模式的情况下设置监管模式的一些设置，如中断，进程号，与接下来要执行的函数入口，然后正式通过一些技巧回到监管模式（start是机器模式下的init）。完成后调用main函数（监管模式下的init），在监管模式下设定一些初始的东西，如页表等。然后就准备启动用户模式的第一个初始化程序：主要就是准备页表并准备pcb，而其进程映像是由汇编转为二进制后再直接将这个二进制写进内存做到的（就是exec init）。当实际上这里并没有直接执行init，因为现在还在监管模式，cpu都还没有调度呢。等到时候调度的时候，这个runnable的程序才真正的会被调度。而这个时候就会初始化shell。</p><p>关于syscall。实际上是有一个汇编的Usys.S（对应的声明在user.h中），其中将系统调用和对应的数字绑定，存储在对应的寄存其中。而在kernel中，也用一个数组将数字与对应的系统调用绑定。这样，当调用syscall的时候，就会自动根据寄存器中存的数字调用对应的系统调用了。</p><h2 id="lesson4">lesson4</h2><p>虚拟地址可以实现隔离性。对于每一个程序而言，他交给cpu的都是虚拟地址，而通过mmu查找对应的页表之后才是真正的物理地址，为了实现隔离性，每一个程序的地址都是从0开始的。而存储页表的寄存器是satp(risc-v)。每次进程切换的时候就要改一下，并且切换的时候很显然要清空tlb，因为现在的tlb全是其他进程的。</p><p>另外，如果直接用一张页表全部存储，那内存直接爆炸，因此一般是多级的。</p><p>pte:page table entry实际上指的就是指向页面的头部的指针</p><p>ppn:physic page number</p><p>但是存储pte的时候，很显然，是将地址完全存储的，很显然，低位是0。这一部分就可以用于放标志位，也就是控制这块page权限。</p><p>很显然，这里pte指向的值是pa(physics address)，否则就无限循环了。</p><p>当上述的这些查找页表的功能基本都是通过硬件完成的。</p><p>对于一个地址到底是io设备还是内存地址，是完全由硬件也就是主板来决定。</p><p>一般不同的stack的虚拟地址也不是连续的，会由一个guard来分隔，避免出现越界。</p><p><img src="/image/mit_osimage%203.png" alt=""></p><p>每一个进程都会由一个对应的内核信息部分，而对于他们的用户信息，就放在Freememory中。</p><p>一旦执行设置satp的语句，那么在这句语句后所有的地址的含义就全变了。但是对于pc来说他还在增加，所以很难搞。</p><p>在这里satp比较简单的原因是xv6的物理和虚拟的地址是一样的。</p><h2 id="lesson-5">lesson 5</h2><p>栈中会保存当前的的函数返回位置（前一个函数的位置），前一个栈指针，函数参数，和局部变量。</p><p>前两个的相对位置是固定的，因此找起来非常容易。</p><p>function pointer寄存器决定了我们当前在哪个函数。</p><p>而在汇编中，如果要在函数中call另一个函数，就要手动创建其对应的栈空间，方法就是将sp，也就是stackpointer，指向stack最底下的指针减一定大小，也就做到了扩充栈空间。然后在调用前要存储当前函数的返回位置，然后调用结束后再取回来。</p><p>在调用函数的时候，有的寄存器会随之更改，比如返回位置，而有的寄存器不会随之更改。</p><h2 id="lesson-6">lesson 6</h2><p>寄存器：PC,SP,FP,mode标志位(表示当前是用户还是监管模式),SATP(pagetableaddress), STVEC(内存中处理trap的起始位置),SPEC(trap过程中保存PC的值),SSRATCH（交换用的temp，在trap前一直存放的是trapframe的地址）。</p><p>trap过程：保存所有寄存器，保存PC，更改mode，SATP指向kernel页表，更改堆栈指针指向的位置</p><p>相较于用户模式：监管模式能够访问用户模式不能访问的内存，并且能够更改各种原本不可更改的寄存器，但访问时仍然是根据页表，而非直接物理地址来访问。</p><p>首先保存系统调用数字到寄存器。</p><p>此时所有的a0-a15就是调用的参数。</p><p>然后ecall，实际上是调用存储在用户内存空间最顶端的trampoline函数。</p><p>在这个时间点，不能使用任何的寄存器，因为会把用户空间时的寄存器的值覆盖。</p><p>而为了做到这一点，就应该要进行交换，而非赋值。通过sscratch可以将两个寄存器互换。</p><p>ecall是不会立即切换页表的，因此trap的启动部分必须在用户空间。</p><p>ecall(cpu命令)实际只做了三件事，更改模式，保存pc，这样在这里也就能继续用pc了，将STVEC中的值放进PC中。</p><p>ecall只做很少的事情保证其的灵活性。</p><p>为了能够保存寄存器，可以将其放在trapframe中预留的32个槽位中。并且，其中也有内核先放进去的内核页表等数据。</p><p>为了从监管模式返回用户模式，必须要通过sret，而这个函数就会设定各种初始值。</p><p>然后将各种内核事先放的值取出来：kernel table page，kernel stack pointer，tp(当前运行cpuid），usertrap函数(下一个要运行的函数)地址</p><p>在切换的satp的时候要清除缓存，需要加barriar。</p><p>放satp。</p><p>在切换的时候，程序不会崩溃，因为这段程序在两个内存空间中的映射是相同的。</p><p>然后进入usertrap</p><p>设置stvec,获取进程存储pc，不能存储在spec中，因为可能会有递归调用导致覆盖。获取trap原因，调整pc往后一句语句以免重复执行。打开中断，进行系统调用。接着避免恢复一个被杀掉的程序，如果是时间片结束那就放弃cpu。</p><p>然后是usertrapret，首先暂时关中断，在sret的时候再打开(因为可能会发生错误)，设置stvec，存储4大内核参数，调整一些状态位，然后写回sstatus，设置spec，获取要调用函数的地址，然后调用。</p><p>然后又是汇编，更改satp，更改页表，拿出寄存器，然后sret：开中断，拷贝PC，切换模式。</p><p>实际情况中会用更加高效的方式实现trap。</p><p>函数的栈和函数的位置指针是不同的东西，ra是指向前一个函数的位置，而fp指向的是前一个函数的栈。</p><h2 id="lesson8">lesson8</h2><p>page fault可以让页面的映射变得动态。</p><p>显然page fault是个trap，我们会获取到地址，原因（缺页可能有多种原因）和PC。</p><p>很常见的一种情况是程序员由于不清楚要程序要使用多少内存，而申请过多内存当不进行使用。因此对于程序申请内存，例如调用sbrk，就可以只是增长大小，当不实际申请空间，当发生page fault的时候再申请。而在释放的时候也要特殊处理一下。</p><p>而程序除了text区和data区之外还会有一个BSS区，用于放未被初始化的全局变量，需要一开始被赋值为全0。有一种取巧的方式是，将BSS区的所有页都映射到同一个全0的页面上，这样就减少了很多赋值工作。但是，同样，在page fault的时候，就需要分配一个新的页面，并全部赋值为0。</p><p>虽然这均匀分配了代价，但是page fault的代价比普通读写的代价要高。</p><p>当想要fork的时候，我们会直接将其空间全部拷贝。然而，实际上，有的时候我们完全不需要对这些页面进行更改，因此，不如fork的时候直接让父子共享同一个物理内存，并将其PTE设置为只读，当发生pagefault的时候，再复制一个新页并拷贝，然后都设置为写。而为了区分这种情况和普通的情况，就需要增加一个额外的变量标记。而此时，释放也就像共享指针一样要根据引用计数计算了。</p><p>实际上，连最开始的内存分配都可以不需要，只需要分配所有的页表，然后相应项设置为not_valid，page fault的时候再调页就好了。</p><p>有的时候我们需要更快的访问文件，显然内存快于硬盘，因此直接将其全部map到内存上，然后操作完后再写回去。如果多个程序在同时操作，就可能发生问题，因为映射到的都是不同的内存上。</p><h2 id="lesson9">lesson9</h2><p>为了提高内存的使用率，不但会有基础的使用，还会使用很多的buff，加快速度。</p><p>实际上设备中断和缺页中断差不多。只不过有三点不同，设备中断的编程由于设备手册不一导致的困难，生成的中断于当前cpu无关，生成中断和cpu运行是并行的。</p><p>设备被映射到内存空间中，同时也会连接到cpu上，通过一个PLIC中转这些中断。由他来决定每一个中断应该由哪一个cpu处理，如果所有cpu都在忙，他就像当于缓冲区。</p><p>一个驱动一般分为两个部分，bottom部分和top部分，bottom处理中断，并将数据写入类似队列的东西，top部分就是用户程序的接口，像当于从队列中读数据。</p><p>虽然读写用的也是load和store的接口，当行为却不一定是，可能是发送数据等等。</p><p>整体初始化流程：将中断管理交给管理模式，初始化所有设备，初始化的时候要关中断，这样设备就能发出中断，初始化plic，设置接收哪些设备的中断，然后设置cpu接收的中断的类型，这样plic就能正常分发了，最后让cpu打开中断，能够接收这些中断。</p><p>top实际上调用write的时候，调用sys_write，会由于其是一个设备，而去调用对应的函数。</p><p>bottom：收到中断后就会关中断，然后存储cpu信息，每一个cpu如果在摸鱼，就获取中断情况，如果自己要处理，就跟plic说自己要处理，uart就根据自己的buffer进行输出。</p><p>当加入了并行：在对同一个设备操作的时候要加锁，需要原子性的地方，就需要关中断。</p><p>对于消费者和生产者，如果空了或者满了都会开始睡觉。</p><h2 id="lesson10">lesson10</h2><p>多核cpu的原因：时钟频率和单核性能上不去了</p><p>为了提升性能，要增加cpu核心，使用并行，当为了保证并行正确性，又要使用锁来使他串行。</p><p>race condition是概率性发生。</p><p>更加细节的锁能够更加并发。锁必须我们自己加，如果对每一个对象都加一个锁的话，实际上还是有问题的，应该是对一个操作整体加锁。但是这很难判断，如果进行自动加锁的话，那么又会演变成大锁了。</p><p>xv6是通过按序获取的方式来防止死锁的。</p><p>设计多线程的方法：从大锁开始，如果不能使用多线程，就拆分锁。</p><p>锁的实现方式一般都是通过内核的一条指令，这条指令由硬件保证原子性，做到，对地址加锁，然后将数据读出，再将新数据写入。需要注意的是，锁的时候要关中断，这是为了避免在锁的时候陷入中断然后重复获取锁导致锁。并且，为了保证不因为编译器优化而导致的指令顺序变化，就需要加一些barriar。</p><h2 id="lesson11">lesson11</h2><p>线程包括PC，寄存器和stack。一种是有几个cpu就跑几个线程，另一个是不停切换cpu。</p><p>内核线程会共享内存，但用户级线程不会。</p><p>为了实现切换，就必须要有调度器，就像协程也会有一个调度器。为了保证不会有计算密集型线程一直占用cpu，几乎所有cpu都实现了计时器中断。使得即便是不愿意切换的线程也能被切换。</p><p>线程三大状态。</p><p>对于要保存的内容，一个线程总共有两个部分，首先是所有线程共有的内核线程的context，然后是用户线程独有的trapframe。对于普通线程来说，context保存在线程中，而对于调度器线程，由于其是每个cpu一个并且没有proc信息，因此保存在cpu信息中。</p><p>当要切换的时候，首先要切换到调度器线程，调度器线程也是一个独立的内核线程，然后再由这个调度器线程在切换为要调度的线程。</p><p>内核程序虽然都一样，当可以通过当前运行所在cpu在运行的用户线程来知道自己属于谁。</p><p>在switch的时候要保存寄存器，当并不是全部保存，因为有一部分已经被保存完了。</p><p>有些地方要使用汇编的原因是要与寄存器交互，而这要么通过汇编实现要么通过内嵌汇编来实现，那不如直接写汇编程序。</p><p>通过swtch(p,myproc→context)，就将当前运行的挂起了，然后将调度器线程，也就是存储在myproc中的线程进行调度。而调度器线程其实就是main.c，在跑scheduler函数。他首先将中断给打开，因为最快的永远是要中断的，然后找到一个可以运行的proc，调度，如果找了一遍没有东西调度就摸鱼等中断。</p><p>只有第一个被创建的进程和fork出来的进程不是被切换过来的，因此在其被第一次调度的时候，就伪装是从这样的内核线程切换到调度线程的，然后也就能通过这个伪造的函数走到真正的用户线程。</p><h2 id="lesson13">lesson13</h2><p>调度器需要加锁的原因是每个cpu都有一个调度器在跑。</p><p>在进程调度的时候也不允许持有除了该进程锁以外的其他锁，否则会形成死锁。并且这也不能通过定时器中断来解决，因为在acquire的时候会通过关中断的方式来避免死锁。</p><p>除了计时器中断，还有很多其他中断，这些中断都是要等待一些其他事件的完成，一种方式是直接循环知道为真，但只适合非常接近的事情，否则耗费资源太多，因此，一般都会有一个sleep，将这个线程加到这个sleep_channel上去，开始摸鱼，然后直到事件完成主动触发wakeup这个channel，这个上面的所有线程都会变成runnable。</p><p>这个sleep的时候同时还要传入一个锁。因为，很显然，这个进程都要切换了，那么他就不应该继续持有这个锁，然而，如果在外面进行释放，可能会有别的cpu在这个进程的状态被设置为sleeping前就因为中断而触发了wakeup，导致了这个wakeup的lost，因此，sleep需要被特别的设计一下。在wakeup的时候，对于其中的每一个进程的判断都会加锁，那我只要保证在我释放锁的时候到我重新拿到锁的这段时间内这里都会阻塞即可。那么，我只需要在释放这个锁之前，先取得进程锁即可（反正调度的时候要将这个进程锁掉（在调度器中改完相关的状态就会被释放了，直到再次被调度的时候再被加锁）），最后反向释放即可，这样就保证了，针对于这个线程的wakeup是在释放这个锁的时间之外被判断的。</p><p>并且，被唤醒了，不代表当前就一定是条件满足的状态，因为可能同时有多个被唤醒，而其他被唤醒的可能抢先一步，导致条件又不成立了，因此即便被唤醒了也仍然要判断一遍条件。</p><p>这个在现在已经变成了惯用法了。</p><p>即一开始加锁，然后要睡了就在里面通过解锁，然后出来的时候仍然是上锁状态，即sleep不影响上锁状态。最后再释放锁。而为了保证两段前所说的，所以sleep外要加上一层循环进行判断。</p><p>而对于结束进程，需要进行慎重考虑，因为进程可能持有资源，或者在干某些非常重要不能被打断的事情。在exit的时候，释放文件，目录，然后接下来很重要的一步是将自己所有的子进程交给init进程。而为了能够让init接收，就需要首先让init wakeup，然后获取进程的父进程，因为父进程可能在wait子进程，所以要先wakeup他，然后更改孩子的父亲，调整进程状态为zombie状态，这种状态下进程不会被释放，但是也不会被调度，其还没释放的资源也就不会被别人拿去使用。然后进入调度。</p><p>接着剩下的资源就交给这个被释放进程的父进程来解决，因为有一些资源进程自己来释放很困难。解决的方式就是父进程会wait这个子进程结束，然后就会释放掉他的资源。而如果一个进程有子进程，而这个进程要被杀掉，那么就没有对应的父进程来wait他们了，因此让init成为父进程，而init里面就是疯狂wait。</p><p>而在wait中就是等待遍历寻找一个zombie子进程。如果没有找到，就先睡一会。由子进程来唤醒。然后就释放table，释放proc。就结束了。这其中也要注意wakeup lost。</p><p>kill可以直接杀死另一个进程。当实际上他什么都不做，他只是将这个进程找到并唤醒，设置为running然后将其killed标志位设置为1。而在系统调用的时候，进程会自己检查iskilled是否被设置。如果被设置就会自己exit。当这只是在用户空间运行的情况。</p><p>当如果已经在内核运行了，即便在睡觉也会由于设置为了running而能够离开sleep。而在内核中的很多地方都会进行这种iskilled检查，并立即返回，然后exit掉。</p><p>虽然停止进程比较简单，但是关机就比较复杂了。</p><h2 id="lesson-14">lesson 14</h2><p>文件系统一个很重要的点就是即便发生了fatal error，他们仍然保持完好。</p><p>另一点很重要的是，由于load和store很慢，因此要尽量避免或者通过并行来提高性能。</p><p>文件会记录文件大小，可以指向同一个文件，等等各种特性。</p><p>为了实现这些特性，实际上通过的是inode，是代表一个文件的对象，通过编号来区分。</p><p>文件系统一般会分成多层，从磁盘，buffer cache，logging，inode cache，inode，文件名和文件描述符操作。</p><p>SSD的速度大约是0.1-1，HDD大约是10.</p><p>sector：磁盘驱动可以读写的最小单元。</p><p>block：操作系统视角下的操作的最小单元。</p><p>在磁盘上，除了存储实际的信息，还会存储一些元数据，比如xv6中就存储了super block(描述了文件系统)，log，inode，bitmap block(用于记录block是否空闲)。</p><p>inode中会存储type，nlink，size，block对应前几个block num，indirect block number，对应一个页表。</p><p>可以通过类似二级页表的东西来存储。而文件夹也就是存储了其中每个文件或文件夹的inode编号和名字。查找一个绝对路径的时候，因为root的inode编号是固定的，因此只需要按位置偏移即可。</p><p>创建一个文件：标记inode使用，写入空白inode基础文件，更新目录entry，更新目录文件大小，更新空白inode大小。</p><p>写文件：更新bitmap，写入，更新大小（和direct block number）。</p><p>在一些比较底层的地方，比如buffer cache，就会通过锁来限制。比如限制查找cache的人数；限制对cache更改必须是串行的。</p><p>sleeplock能够在开中断的情况下上锁并且不会使用忙等，而是睡觉。也因此，他能够接受中断，因为，他不会霸占这个线程，而导致死锁。而同时，由于这个锁死这个acquiresleep独有的，因此，其他线程不会去acquire这个锁，不会导致死锁。</p><h2 id="lesson-15">lesson 15</h2><p>如果在一个文件操作到一半的时候突然发生断电等情况，那么就可能会导致文件系统的损坏。</p><p>对于某一个文件操作，对于其中的每一次写操作，我们先写一个总操作次数，这是原子的，然后在将剩下的一条一条都先写到log中。这样，即便只输出了一半，也能因为知道总条数而知道没写完而丢弃。在全部写完后，才一步一步执行，然后清除log。</p><p>如果没有commit log就当作没写完，如果commit了但是没有被清除就将install全部重新做一遍。因为写操作多做几遍是没什么问题的。</p><p>整体流程：</p><p>begin_op()：如果log还有空间并且不在提交中，那么就将剩余未提交数量+1，否则开睡。</p><p>log_write：判断是否是正常的一次写，然后开写。如果是和前面有重合的写block，就去掉这一次写，如果是要新写一块，那就记录，并且给这一块打上标记。</p><p>end_op()：剩余未提交数量-1，如果一波操作完成了，即没有剩余未提交数量了，那么就开始提交，否则日子空间就可以空出来有下一个文件操作继续了，因此唤醒begin_op。</p><p>然后开始commit：</p><p>在log_write之外就已经将相应的data部分写入了cache，而log_write中就是写一下对应的blockno。</p><p>接着，首先write_log，将data从cache写到了log中。接着write_head，将cache中的blockno，也就是head写到super block中，完成了commit，接着install_trans，将data从log写到真正对应的block中。最后将cache大小设为0。再次write_head，也就大概把super block给清空了，也就是把commit给清空了。install_trans和write_head看似在做重复操作，从from写到to，然后再反过来写一遍，当实际上，他的to是cache对应在真正磁盘上的位置，from是cache的位置，因此并不重复。</p><p>为了保证block对应的cache不要被清空，就需要pin一下它，因此在log_write中pin一下，然后在install_trans完之后已经写入磁盘了，就可以unpin了。</p><p>在recover的时候直接看眼superblock是否有东西，有东西就install一下就可以了，只不过这些就不用unpin了。因为这些东西已经被复制到log也就是磁盘中了。实际上是用于保证已经写入log的block不会被撤回。</p><p>其中也有很多部分特意防止了wakeup lost。</p><p>并且需要注意的是，在判断能不能继续begin_op的时候，同时计算了已经写入的和outstanding，outstanding是正在执行transaction的cpu数，也就是可能有多个cpu同时在做事务。而同时做事务需要的log空间就更大，因此需要对当前并行数量做限制。</p><p>当且仅当所有的事务都做完后才会commit。</p><h2 id="lesson-16">lesson 16</h2><p>ext3相较于ext2修改了journal，也就是logging。</p><ol><li><p>可以异步，也就是系统调用结束的时候没必要一定应用写入。而这会导致系统调用的返回并不能代表它的完成情况，因此需要对文件的有一个同步的函数，即将在它上面做的所有的更改都应用掉。也就是fsync。</p><p>这需要log通过存储代表每一个系统调用的handle来监督。</p></li><li><p>每隔一段时间开一个大的事务，在这段时间内的读写操作都放在这个大的事务中。可以减少事务的固定损耗，如log，更有可能write absorption，并且有更好的disk scheduling，即一次性写入大量的数据。</p></li><li><p>并行。增加事务并不会由锁导致串行，都是并且允许有多种不同状态的事务同时存在。</p></li></ol><p>在提交的时候，不允许新的调用，等待所有已有调用，更新数据，并开启一个新的transaction，和普通log一样更新数据。</p><p>log空间的使用就类似于循环队列，commit完了就可以pop掉，空出空间。</p><p>由于包含了多个transaction，因此恢复的时候需要确认其log中真正有用的部分，ext3是用魔法数字和每个transcation会记录一个长度来判断的。</p><p>要求transacation必须先等其中所有系统调用都完成后才能开启下一个transaction是因为transaction之间可能互相影响，但只要影响了就应该要在一个事务中完成。</p><h2 id="lesson-17">lesson 17</h2><p><strong>Trap-and-Emulate 的工作原理</strong></p><ol><li><strong>VMM的角色</strong>：</li></ol><p>VMM 作为宿主机操作系统的一部分，充当 Guest 操作系统和硬件之间的中介。</p><p>VMM 本身运行在 <strong>Supervisor mode</strong>，而 Guest 操作系统则运行在 <strong>User mode</strong>。</p><p>VMM 通过 <strong>trap</strong> 机制来捕获 Guest 操作系统中的 privileged 指令（例如修改 SATP 寄存器）并进行模拟。</p><ol start="2"><li><strong>指令截获（Trap）</strong>：</li></ol><p>当 Guest 操作系统执行任何需要 Supervisor mode 权限的指令时（例如修改 SATP 寄存器），该指令将触发一个 trap。</p><p>这个 trap 将把控制权交给 VMM，VMM 会模拟这条指令，并返回 Guest 操作系统。</p><ol start="3"><li><strong>指令模拟（Emulate）</strong>：</li></ol><p>VMM 会为每个 Guest 操作系统维护一套虚拟的寄存器状态（例如 SEPC、STVEC 等）。</p><p>当 Guest 操作系统执行需要读取 privileged 寄存器的指令时，VMM 会模拟该操作，提供一个虚拟的寄存器值。</p><ol start="4"><li><strong>虚拟状态信息</strong>：</li></ol><p>VMM 维护每个 Guest 的虚拟状态，包括虚拟寄存器、虚拟的 mode（用户模式还是内核模式）等。</p><p>VMM 会在 Guest 进程切换时更新这些状态信息，以确保虚拟机的正确执行。</p><p><strong>为什么不能直接使用硬件中的寄存器</strong></p><p>虽然硬件中有对应的寄存器，但 VMM 需要模拟这些寄存器的行为，因为：</p><p>当 Guest 操作系统尝试读取或修改 privileged 寄存器（如 SCAUSE 寄存器）时，硬件会将其标记为非法操作（例如访问权限不够）。VMM 需要调整这一行为，以提供 Guest 操作系统期望的行为。</p><p>为了避免暴露宿主机的真实硬件状态，VMM 需要使用虚拟寄存器，确保 Guest 操作系统只看到它应该看到的值。</p><p><strong>Page Table 和 Shadow Page Table</strong></p><p><strong>Page Table 管理</strong>：</p><p>VMM 需要管理 Guest 操作系统的 Page Table，并确保其映射正确。</p><p>当 Guest 操作系统尝试修改 SATP 寄存器时，VMM 会拦截这个操作，生成一个虚拟的 <strong>Shadow Page Table</strong>，并将其设置到宿主机的 SATP 寄存器中。</p><p>Shadow Page Table 通过将 Guest 的物理地址（GPA）映射到宿主机的物理地址（HPA）来实现内存隔离。</p><p><strong>Shadow Page Table 的重要性</strong>：</p><p>由于 Guest 操作系统无法直接访问宿主机的真实物理内存，VMM 会创建一个 Shadow Page Table，用来映射 Guest 操作系统的虚拟地址到宿主机的物理地址。</p><p>这样，Guest 操作系统只能访问它被允许的内存区域，而无法逃逸到宿主机的内存空间。</p><p><strong>VT-x硬件虚拟化支持</strong></p><p>VT-x通过提供硬件支持，简化了虚拟机的运行，并大幅提高性能。在传统的Trap and Emulate模型中，VMM需要为每个虚拟机（Guest）保存虚拟状态信息，而VT-x将这些状态信息保存在硬件中，使得特权指令的执行不再需要通过trap进入VMM。这样，Guest可以在不触发trap的情况下执行特权指令，从而提高了执行效率。</p><p><strong>虚拟寄存器与控制寄存器</strong></p><ol><li><p><strong>Guest和Host模式</strong>：在VT-x的架构中，虚拟机有两个模式：Guest mode（non-root mode）和Host mode（root mode）。Guest模式下的虚拟寄存器保存着虚拟化状态，而Host模式下使用的是真实的控制寄存器。硬件通过独立的虚拟控制寄存器，允许Guest操作系统直接修改这些寄存器，而无需经过VMM的干预。</p></li><li><p><strong>VMM与VMCS</strong>：VMM通过创建虚拟机控制结构（VMCS），在硬件中配置虚拟机的状态并通过指令（如VMLAUNCH和VMRESUME）启动或恢复虚拟机。</p></li></ol><p><strong>进程与虚拟机的区别</strong></p><p><strong>进程的隔离</strong>：Dune论文通过利用VT-x硬件，允许普通的Linux进程在不完全依赖操作系统虚拟化的情况下，享受虚拟化隔离。这使得进程可以有自己的虚拟化控制寄存器（如CR3），并允许更细粒度的内存控制（如垃圾回收的加速）。</p><p><strong>Dune与VT-x的创新</strong></p><p>Dune利用VT-x硬件的虚拟化功能，不仅支持虚拟机，还能让普通进程享受虚拟机的内存隔离和安全特性。例如，它允许一个进程运行未被信任的插件，隔离插件与主进程的内存空间，确保插件不能恶意访问主进程的资源。</p><p><strong>其他关键概念</strong></p><ol><li><strong>EPT（Extended Page Table）</strong>：通过EPT，VMM可以控制Guest使用哪些物理内存，防止Guest直接访问不允许的内存区域。EPT为每个虚拟机提供二次地址转换，将Guest虚拟地址转换为主机物理地址。</li></ol><h2 id="lesson-20">lesson 20</h2><p>相较于高级语言，c能用汇编，并发与内核所需的并发类似，无法直接访问内存，并且更快。但是，用golang这个高级语言实际上进行的时间也只慢了15%左右，也是可以接受的。</p><h2 id="lesson-22">lesson 22</h2><p><strong>核心技术：预测执行和缓存</strong></p><p><strong>预测执行</strong></p><p>预测执行是现代CPU为了提高性能而采用的一种技术，允许CPU在确定分支的条件之前，提前执行某些指令。当CPU发现分支指令时，它会基于过去的执行历史进行预测，提前执行预测的路径。即便预测错误，CPU也能回滚错误的执行，恢复到正确的状态。</p><p>在Meltdown攻击中，攻击者利用这一点，通过让CPU提前加载某个内核内存地址的数据，即使该地址不可访问。然后，当预测执行“回滚”时，攻击者依然可以通过测量缓存中的数据来推测出原本无法访问的内核数据。</p><p><strong>CPU缓存</strong></p><p>当CPU从内存中读取数据时，通常会将数据存储在不同级别的缓存中（如L1、L2、L3缓存）。这加速了后续对同一数据的访问。在Meltdown中，攻击者通过读取内核内存中的某些数据，利用CPU缓存机制，通过分析缓存中的内容推断出内核数据，尽管攻击者没有直接权限访问这些数据。</p><p>虽然Meltdown攻击利用了硬件层面的漏洞，但操作系统和硬件厂商已经通过多个途径进行修复。主要修复方法包括：</p><p><strong>禁止预测执行访问内核数据</strong>：更新的CPU微架构不允许在预测执行时访问未经授权的内存地址。</p><p><strong>内核页表隔离</strong>（KPTI, Kernel Page-Table Isolation）：操作系统修改了内核的页面表映射，将内核空间和用户空间完全分开，防止了用户空间代码意外访问内核数据。</p><h2 id="lesson-23">lesson 23</h2><p>RCU（Read-Copy-Update）通过允许读线程在没有任何锁的情况下读取数据来解决了读写锁的这些性能瓶颈。RCU的关键思想是<strong>不修改现有的数据</strong>，而是创建数据的一个副本进行修改。写操作会替换整个数据结构（如链表节点），而不是直接修改现有节点的数据。这样，读线程可以继续访问未修改的旧版本数据，从而避免了对读线程的阻塞。</p><p><strong>具体例子：</strong></p><p>•<strong>场景一：数据元素内容更新</strong>：当一个写线程想要修改链表元素时，RCU会创建一个新的链表元素，将新数据写入这个新元素，然后更新链表的指针指向新的元素。原始数据仍然可供读线程访问，直到所有的读线程完成对旧数据的访问。</p><p>•<strong>场景二：插入数据</strong>：写线程将新节点插入到链表中，但并不直接修改链表中的现有指针。写线程会创建一个新的节点，并且确保在更新链表头指针时，所有的数据更新都是一致的。</p><p>•<strong>场景三：删除数据</strong>：删除链表元素时，写线程不会立即释放旧的节点，而是标记其为已删除。读线程继续读取旧数据，直到所有读线程都完成后，删除操作才会被实际执行。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>HeadFirst design Pattern</title>
    <link href="/HeadFirst%20design%20Pattern/"/>
    <url>/HeadFirst%20design%20Pattern/</url>
    
    <content type="html"><![CDATA[<p>面向接口编程，上对下要有抽象中间层，上面自己也需要抽象顶层。</p><h2 id="策略模式">策略模式</h2><p>继承会导致在添加新的行为的时候不够灵活，要们需要在每个子类中实现，如果在基类中实现那么即便是不需要这个行为的子类也会继承这个行为。</p><p>此时我们可以使用策略模式。</p><p>实际上就是一种将继承改为组合的例子。</p><p>将拥有行为者和行为分开，总共包括四个类，通过让行为者使用不同的行为就达成了行为改变的结果。</p><ol><li>抽象拥有者：拥有着抽象行为，和使用抽象行为的成员函数</li><li>抽象行为：拥有行为成员函数，全虚</li><li>具体拥有者：构造时指定其基类的抽象行为的具体行为，在调用抽象拥有者的行为的时候就可以调用对应的具体行为了</li><li>具体行为：实现抽象行为的行为接口</li></ol><h2 id="观察者模式">观察者模式</h2><p>实际上就是广播一些消息，只不过，这里的广播是调用观察者的成员函数罢了。</p><p>主要就是两大接口：</p><ol><li>被观察者接口：提供一个notify和存储订阅了本被观察者的列表（要附带一个订阅和取消订阅的成员函数来操作），如果可以的话可以在更新数据的时候进行setchange，来判断时候需要真正的进行notify，来控制notify的更新频率。通过notify来调用订阅了本被观察者的所有观察者的update函数。</li><li>观察者接口：提供一个update函数来供被观察者进行广播。</li></ol><p>在使用update的时候有两种模式。</p><ol><li>推模式：被观察者在调用update的时候直接把本被观察者的所有获取的信息传给update来供给操作。</li><li>拉模式：被观察者在调用update的时候，不提供任何获取的数据（也不能说任何，也可以提供一些都需要的数据），而是通过设一些getter来供给观察者来使用（而为了让观察者能够使用这些getter，在调用update的时候得要把自身传入其中），在update中观察者直接根据需求来使用getter来获取想要的数据。</li></ol><p>一般来说，推模式优于拉模式。</p><h2 id="装饰模式">装饰模式</h2><p>正如其名，装饰模式就是在一个类的外部进行装饰。装饰的方法是使这个类或者不止一个类和他(们)的装饰器有一个共同的基类。</p><p>装饰器其中会存储一个基类指针来表示其装饰的对象，并通过于这个基类指针来互动来重写基类的方法。</p><p>通过这样的方式，可以对一个类进行多次的装饰，而使用者对于一个接收到的东西即便使一个装饰器但也可以把它当成一个普通的产品。</p><p>装饰器的构造函数就是传入一个基类指针。</p><p>官方的讲：可以动态地讲责任附加到对象上。想要扩展功能，装饰者提供有别于继承的另一种选择。</p><h2 id="工厂模式">工厂模式</h2><p>将构造和new和具体构造函数解耦，将构造函数的部分与对其的基础的构造后续的部分包装进工厂中，使用者只需要面对工厂提供的构造接口，通过传入字符串或者其他的能够决定的参数来获取一个指向实际产品的基类指针，工厂会根据参数来选择对的子类的构造器。</p><p>而上层也应该去依赖基类而非具体类，就解耦了。</p><p>不同的使用者可以使用不同工厂。</p><h2 id="抽象工厂">抽象工厂</h2><p>抽象工厂抽象了工厂，工厂基类定义了一系列的方法来提供一组产品，而子类工厂分别定义这些具体提供什么样的产品，而这可以使用工厂模式来实现。最终使用者将会接收一个抽象工厂的指针来使用对应的工厂来创造要使用的产品。</p><p>实现上，所有的产品都各自有基类，工厂使用这些产品，使用者使用抽象工厂。</p><p>通过传入的抽象工厂的不同，达成获得不同的一组产品。</p><h2 id="单件模式">单件模式</h2><p>全局变量在一开始定义的时候就会创建，而单例模式则是能将其延迟到使用的时候。并且仍然会保持它的单一性。</p><p>实现上就是将构造函数实现为private并提供另一个“构造函数”来提供实例，并且在类中还有一个自身的静态指针来存储这个唯一的单例，并且“构造函数”会根据当前时候创建了来决定是返回当前还是创建。</p><p>如果多线程要使用单例模式，可能需要加上线程锁。</p><p>不仅使用的时候需要使用atomic类的或者线程锁之类的东西，在创建的时候也需要注意多线程可能会创建多个“单例”。</p><p>一种处理方式，加锁。第二种，在一开始static那个实际单例的时候就初始化。</p><h2 id="命令模式">命令模式</h2><p>通过将请求分装成对象通过中介交与执行者，请求者就与执行者解耦了。</p><p>通过这样，可以实现线程调度，日志记录，遥控器等等类似的要求。</p><ol><li>抽象请求：有一个执行接口，如果要支持撤销操作，还需有一个undo接口。</li><li>具体请求：通过工厂或生成器或用户生成具体的请求，实现接口。</li><li>执行者：通过调用抽象请求的执行或undo来处理请求。</li></ol><h2 id="适配器">适配器</h2><p>对象的适配器：使适配器以要转变(适配)为的对象为基类，组合一个被适配者(传入被适配者)，重新实现基类的所有虚函数即完成了适配。</p><p>类的适配器：适配器多重继承适配者和被适配者的类，重写其中的函数即可。</p><p>对象的适配器可以对适配者的所有子类都有效，而类适配器则完全不需要一个被适配者。</p><h2 id="外观模式">外观模式</h2><p>通过给一个外观对象组合其管理的对象简化管理的对象的接口。实际上就是封装。</p><p>通过这种方式让使用者和底层组件解耦。</p><h2 id="模板方法">模板方法</h2><p>将一类子类的某一个虚函数的共同的部分抽象出来到基类中，不同的部分再分别在子类中实现(纯虚函数)。对于有些子类有，有些子类没有的部分，可以使用钩子(虚函数)，钩子本身在基类中为空实现或者有默认实现，子类可以重写钩子来在特定的地方添加一些行为。</p><p>（泛化函数）</p><h2 id="迭代器">迭代器</h2><p>iterator</p><h2 id="组合模式">组合模式</h2><p>对于所有可能作为一颗树的结构都可以使用组合模式。</p><p>组件基类：接口类，实现获取孩子，等接口</p><p>让非叶子节点和叶子节点都实现基层这个组件基类，而对于整体这颗树进行处理的时候就可以遍历过程的所有节点都当作使组件基类来调用他的方法。而无需区分叶节点和非叶节点，即用一样的方法来处理整体和部分。</p><p>对于叶节点来说实际上就是非叶节点但孩子=0。</p><p>例如窗口就是一个很经典的可以使用组合模式的例子。</p><h2 id="状态模式">状态模式</h2><p>使一个对象的行为全部取决于其状态。即，对象持有一个状态基类指针。指向各种具体状态派生类。对象的行为也会因为实际持有的状态不同而去使用不同状态的虚函数，也就实现了不同状态有不同的行为。</p><p>而基类状态中可以实现一些非常基本的所有状态所同有的行为。</p><p>而状态也应该持有对象的指针，来改变对象的状态，当然，对象自身也可以主动改变自身的状态。</p><h3 id="策略模式是用户主观改变其使用的行为，而状态模式则是被动地使其随着状态的改变而改变行为。">策略模式是用户主观改变其使用的行为，而状态模式则是被动地使其随着状态的改变而改变行为。</h3><h2 id="代理模式">代理模式</h2><p>代理继承于被代理对象，实现被代理对象的所有功能，用于控制被代理对象的访问。</p><p>远程代理，控制访问远程的被代理对象。</p><p>虚拟代理，用于帮助创建时间久的对象有一个替身。</p><p>权限代理，用于控制访问者的权限。</p><p>代理并没有给被代理对象添加新的行为，仅仅只是替代其作为被访问对象而已。</p><h2 id="复合模式">复合模式</h2><p>将各种模式一起使用。</p><h3 id="Model-View-Controller模式">Model-View-Controller模式</h3><p>视图：用户所看到的界面，所能操控的东西，所有用户的行为都将会发送给控制器来处理。界面的改变由模型和控制器来notify。其显示的信息来源与模型。</p><p>控制器：将用户的操作转化为实际可以操控模型的行为，具体来控制到底如何控制模型。并且notify视图的改变。</p><p>模型：真正的底层。实现所有的内容，并将信息发送给视图。</p><p>三者都是解耦的，可以随意进行更换。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>git</title>
    <link href="/git/"/>
    <url>/git/</url>
    
    <content type="html"><![CDATA[<p>保存的是基于上面一个节点变更的内容</p><p>每一个节点都是一个版本。</p><p>git commit：在原本的节点下添加一个新的节点，也就是更新版本，于HEAD所在的位置</p><p>git branch name: 新建一个分支，于HEAD所在的位置</p><p>git checkout name: 切换当前所在分支，但最好使用git switch name来切换</p><p>git checkout -b name: 新建分支并切换到这个分支上</p><p>git checkout -b name name1（name1是一个本地的远程分支，形式…/…）: 建立一个分支并将其与name1相关联，即远程追踪</p><p>在一般情况下，建立一个本地分支后push会自动创建一个远程追踪。</p><p>每一个远程分支都只能被一个本地分支远程追踪，当我们设置了一个远程追踪，其原本对应的本地分支的远程追踪就消失了。</p><p>所有的push pull等等都是根据其远程追踪来的。可以将其看做原本对应的本地分支的替身。</p><p>另一种设置的方法是</p><p>git branch -u name1 name: 与前面相反，这里的name1是远程分支，name是本地分支。若当前在name分支下，可以省略name。但只能用于已存在的分支。而checkout版本可以新建分支。</p><p>在更改远程追踪后，原本的本地分支与远程同名分支就完全没有关系了。</p><p>如果一个节点没有远程追踪，那么它就不能pull和push。</p><p>git checkout nodehash: 将HEAD指针指向这个节点</p><p>HEAD可以当做是一个隐形的分支，在一般情况是指向当前所在分支所指向的节点。</p><p>当checkout一个nodehash的时候会把HEAD显式化，但是若是切回普通分支，其会隐式，并且回到当前分支所指向的节点。</p><p>当使用另一个分支commit的时候就会创建出第二条通路出来。</p><p>在分支名字后加修饰符可以表示将其移动几格的一个临时变量。</p><p>^：往父节点一个，几个^就是往会几个</p><p>如果在^后加数字，是在当前节点有多个父节点的情况下指定哪一个父节点（如果进行了合并操作），其顺序与合并的顺序相同</p><p>~num：往父节点num个节点</p><p>这两种操作运算符可以链式使用，如~2^^2~</p><p>git reset 位置：将当前分支指向目标位置，但是这个位置必须是已经存在的节点（不能在分离HEAD使用）</p><p>这里的位置既可以是hashnode，也可以是相对位置，也可以是分支</p><p>git revert 位置：在当前节点（HEAD）后创建一个节点，这个节点所做的改变操作将会使得原本的节点变为“位置”节点。并将当前分支指向这个新的节点。</p><p>git merge name:在本分支（HEAD）后新建一个节点，其内容将会融合本分支和name分支，同时这原本的两个分支所指向的节点都会成为该节点的父节点，不再是两个分支了，虽然“分支”还是分支。被merge的分支仍然会指向原本的节点。</p><p>merge只能merge两个不同的分支（这里的分支是指两条路上的，而非我们所创建的“分支”指针）的，若是相同分支，这当前节点会指向自己和被merge分支中版本更新的那个。</p><p>git rebase name (name1): 找到当前分支（好像不能使HEAD）/(name1)与name的共同父节点，将自身所进行的更改在name上重新操作一遍，也是一种merge，不过把原本并行的操作变成了线性的，name分支仍然将指向原本的节点。但是其后面会加上对应的另一个并行分支所进行改变的所有节点，当前分支将指向最后一个节点。</p><p>若处于同一分支下，则将进行与merge一样的操作。</p><p>git branch -f name 位置: 将name分支指向位置</p><p>git cherry-pick 位置：这里的位置可以有多个位置，用空格隔开，将这些位置节点所做的操作一一做到当前分支（实际上是HEAD）下。这里的位置不能是本分支（非指针）下的。如git cherry-pick C1 C2 …</p><p>git rebase -i 位置：将当前分支（HEAD）所在分支（非指针）中位置没有操作的版本变化会显示一个文本文档，依次排序，可以重新调整顺序，删减节点，将里面最终的内容，也就是节点内容按顺序rebase到位置节点后，提供一个将所有节点改变merge成一个新的节点的选项，指向最后的节点。</p><p>在这种情况下，可以位置可以是自己分支上的（因为可能重排顺序，即便并没有变化）</p><p>git commit —amend: 在当前节点（HEAD）的父节点创建一个新节点表示新的修改，并将当前分支指向这个新节点，相当于是修改上一次的更新</p><p>git tag name 位置:给某个节点加上一个永久性的tag，虽然可以删除，但不能被移动，一般用来记录重大的里程碑。</p><p>当不写位置时，会将位置默认为HEAD。</p><p>git describe:对于当前节点（HEAD）会在它所在的路径上往上寻找最近的有tag的节点。</p><p>输出tag_距离_g&lt;当前节点的hash&gt;</p><p>如果当前节点有tag，这只输出当前节点的tag。</p><p>git clone（同时会把HEAD也clone）: 将远程仓库拷贝到本地</p><p>但不能push HEAD，因为它不是一个分支。</p><p>在clone完后，会产生两张图，一张表示远程的，一张表示本地的，而在远程的每一个对应分支所对应的本地分支所指向的节点上，会产生一个新的远程分支，名字是repo name/branch name，如origin/main。由于这个分支是“远程”的，因此不能直接对它进行操作。当switch到某个远程分支的时候，会直接在那个远程分支处分离出HEAD，后续操作都是对HEAD进行的操作。另外，当在本地图上作操作时并不会在远程图上做操作。</p><p>git fetch:从远程仓库更新本地仓库。总共有两步操作，一个是补上所有缺失的节点，二是更新所有本地图上的远程分支，使其余远程仓库一致。</p><p>但git fetch并没有对本地图的分支作任何更改。</p><p>当本地图的节点多于远程库的节点，其本地图有的节点也仍然会在，而本地图中没有的，远程图中的也会复制过来（因为节点的名称是不同的）</p><p>git pull=git fetch;git merge</p><p>git push:当没有参数时会与push.default中的配置相关</p><p>将本地图同步到远程图，并且更新远程图中分支节点与本地图中的远程分支节点。</p><p>当远程图中的版本与本地图中的不同（其他的所有分支，只允许当前push的分支与远程不同），会不允许git push，必须先git fetch完之后才能git push。</p><p>在fetch后可以通过rebase或者merge来将我们所做的操作做到最新的分支上。</p><p>git pull —rebase=git pull;git rebase 当前分支对应的远程分支</p><p>对于某一个分支进行pull实际上是fetch其对应远程分支上的路径并merge。</p><p>但fetch是fetch所有分支。</p><p>push的时候好像并不会将废弃的分支进行上传，好像是实际上只push当前分支所在路径上所做的一切更改。</p><p>有的时候远程仓库可能会锁定某个分支，不允许对于这个分支进行push。这个时候我们可以将main reset与远程仓库相同，然后新建一个分支，指向我们所做的更改，让后基于这个分支进行push</p><p>当远程库中存在没有使用的版本，这个会不会fetch过来。好像远程仓库中不会存在没有使用的版本</p><p>关于rebase于merge。merge能够保存所有版本的历史，条理更加清晰。而rebase会使提交树更加干净。</p><p>git push <remote> <place>:remote是仓库名，而place是指本地分支的名字，若是省略，则默认为当前分支。其会根据place在remote中的远程追踪?来更新。</p><p>git push <remote> <place1>:<place2>:place1是本地分支，place2是远程图上的分支（不是本地图上的远程分支），意思是将本地分支中远程分支中没有的部分push到远程分支中。</p><p>git fetch <remote> <place1>:<place2>:place1是指远程分支，place2是本地图上的分支，意思是将远程分支中本地分支中没有的部分fetch到本地分支上。</p><p>以上两种操作都可以看作是嫁接。</p><p>当以上两种操作的place1为空时，push会删除远程图上的place2分支，本地对应的远程分支也会被删除，fetch会创建一个place2分支</p><p>git pull也有参数，与fetch相同，作用就是fetch然后merge。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Effective c++</title>
    <link href="/Effective%20c++/"/>
    <url>/Effective%20c++/</url>
    
    <content type="html"><![CDATA[<h3 id="模板推导">模板推导</h3><p><img src="/image/c++Untitled.png" alt=""></p><p>对于传数组，由于c中数组和指针是等价的，因此，数组通过值传递的时候被视为一个指针，模板推导出来也是一个指针。然而，当作为引用传递的时候，其就不和指针等价了，可以推导出其类型和大小。</p><p><img src="/image/c++Untitled%201.png" alt=""></p><p>但实际上，这两个传进去的东西用起来是一样的。都是函数()。</p><h3 id="auto">auto</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs jsx">template&lt;typename T&gt;<br><span class="hljs-keyword">void</span> <span class="hljs-title function_">f</span>(<span class="hljs-title class_">ParamType</span> param);<br><br><span class="hljs-title class_">ParamTypeOfAuto</span> param;<br></code></pre></td></tr></table></figure><p>这两个实际上是等价的，除了一种情况。</p><p>当使用{}初始化的时候，auto会默认为std::initialize_list，而模板推导则不会默认，模板推导接受{}是必烂的。而如果是构造，如果这个{}能够符合两个类型的构造，那么就是歧义的。</p><p>返回类型的auto和lambda的形参auto虽然看着是auto，但实际上使用的规则是模板推导的规则而非auto的规则。</p><p>另外，lambda的形参使用auto相当于就是模板函数。</p><p><strong>使用auto能够让类型上的依赖自动推导，不用牵一发而动全身。</strong></p><h3 id="decltype">decltype</h3><p>decltype不是类型推导，decltype会忠诚的返回变量本身的类型。</p><p>然而，对于一个非引用值来说，如果他是复杂的表达式，即便是(param)，param是T类型，也会让整个类型的推导变为T&amp;。</p><p>由于auto是类型推导，为了让其使用decltype的规则，就应该使用decltype(auto)，这个时候会把推导方法使用decltype的规则。</p><h3 id="推导">推导</h3><p>编译器或者typeid产生的推导可能是不正确的，还是靠编译器编译的时候的解释比较靠谱。一种比较简单的方式是</p><p><img src="/image/c++Untitled%202.png" alt=""></p><h3 id="使用auto的好处">使用auto的好处</h3><ol><li>避免没有初始化</li><li>省略冗长类型名</li><li>避免不必要的类型转换(如在不同平台typedef实际不同)及其产生的相关问题</li></ol><p><img src="/image/c++Untitled%203.png" alt=""></p><h3 id="不使用auto的场合">不使用auto的场合</h3><blockquote><p>由于c++不允许对bit的引用，但是vector<bool>是按bit存放的，因此，返回的并不是bool&amp;，而是一个代理类，有着类似的功能。</p></blockquote><p>然而，不显式的代理类一般是不被平常使用的，他是隐藏于使用但我们并不知道他被使用了，我们也不会主动去使用他，因为这可能会导致一些错误，就像工具人一样。</p><p>而使用auto会让这些代理类被显式使用，会导致错误。</p><p>为了贯彻auto的理念，使用 auto a=static_cast<type>(b)来显式类型初始化惯用法。</p><p>而这也表明了，b可能不是这个类型，而我希望让他转换成type这个类型的意思。</p><h3 id="和">()和{}</h3><ul><li><p>{}的好处</p><p>在任何情况下都可以用</p><p>避免了类型变窄的隐式转换</p><p>避免了默认初始化可能会被误判成函数声明的问题</p></li><li><p>{}的坏处</p><p>如果定义了以initialized_list为参数的构造函数(要避免)，那么所有能够匹配到initialized_list的都会使用这个构造函数</p><p>当通过模板完美转发的时候，不知道使用者到底是想要使用{}还是()</p></li></ul><h3 id="使用nullptr">使用nullptr</h3><h3 id="使用别名声明">使用别名声明</h3><ol><li>using看起来比typedef更易懂</li><li>using支持模板，而typedef应该是一个宏，所以不支持</li></ol><blockquote><p>为什么要加typename的原因是::所得的成员不一定是一个类型，可能是一个实际成员。</p></blockquote><h3 id="使用限定域enum">使用限定域enum</h3><p>避免了作用域的问题。</p><p>避免了隐式转化。</p><p>限定域enum默认最为int大小，而非限定没有默认，因此不能声明和定义分开。</p><p>而对于用来表示对应数字的问题，如对于tuple的get来说，是比较麻烦的，但为了贯彻限定域enum，可以</p><p><img src="/image/c++Untitled%204.png" alt=""></p><h3 id="使用deleted">使用deleted</h3><p>deleted能够达到与声明为private一样的效果。</p><ol><li>能够在编译的时候就检测出来，而非在链接的时候。</li><li>针对任何函数</li><li>能够用来对于函数的参数进行过滤，虽然现在大概应该要用concept更好把</li></ol><h3 id="使用override">使用override</h3><blockquote><p>基类和派生类函数名必须完全一样（除非是析构函数)，因此构造函数不能继承。</p></blockquote><h3 id="使用const-iterator">使用const_iterator</h3><h3 id="使用noexcept">使用noexcept</h3><p>移动，swap和析构都需要是noexcept的。</p><p>一个函数时候应该是noexcept应该要衡量noexcept带来的性能上的优势与实现noexcept带来的性能上的劣势。</p><p>另外，noexcept函数并不要求其调用的函数是noexcept（这是为了兼容老代码）。</p><h3 id="使用constexpr">使用constexpr</h3><p>constexpr保证了变量是编译器可知的，因此编译器就会在编译期把他求出来，一个constexpr变量一定是const的。</p><p>constexpr函数则表示，这个函数的返回值可能是编译期可知的，也就是，可以用非constexpr参数去调用这个函数，返回的也不是constexpr的，但是，如果用constexpr的形参去调用，则返回的结果也是constexpr的，但不一定是const的。</p><p>所以如果一个函数的调用的形参是constexpr的，那么这个函数就应该被声明为constexpr的。</p><h3 id="保证const函数线程安全">保证const函数线程安全</h3><blockquote><p>大概是为了保证其他函数的const性，所以某些函数也要被生成为const，至少表面看上去是const，而为了在里面修改内容，就需要用mutable</p></blockquote><p>由于const函数是只读的，因此对于多线程是可以并行的。所以如果有mutable，那么就要进行保护，如使用atomic或者mutex。</p><p>一般来说atomic比mutex快，但是，对于多个mutable同时操作，atomic就并不能保证安全了，只能用mutex。</p><h3 id="默认函数的生成">默认函数的生成</h3><blockquote><p>对于默认生成的移动函数来说，对于所有成员都会进行移动请求，可以移动的就会移动，但如果无法移动就会拷贝</p></blockquote><p>拷贝的两个函数的生成是互不影响的。</p><p>移动当且仅当5大函数都没有声明的时候才会生成。</p><blockquote><p>这些的逻辑是，如果声明了，那么就说明他和默认的不一样，那么连带着其他的也可能不一样</p></blockquote><h3 id="unique-ptr">unique_ptr</h3><p>比如说pimpl或者工厂都会使用unique_ptr。</p><h3 id="shared-ptr">shared_ptr</h3><p>如果通过一个shared_ptr的this来构造shared_ptr，那么会烂掉。</p><p>这种情况要让这个被shared_ptr管理的类继承于enable_shared_from_this。</p><p>shared_ptr和unique_ptr都是原子的。</p><h3 id="用make">用make</h3><p>使用make保证了当分配内存的时候他就必然已经被管理了。而new返回的指针来构造则并不能保证这一点。这样才是异常安全的。</p><p>但make不能自定义deleter。</p><p>make中使用的完美转发也会导致()和{}的内部使用问题。</p><p>对于重载了new和delete的类不能使用make。</p><h3 id="Pimple和ptr">Pimple和ptr</h3><p>如果一个类中的成员的类型依赖于其他文件，这样就会导致依赖库的变化会导致整个的变化。</p><p>因此一般声明一个struct，并让类拥有一个指向这个struct的指针。</p><p>而这个struct的定义在cpp中实现，这样依赖就不在.h中了，大大减少了编译时间。</p><p>一般来说，这个指针用unique_ptr。</p><p>但是，不能使用默认生成的移动函数和析构函数。因为，这二者都会调用unique_ptr的delete，但是他的delete由于是一个类型参数，因此会去判断删除的类型是不是一个不完整类型，很显然，是的。</p><p>因此，二者的定义就必须延迟到struct定义完后才行，因此要在.h中声明，在.cpp中定义。</p><p>而shared_ptr就没有这个问题，因为他的删除器并不是一个模板参数。</p><h3 id="std-move和std-forward">std::move和std::forward</h3><p>实际上只是进行了类型转换。std::move是不管左值还是右值都转换为右值。</p><p>而std::forward是只有当传入为右值时才将这个左值的右值转换为右值。</p><p>然而，这种转换并没有对cv做任何操作。因此，如果原本是一个const对象，并调用了std::move并去初始化对象，调用的会是拷贝构造函数，因为const还在。</p><h3 id="通用引用">通用引用</h3><p>当带有类型推导的时候的&amp;&amp;，如auto&amp;&amp;和T&amp;&amp;都是通用引用，代表既有可能是左值也有可能是右值。</p><p>cv的出现也会让通用引用失效，如const auto&amp;&amp;就是烂的。</p><h3 id="对通用引用用forward，对右值引用用move">对通用引用用forward，对右值引用用move</h3><p>如果在一个函数中，按值返回一个右值或者通用引用的形参，那么应该对这个返回值进行forward或者move，为了使他进行的是移动而非是拷贝。因为他是一个左值引用或者对右值的左值引用。</p><p>而如果返回的是非引用变量，就不应该这么做，因为有复制消除。</p><h3 id="不要对通用引用进行重载">不要对通用引用进行重载</h3><p>有的时候，为了转发一个参数，我们使用了通用引用。然而我们对这个函数进行重载了一个版本，仅仅将这个通用引用换成了一个普通的类型，然而，调用这个函数的时候，仍然会匹配到通用引用的版本。并且，如果一个构造函数只用了通用引用的单参数函数，那么这甚至可能会抢夺拷贝构造函数的饭碗。</p><h3 id="解决方案">解决方案</h3><ol><li>使用const T&amp;</li><li>值传递，见倒数第二个点</li><li>concept限制类型来进行重载</li></ol><p>完美转发可以转发任意类型，因此，如果某种类型是非期待的，可能会由于完美转发导致到达很深的地方才产生错误，导致麻烦，因此可以在完美转发之前使用static_assert对这些情况进行更有效的错误汇报。</p><h3 id="引用折叠">引用折叠</h3><p>只有&amp;&amp; &amp;&amp;是&amp;&amp;，其他都是&amp;。</p><h3 id="移动操作的缺点">移动操作的缺点</h3><p>有的时候移动操作不一定会比普通的拷贝快多少，比如对一个数组的拷贝。</p><h3 id="完美转发不能起效的情况">完美转发不能起效的情况</h3><ol><li><p>一个Args&amp;&amp;…的模板，传入一个{…}，会被认为无法推导。</p></li><li><p>在转发的时候想转给一个指针，但是传入了0或者NULL，此时被推导为int。</p></li><li><p>对于一个static const的类成员，它是没有地址的，如果对它转发，也会烂。</p></li><li><p>转发函数的时候如果是直接通过函数名来指定函数，那么，如果这个函数名能代表多个函数，就会推导失败，无法判断是哪一个函数。普通的通过函数名来判断是因为有形参类型作为依据。</p><p>因此，要显式的指明这个函数名代表的函数对应的函数类型。</p></li><li><p>位域也不行。</p></li></ol><h3 id="不要使用默认捕获">不要使用默认捕获</h3><p>捕获的变量可能为悬空。</p><p>捕获只会对自动存储器变量进行捕获。</p><ol><li>如果是引用捕获，那么，如果离开了这个作用域而使用这个lambda，那么就会悬空。</li><li>如果是值捕获，确实没有1中的问题，但如果捕获的是指针，那么也会产生悬空。</li></ol><p>如果在成员函数中使用lambda进行捕获，除了局部变量以外，并不会捕捉到成员，即便它是可见的。使用这些成员的方式是，捕获this指针。[this]代表按引用捕获，[*this]代表按值捕获。当使用&amp;默认捕获时，会捕获。但用=时则不会捕获。</p><p>解决方法是，初始化捕获。[变量名=初始化值或&amp;变量名=初始化变量]，每个之间用,隔开，依然是引用或者值传递，但这样，就可以不限于只捕获局部变量了。</p><p>对于静态变量，是不被捕获的，如果在lambda所在作用域可见，那么在lambda中也可见，就像全局变量一样，外部的变化也会影响lambda。</p><p>这些依赖如果使用默认捕获不够明确，因此应该显式的捕获。</p><h3 id="使用初始化捕获">使用初始化捕获</h3><p>如果是不支持初始化捕获的，那么可以使用类似bind的方法来实现移动。</p><h3 id="对auto-使用decltype和forward">对auto&amp;&amp;使用decltype和forward</h3><p>一个泛型lambda可以放进任何其实例化类型的function中，只不过放入后就类型确定了。</p><p>如果要对auto&amp;&amp;捕获所得变量进行转发，由于不存在T类型，但是forward必须要指定对应类型，因此此时可以使用decltype(变量)，如果是auto&amp;&amp;… param，那么可以std::forward&lt;decltype(param)&gt;(param)…</p><h3 id="优先用lambda而非std-bind">优先用lambda而非std::bind</h3><h3 id="使用基于任务的而非线程的并行">使用基于任务的而非线程的并行</h3><p>线程就是std::thread</p><p>而任务是std::async</p><p>std::thread不会去要求其返回值，然而std::async可以通过std::future去获取他的返回值。这样也能够捕获任务的异常，而std::thread就不能。</p><p>std::thread是手动开一个线程进行跑，线程的分配是我们自己进行掌管的，然而，当负载很大的时候，我们实际上并不能非常好的进行分配，从而产生性能上的问题，不如将这个任务交给标准库，让他进行管理，通过std::async就能实现，他不一定会开一个新的线程，而是根据情况来决定，而通过策略的改变也能进行调整。</p><p>除非<strong>需要访问非常基础的线程API或者需要且能够优化应用的线程使用</strong>。</p><h3 id="如果有异步的必要则要用std-thread-async">如果有异步的必要则要用std::thread::async</h3><ul><li><code>std::async</code>的默认启动策略是异步和同步执行兼有的。</li><li>这个灵活性导致访问<code>thread_local</code>s的不确定性，隐含了任务可能不会被执行的意思，会影响调用基于超时的<code>wait</code>的程序逻辑。</li><li>如果异步执行任务非常关键，则指定<code>std::launch::async</code>。</li></ul><h3 id="保证所有线程在结束的时候是不可结合的">保证所有线程在结束的时候是不可结合的</h3><p>不可结合的包括，thread中没有包含内容，或者已经join或detach的。</p><p>如果对于一个可结合的线程隐式join或者detach都是非常恐怖的，因此，标准中如果对可结合的线程析构将会直接抛出异常。</p><p>可以使用RAII。</p><p>而在一个类中存储一个thread的时候，将thread放在最后，保证析构的异常安全。</p><h3 id="条款38，待补充">条款38，待补充</h3><h3 id="条款39，待补充">条款39，待补充</h3><h3 id="volatile和atomic">volatile和atomic</h3><p>atomic能保证操作的原子性和对代码重排顺序的限制(一种弱序关系)，而volatile不行。</p><p>volatile则用来保证对这一块内存的操作不被优化。一般来说，如果两句语句之间没什么关系，那么编译器就会进行重排优化，重排完后，可能出现很多连续对同一个变量进行冗余访问和存储，因此就会被优化。</p><p>但是对一些特殊内存，如IO接口，实际上内容一直是在变化的，那么此时这些“冗余”访问和存储就不一定是冗余的了，不能被优化。</p><h3 id="对移动成本低的且总是拷贝的形参使用值传递">对移动成本低的且总是拷贝的形参使用值传递</h3><p>一般为了处理左值和右值且高效，要重载两个函数或者使用通用引用。</p><p>然而有的时候使用值传递可能更便捷且增加不了多少开销。</p><p>值传递进来，并移动进去。</p><ol><li>不可拷贝的值传递相当于进行了构造，不可接受</li><li>移动成本低，因为会增加一次移动成本</li><li>总是拷贝，因为如果不总是拷贝，那么按理来说就不会构造一个新的变量，引用确实没有构造，然而，值传递构造了。</li></ol><p>有的时候，赋值操作会重用内存空间，但移动会增加内存申请和销毁的费用，这时候也不应该值传递。</p><p>在需要高性能的情况下，也不应该使用，因为移动的成本是不好估计的。</p><h3 id="使用emplace">使用emplace</h3><p>更快，但是要保证传入的实参是正确的</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>c++premier</title>
    <link href="/c++premier/"/>
    <url>/c++premier/</url>
    
    <content type="html"><![CDATA[<p><a href="https://lhish.github.io/hide/%E5%BC%80%E5%A7%8B">开始</a></p><p><a href="https://lhish.github.io/hide/c++%E5%9F%BA%E7%A1%80">c++基础</a></p><p><a href="https://lhish.github.io/hide/%E6%A0%87%E5%87%86%E5%BA%93">标准库</a></p><p><a href="https://lhish.github.io/hide/%E7%B1%BB%E8%AE%BE%E8%AE%A1%E8%80%85%E7%9A%84%E5%B7%A5%E5%85%B7">类设计者的工具</a></p><p><a href="https://lhish.github.io/hide/%E9%AB%98%E7%BA%A7%E4%B8%BB%E9%A2%98">高级主题</a></p><p><a href="https://lhish.github.io/hide/modern">modern</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>c++代码规范</title>
    <link href="/c++%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83/"/>
    <url>/c++%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83/</url>
    
    <content type="html"><![CDATA[<h3 id="文件后缀名">文件后缀名</h3><p>实现：.cc</p><p>声明：.h（模板声明和定义都写在.h里）</p><p>内联：.inc（不允许有-inl.h，也就是声明和定义写在一起）或者用于插入文本</p><p>实现和声明一一对应，<a href="http://xn--main-e65f98jlpbhydsuat0cha2dw1cl6bh27bp68b0xfrr5a812b8c3fxl1bfre.cc">除非如单元测试和只包含main函数的可以只有.cc</a>。</p><h3 id="目录">目录</h3><h2 id="头文件">头文件</h2><p>一个.h文件应该自给自足，其自身就应该include所有其他依赖头文件，并不要求定义任何特别symbols。</p><p>除了为模板提供实例化的模板函数需要定义在实例化改模板的.cc文件里。</p><ol><li><p><strong>define</strong></p><ul><li><p>头文件应该有#define保护来防止被多重包含，名字的格式是<PROJECT><em><PATH></em><FILE><em>H</em>，全部都要大写。</p><ul><li><p>22</p><p>2</p></li></ul></li><li><p>1</p></li><li><p><strong>使用</strong>：</p></li></ul> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">ifndef</span> 名字</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> 名字</span><br>...<br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br></code></pre></td></tr></table></figure></li><li><p><strong>前置声明</strong></p><ul><li><p>尽量避免使用前置声明。只在需要避免循环嵌套的时候使用。一般来说前置声明是用来定义一个指针，用于避免重复编译。</p><p><strong>不使用的原因</strong>：没声明关系，声明冗长，更改后跳过必要的重新编译，是不完全类型。</p></li></ul></li><li><p><strong>内联函数</strong></p><ul><li><p>只有函数少于10行且不是折构，不包含循环和switch才应该内联。虚函数一般也不内联。</p><p><strong>不使用的原因</strong>：内联大量的代码是更低效率的，折构往往实际上很长。</p></li></ul><blockquote><p>类内部的函数会自动内联。</p></blockquote></li><li><p><strong>include</strong></p><ul><li><p><strong>头文件顺序</strong>：相关头文件，C库，C++库，其他库的.h，本项目的.h。并按照字典序排序，每个大部分用空行隔开。</p><p>此处本项目的.h是指为了预留扩展性和满足接口编程的需要而引入的？。</p><p><strong>原因</strong>：为了保证本模块的问题先暴露</p></li><li><p><strong>路径格式</strong>：项目完整路径</p><p>以减少隐藏依赖</p></li><li><p><strong>包含的头文件</strong>：实现文件只需要包含.h，其他文件包含一切直接用到的名字的头文件，即便这个头文件被包含在其他头文件内，除非其他头文件明确表示会提供这个名字</p></li><li><p><strong>例外</strong>：需要特殊宏判断的可以放在最后面。</p></li></ul></li></ol><blockquote><p>YuleFox</p><p>标准化函数参数顺序可以提高可读性和易维护性(对函数参数的堆栈空间有轻微影响, 我以前大多<br>是相同类型放在一起);</p></blockquote><h2 id="作用域">作用域</h2><ol><li><p><strong>命名空间</strong></p><ul><li><p>只在局部作用域中声明命名空间别名</p><p>头文件的全局作用域中声明的命名空间别名会成为公开的，导致污染</p></li><li><p>禁止使用using指示</p><p>污染空间</p></li><li><p>禁止使用内联命名空间</p><p>内联命名空间一般用于大型版本控制，保持跨版本的ABI兼容性，也就是通过内联新版本的一些函数来代替旧版本的函数但是旧版本的函数仍然是可用的。</p></li><li><p>不再std中声明任何东西</p><p>是未定义的行为，会导致不可移植性</p></li></ul><p><strong>格式</strong>：</p><ul><li><p>除了gflags(谷歌的写的一个更方便在命令行给程序传入参数的库)，头文件和类的前置声明以外的所有部分都应该被包含于一个命名空间中。命名空间内部内容不因为命名空间而缩进。</p></li><li><p>在命名空间右大括号后注释上namespace name(会自动补全)</p><p>在插入新函数时能更快确定作用域</p></li><li><p>命名空间的命名可以根据绝对或相对路径</p></li></ul></li><li><p><strong>匿名命名空间和静态变量</strong></p><ul><li><p>在.cc中定义不需要被外部引用的对象时，建议使用匿名命名空间或声明为static。但不要在.h中使用。</p><p>这二者都能使对象具有内部连接性，也就是这个对象的名字只能在本文件被访问。</p></li></ul></li><li><p><strong>非成员函数、静态成员函数和全局函数</strong></p><ul><li><p>尽量不要用裸的全局函数，尽量单独形成编译单元</p><p>污染命名空间</p></li><li><p>静态成员函数应该与静态数据成员高度相关，不要用来当做限定作用域的非成员函数</p></li><li><p>非成员函数，不依赖于外部变量，应该被放于命名空间中</p><p>避免污染</p></li><li><p>当一个静态成员函数被超过一个编译单元(cpp文件)所使用，可以考虑将其提取到新类中。</p><p>避免耦合和依赖。</p></li></ul></li><li><p><strong>局部变量</strong></p><ul><li><p>局部变量限定于最小可能的作用域内，并在变量声明时进行初始化。if，while，for语句中需要的变量就在语句中声明即可，并且会在语句的作用域内可用。</p><p>更易于理解。</p></li><li><p>例外：如果变量是一个对象，并且每次进出作用域都要调用折构和构造函数，那么不如定义在外层。</p><p>省时间</p></li></ul></li><li><p><strong>静态和全局变量</strong></p><ul><li><p>对于静态存储周期的变量，只允许定义POD变量，并且不允许用使用了静态存储周期变量的函数来初始化它，除非变量是constexpr的。</p><p>静态存储周期是指程序或者多线程开始时生成，程序结束时销毁的变量。包括全局变量，静态变量，静态类成员变量和函数静态变量。</p><p>POD是指plain old data，是指不使用构造和折构函数的变量。</p><p>由于初始化过程的顺序是未定义的，所以在程序开始初始化和程序结束折构的时候会出问题。</p></li><li><p>如果一定想要用一个非POD类型的静态存储周期的变量，可以在main或者pthread_once中初始化一个指针并永不回收，且不能用智能指针，因为它也是非POD的。</p></li></ul></li></ol><h2 id="类">类</h2><ol><li><p><strong>构造函数的职责</strong></p><ul><li><p>构造函数不允许调用虚函数。</p><p>构造函数中的虚函数并不会真正的调用虚函数。</p></li><li><p>如果构造函数出错，那么建议直接终止程序。否则应该用init()或者工厂函数来构造。</p><p>因为错误处理被禁用了。因此并没有一个好的处理构造函数出错的解决方法。构造函数一旦出错，如果不报错，那就很难检查出这个呗构造出的对象是否正常。</p></li></ul></li><li><p><strong>隐式类型转换</strong></p><ul><li><p>类型转换运算符和单参数构造函数都应当被标记为explicit。</p><p>可能会在无意识中发生隐式类型转换。</p><p>函数重载并不知道调用的是哪一个函数。</p></li><li><p>拷贝和移动构造函数不应该被标记为explicit。</p><p>因为拷贝和移动构造函数本身就不进行类型转换。</p></li><li><p>不以一个参数进行调用的构造函数不应加explicit，如列表初始化？。</p></li></ul></li><li><p><strong>可拷贝类型和可移动类型</strong></p><ul><li><p>如果一个类型不是很显然要拷贝移动操作的，就不要设置为可拷贝移动的。</p><p>因为拷贝构造函数是隐式调用的，调用容易被忽略。</p></li><li><p>如果定义了拷贝操作，那么就应该定义移动操作。</p><p>移动操作拷贝临时的对象，那么也能拷贝非临时对象。并且效率更高。</p></li><li><p>如果不定义拷贝移动操作，那么就应该定义为删除(=delete)的。</p><p>避免使用时无意识的隐式调用。</p><p>使用delete时，若是拷贝操作被delete了，那么编译器也不会自动合成移动操作。</p></li><li><p>一旦定义，那么就应该是两个为1组出现的。</p><p>赋值与构造。</p></li><li><p>不要给可能有派生类的基类定义拷贝移动操作，如有需要，应提供一个clone来解决。</p><p>给基类定义拷贝移动操作可能会产生切割。</p></li></ul></li><li><p><strong>结构体与类</strong></p><ul><li><p>当且仅当只有数据成员时用struct，其他都用class。</p><p>一般struct都是直接访问位域的，也就是直接通过点运算符，而class则通过函数。如果提供了用于设定数据成员的函数外的函数，那么就应该用class。</p></li><li><p>仿函数可以用struct。</p><p>与STL保持一致。</p></li></ul></li><li><p><strong>继承</strong></p><p>组合&gt;实现继承&gt;接口继承&gt;私有继承</p><ul><li><p>所有继承都必须是public的。</p><p>其他继承为什么不用组合来代替。</p></li><li><p>只有关系是is的时候使用继承，其他时候使用组合。</p><p>只有is才是一种继承关系，has就是组合关系了。</p></li><li><p>如果类有虚函数，那么折构函数也应该是虚函数。</p><p>显然，因为这个子类是虚的，得要避免基类指针只调用基类的折构函数。</p></li><li><p>对于所有的重载函数都要用override标注。</p><p>显式表明这是虚函数。</p></li><li><p>只有对一定会被子类访问的成员函数设置为protected。</p><p>封装。</p></li></ul></li><li><p><strong>多重继承</strong></p><ul><li><p>只允许在最多一个基类是非抽象类其他基类都是以Interface为后缀的纯接口类时使用多重继承。</p><p>一般都有别的可以来替代多重继承的方法。</p></li></ul></li><li><p><strong>接口</strong></p><ul><li><p>接口类应该以Interface为后缀。</p><p>用以提醒这是接口类。</p><p>一个纯接口必须满足：</p><ol><li>只有纯虚函数和静态函数</li><li>没有非静态数据成员</li><li>没有定义任何构造函数</li><li>如果要继承，也只能从纯接口类继承</li><li>折构函数没必要是纯虚函数</li></ol></li></ul></li><li><p><strong>运算符重载</strong></p><ul><li><p>只有在符号意义明确与内建运算符行为一致时才重载。</p><p>重载本身就可能会出问题。如果意义与通常的约定不符时会难以理解。</p></li><li><p>只对自己定义的类型进行重载运算符，并将其定义在同一个空间中。</p><p>不去影响内建运算符的含义，并且在何处都能使用这个运算符而不出错，并且避免了多重定义。</p></li><li><p>当定义了一个运算符，就应该将相关的运算符都重载。</p><p>保证语义一致，不冲突。</p></li><li><p>不要将不进行修改的二元运算符定义为成员函数。</p><p>不然就会只对第二个参数进行隐式转换。</p></li><li><p>不要强行去重载。</p><p>如当一个类型不具备自然顺序，但我们希望将其放入set中，那么应该自定义一个比较运算符，而不是重载我们常用的&lt;运算符。避免给它加上不必要的含义。</p></li><li><p>不要重载&amp;&amp;，||和一元运算符&amp;，也不要重载operator””。</p></li><li><p>更不要重载运算符模板。</p><p>除非适配了所有可能性。</p></li></ul></li><li><p><strong>存取控制</strong></p><ul><li><p>所有数据成员都声明为private，除非是static const的。</p><p>封装。</p></li><li><p>存取函数一般内联。</p><p>存取函数就是存取这些私有数据成员的函数。</p></li></ul></li><li><p><strong>声明顺序</strong></p><ul><li><p>按public,protected,private的顺序，没有空行。</p></li><li><p>在每个部分中按类型，常量，工厂函数，构造函数，赋值运算符，折构函数，其他函数，数据成员的顺序排。</p></li><li><p>只将性能关键且短小的函数内联。</p></li></ul></li></ol><blockquote><p>函数体应短小且功能单一。</p></blockquote><h2 id="函数">函数</h2><ol><li><p><strong>输入和输出</strong></p><ul><li><p>返回值和输出参数相比，返回值更好。</p><p>输出参数就是通过引用的方式来在函数内部进行更改，进行“输出”。</p><p>返回值更加直观，可读性更好且性能更好？</p></li><li><p>输入参数用值传递或者const引用，其中超出生命周期的要用值传递。</p><p>对于超出生命周期的对象进行const引用会访问不存在的对象。</p></li><li><p>可选参数中值传递用std::optional，其他可选输入用const指针，可选输出用指针。</p><p>std::optional就是使一个类型可以为空。</p><p>其他使用指针是因为指针可以为空指针。</p></li><li><p>将所有输入参数放在输出参数之前。</p><p>可读性。</p></li></ul></li><li><p><strong>编写简短函数</strong></p><ul><li><p>建议所有函数都不要超过40行，若超过40行，应将其分割为多个小函数。</p><p>更加易于管理与调试。</p></li></ul></li><li><p><strong>引用参数</strong></p><ul><li><p>输入参数如果是引用必须是const的，(输出参数一般为指针)。</p><p>防止更改。另外实际上我们要的输入都是值输入，而引用就是有着指针属性的值输入。</p></li><li><p>有的时候输入参数可以使const指针，除非const指针比const引用更明智。</p><p>如在可能传递空指针或者传递的是地址的时候就应该使用const指针。</p></li></ul></li><li><p><strong>函数重载</strong></p><ul><li><p>除非使用者能很容易分辨重载函数调用的是哪一个重载函数，否则不要重载。</p><p>在函数名中加上参数信息或者使用初始化列表来解决同一类型的多个参数。</p></li></ul></li><li><p><strong>缺省参数(默认参数)(尽可能避免使用)</strong></p><ul><li><p>虚函数不许用缺省参数。</p><p>虚函数的缺省参数值取决于静态类型。</p></li><li><p>如果缺省参数的值在变化，也不要用缺省参数。</p><p>不仅用户会疑惑，缺省参数的值在每个调用点都会展开一次声明，然后就导致代码臃肿。</p></li><li><p>如果要用函数指针，那么也不要用默认参数，去用重载函数。</p><p>函数指针无法使用默认参数，且加上默认参数后地址也会变。</p></li><li><p>缺省参数实际上也是一种重载函数，全部都可以使用重载函数代替。</p></li><li><p>限制于局部文件的地方和构造函数可以使用。</p><p>一般不会去获取地址。</p></li></ul></li><li><p><strong>后置返回语法</strong></p><ul><li>只在后置返回语法能大幅度提升可读性时或者在使用lambda的时候使用。</li></ul></li></ol><h2 id="Google的奇技">Google的奇技</h2><ol><li><p><strong>所有权</strong></p><ul><li><p>如果用动态分配的内存，那么就应该使用unique_ptr来明确所有权和所有所有权的传递。</p><p>明确所有权，方便释放。</p></li><li><p>当且仅当拷贝的开销很大并且操作的对象不可变的时候可以使用shared_ptr共享所有权。</p><p>拷贝的开销实际上不是很大，所有权一旦共享，可能就搞不清所有权了，并且共享所有权的运行开销很大。</p></li></ul></li><li><p><strong>cpplint</strong></p><p>用于检测风格错误的一个py文件。</p></li></ol><h2 id="其他C-特性">其他C++特性</h2><ol><li><p><strong>右值引用</strong></p><ul><li><p>只在移动构造函数和移动拷贝函数时使用右值引用。</p><p>可以很大提高效率。</p></li><li><p>不要使用std::forward。</p><p>太新了？，虽然完美转发需要std::forward。</p></li></ul></li><li><p><strong>友元</strong></p><ul><li><p>一般友元定义在同一文件内，一般工厂类和单元测试会被声明为友元。</p><p>仍然保持着封装性。</p></li></ul></li><li><p><strong>异常</strong></p><ul><li><p>异常肯定是优于错误码的，适当的<strong>正确的</strong>使用异常时可行的。</p><p>但是google禁用异常，大概率是因为历史包袱。</p></li></ul></li><li><p><strong>RTTI</strong></p><ul><li><p>RTTI可以进行合理的使用，可以在单元测试中使用。一般都有替代方案，虚函数和dynamic_cast(能保证基类对象都是指向同一派生类)。</p><p>使用RTTI本身就表明设计是有问题的，且难以维护。</p></li></ul></li><li><p><strong>类型转换</strong></p><ul><li><p>使用c++的类型转换。</p><p>const_cast去const。</p><p>static_cast：值转换或者类指针向上转为基类指针。</p><p>reinterpret_cast进行不安全的相互转换。</p><p>dynamic_cast见上。</p></li></ul></li><li><p><strong>流</strong></p><ul><li><p>只在日志的时候使用流，其他时候都使用printf和read/write。</p><p>流可读性差，格式化慢，并且在输出时不容易关注到输出类型，导致错误。</p></li></ul></li><li><p><strong>自增自减</strong></p><ul><li><p>使用前置自增自减</p><p>后置自增自减会产生一次拷贝，运行效率低。</p></li></ul></li><li><p><strong>const</strong></p><ul><li><p>在任何可能用的地方用const，使用时前置加一个const即可，不需对于部分都加一个定语。</p><p>提供一层保护，对程序员自己的保护。</p></li></ul></li><li><p><strong>constexpr</strong></p><ul><li><p>在定义真.常量(运行和编译时都保持不变)的时候使用，或者在给常量初始化时使用。</p><p>提高效率。</p></li></ul></li><li><p><strong>整型</strong></p><ul><li><p>内建类型的整型只用int，并且只认为它至少32位，但不多于32位。</p><p>int是最常用的。</p></li><li><p>其他应该使用如int16_t或者int64_t，而不应该使用long long或者short等。</p><p>在不同的平台上位数可能不同。</p></li><li><p>只在位域的时候使用无符号整数，用断言来处理无符号整数。</p><p>无符号整数会导致很多抽象的bug。</p></li><li><p>专门的类型就用专门的类型别名，如size_t和ptrdiff_t。</p><p>在不同的环境下也会随之发生改变。</p></li><li><p>宁愿更大，不要更小。</p><p>避免溢出。</p></li></ul></li><li><p><strong>64位下的可移植性</strong></p><p>评价是不懂</p></li><li><p><strong>预处理宏</strong></p><ul><li><p>尽量少用宏，可以用内联，枚举或常量取代。</p><p>宏很复杂。</p></li><li><p>防止重包含是例外。</p></li><li><p>除非有的地方其他实现不了，只有宏能行。</p></li></ul></li><li><p><strong>零赋值</strong></p><ul><li><p>字符串用’\0’，指针用nullptr，整数用0，实数用0.0。</p><p>sizeof(NULL)和sizeof(0)还是不一样的。</p></li></ul></li><li><p><strong>sizeof</strong></p><ul><li><p>尽可能使用sizeof(变量)而非sizeof(类型)。</p><p>使得变量即便类型改变也不会出问题。</p></li></ul></li><li><p><strong>auto</strong></p><ul><li><p>只在局部变量和尾置返回一起使用。</p><p>还是为了易读性。在文件作用域，命名空间作用域和类数据成员都不要用auto，要显式指明。</p></li></ul></li><li><p><strong>列表初始化</strong></p><ul><li>评价是非常好用，只不过不要用来给auto赋值，除非你想创建一个initializer_list。</li></ul></li><li><p><strong>Lambda</strong></p><ul><li><p>可以适度按格式使用lambda。</p><p>很好用。</p></li><li><p>捕获列表要写完整，最好显式写出返回类型。</p><p>可读性好。</p></li><li><p>lambda应该简短，不超过5行。</p><p>否则不如创建一个函数。</p></li></ul></li><li><p><strong>模板编程</strong></p><ul><li><p>减小模板的复杂性，并减少暴露在外的模板。</p><p>模板本身的维护成本可能就超过了模板使用的简便性。</p></li></ul></li><li><p><strong>Boost库</strong></p><p>里面很多库都很好，可以学习。</p></li></ol><h2 id="命名规则">命名规则</h2><ol><li><p><strong>通用命名规则</strong></p><ul><li>使用描述性的命名，少用缩写。</li></ul></li><li><p><strong>文件命名规则</strong></p><ul><li>使用下划线分割，详细。</li></ul></li><li><p><strong>类型命名规则</strong></p><ul><li>类型名称的每个单词的首字母要大写，不用下划线。</li></ul></li><li><p><strong>变量命名规则</strong></p><ul><li>普通变量和结构体成员变量全小写并用_隔开，而类的成员变量在结尾需要再加一个_。</li></ul></li><li><p><strong>常量命名规则</strong></p><ul><li><p>常量的每个单词的首字母大写，不用下划线，在最前面加上k。</p></li><li><p>全局变量和静态变量也应该遵循这个命名规则。</p></li></ul></li><li><p><strong>函数命名规则</strong></p><ul><li><p>对于取值和设值函数，一般是与变量名匹配，设值会加一个set_。</p></li><li><p>对于其他函数，每个单词首字母大写没下划线。</p></li></ul></li><li><p><strong>命名空间规则</strong></p><ul><li>全小写字母，无下划线，注意不要冲突。</li></ul></li><li><p><strong>枚举类型规则</strong></p><ul><li>类型名按照类型。其中每个元素的命名按照常量或者宏的方式。</li></ul></li><li><p><strong>宏命名规则</strong></p><ul><li>全部大写，用下划线分割。</li></ul></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>c++多线程</title>
    <link href="/c++%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    <url>/c++%E5%A4%9A%E7%BA%BF%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<p>当thread不持有线程的时候，get_id返回0x0.</p><p>thread.joinable只要thread持有线程，那么就是true，无论线程是否结束</p><p>如果在joinable的情况下调用析构，那么就会调用std::terminate终结程序。</p><p>实际上thread只是一个包装，真正的线程是里面的线程句柄，native_handle，也就是要用pthread库来处理的对象，可以通过native_handle()获取句柄。</p><p>里面的这个pthread_t的类型中会存储线程的数据啊，比如调用对象，参数之类的。<br><code>std::thread::hardware_concurrency()返回硬件支持的并行度</code></p><p>thread本身不是atomic的，不能同时有多个线程同时调用它的join，一方面可能导致二次调用，一方面可能造成数据竞争</p><p>但detach之后,thread这个包装器也就不再管理这个线程句柄了，线程句柄的资源会在它自己结束的时候自己释放。并且在detach之后它就空，get_id为0，joinable为false。而如果不detach，那么即便线程结束了，它的资源也不会被释放，直到.join被调用。</p><p>thread的构造函数第一个参数时fun，后面就是它对应的args，当且仅当匹配的时候不会报错。也因此在创建的时候它就开始运行了。</p><p>正常的thread在析构的时候如果还在运行就会调用std::terminate，而jthread则会在析构的时候先调用stop_request再调用join，结束后才停止。这里之所以要增加一个stop_request是为了告诉那个线程该停止了，因此你该做些操作别再运行了，而如果没有的话，可能thread就一直搁这运行，然后我想要join，就永远卡在join这里了。因此，就需要一个共享变量，让我能够在这个线程就告诉jthread该停止了。因此jthread还维护了一个std::stop_source。</p><p>这里要提到三个东西，一个是停止状态，也就是真正的那个用来表示当前是否被要求停止的atomic<bool>（也可能本身并不是atomic的），一个是std::stop_token，是一个包装着停止状态的观察器，它对于停止状态的权限是只读的，另一个是std::stop_source，也是包装器，但是对于停止状态是可读可写的，之所以需要这两个包装器，就是为了让对于这个可能不atomic的bool的操作是线程安全的，当读的时候，<a href="https://www.notion.so/stop_source/stop_possible.html"><strong>stop_possible</strong></a>如果包装器里面有对于停止状态的引用，那么就是true，否则false,stop_requested则是是否已经调用了request_stop。而以上的这些操作虽然可能不是atomic的，但是是线程安全的，可以随意的多次调用，而不会有任何问题。</p><p>而为了让jthread线程运行的函数能够使用这个停止状态，线程运行的函数的参数的第一个可以是一个std::stop_token，而jthread具体去运行的时候也是fun(stop_source.get_stop_token()，args…)，因此函数就可以去使用这个stop_token了。通过stop_requested来判断是否呗要求停止并做出相关操作。</p><p>这些停止操作被称为协作式取消。而除了上述的停止源和停止令牌以外，还有停止回调，就是停止后要被调用的函数，在请求request_stop的线程上调用。但要求它的生命周期一定要到request_stop之后结束。否则就不会调用。</p><p>用get_id可以获取当前调用get_id的线程的id，即当前正在运行的线程。</p><p>yield可以让操作系统对于线程重新调度，暂时不要调度自己，但具体行为依赖于操作系统，所以不常用。感觉不如this_thread.sleep_for/until</p><p>伪共享：一般缓存都是按一行去管理和处理的，例如一起缓存一行啊之类的。但是，既然是缓存，就有可能脏，那么就需要与其他数据去同步，而如果此时也有另一线程同样在处理这一缓存行，就烂完了。因为，线程运行在不同核心上，每个核心都有自己的缓存，而如果发现有竞争，他们就会竞争这一缓存行的所有权，并影响到更加靠后的更加慢的缓存。然后就导致速度大幅下降。但有的时候，他们实际上竞争的不是同一个数据，而只是恰好储存在统一缓存行的不同的数据。而这就是伪共享，也就是这两个变量实际上都不是同时被两个线程共享的。因此我们可以在写的时候就让他们间距超过一个缓存行，让他们处于不同缓存行上就可以了。而如果发现有一些变量确实是真的被共享的，也可以将他们放在同一个缓存行上。</p><p><strong>std::hardware_destructive_interference_size, std::hardware_constructive_interference_size</strong></p><p>这两个函数就是用来获取避免假数据共享的最小偏移和鼓励真共享的最大连续内存大小。</p><p>内存顺序。由于多核和缓存的存在，实际上读数据的时候并不是统一的读的，也不知道会从哪个随机的可以读的地方读，就导致当操作同一元素的时候就会导致看到的情况和真实情况不一致的问题。因此需要引入内存顺序规定顺序以简化。</p><p>有多种原因会导致，编译器重排，cpu重排，多线程，缓存等等都会。但是这在语言层面上并不重要，语言层面讲这些统一称为可见性。即，我所进行的更改你看不看的到。</p><p>现在主流的总共有3种，relaxed，即什么都不保证。acquire和release，acquire的效果是该load之后的所有读写不能放到本操作之前，并保证此原子变量在其他线程所有的释放操作在此之后必可见。release就是保证之前的读写不能重排到本操作后，并保证本操作之前的所有操作对加载本原子的可见。acl_rel就是同时有这两点，又读又写。最后是seq_cst，也就是*序列一致定序。*前面的获取释放已经很强了，但是呢，它只保证关于这个原子数据的操作，只保证这一对读写之间的可见性。但如果涉及到多个原子变量，并有多个线程进行不同的load，它的可见性就不一定在各个线程中保持相同了，可能第一个先acq A，然后B，第二个先acq B，然后A，那么对于他们来说，对于A和B是什么时候写的就不是同步的了，而seq_cst则能保证他们一定会被排成一个序，对于所有线程都一样可见，但性能较低。</p><p>原子变量只保证，它的读写是原子的，至于原子之间的，多线程读写，原子与非原子的这些全部由内存顺序决定，当使用原子操作而不带参数的时候默认是<em>序列一致定序。</em></p><p>atomic，所有操作均原子，不存在数据竞争。除去ptr和shared/weak_ptr之外，只有能够平凡拷贝且可移动的能够用atomic。</p><p>atomic之间不能拷贝移动，但能将非atomic复制过来。</p><p>但是它的原子实现有可能是使用锁，也有可能是使用指令集提供的原子内存操作。一般来说标准的大小合适（比如小于8字节）的内存对齐的类型就会使用原子内存操作，也就是无锁的，非常高效。但如果是使用锁的，可能比显式使用mutex的性能还烂。而这在不同的平台上是不同的。因此c++也提供<strong>is_lock_free函数来查询。</strong></p><p>一般总是有几个类型是免锁的，但是不知道是哪个，可以用is_always_lock_free或者atomic_signed_lock_free和atomic_unsigned_lock_free来判断或者获取。</p><p>atomic的=等价于store函数。</p><p>取值load。</p><p>交换exchange。</p><p><strong>compare_exchange_weak/strong</strong> ，比较，如果相等就交换为desired，否则让expected为不相等的值（这是为了保证原子性）并返回false。就是CAS在c++层的封装。</p><p>weak和strong的区别是strong会要求独占，所以会性能较烂。而weak不要求，但可能会出现假性失败，也就是即便是相等，也可能返回false。</p><p>当我们一定希望它最终能出现true返回的时候，也就是一定要替换成功的时候，比如在实现无锁的时候的赋值的时候，我需要同时更改head和head.next的时候，并且希望它是原子的，就需要用weak来while。而如果只是想判断一下它是多少，那么就只会调用一次，那么就使用strong，因为weak完全不知道什么时候是真正的失败，并且相较于load了之后再==，这样是原子的。</p><p>wait(old)，如果与old相等就开始阻塞，直到被唤醒。</p><p>notify_one和notify_all</p><p>fetch_add,fetch_sub,fetch_max(用自己和给的中大的替换自己)，fetch_min，还有一些逻辑运算。</p><p>不包括其他的四则运算。</p><p>atomic_ref对于一个非原子已存在对象提供一个原子视图的引用，但如果一个对象呗atomic_ref引用的状态下，就只能通过ref来访问而不能去使用对象本身。</p><p>atomic_flag实际上类似于atomic<bool>，但是一定是免锁的，不提供拷贝。默认false，使用clear(设置为false)，test(load)，test_and_set(设置为true，并返回原本存储的值，通过判断返回值来判断有没有成功，如果返回false，那就是成功了，如果返回true，那就是没成功)来操作。</p><p>永远都不应该在用户空间自己实现自旋锁，因为，用户空间即便是在锁的状态下也是会被操作系统调度的。只有内核空间能够做到完全自旋，而不被抢占。</p><p><strong>atomic_thread_fence</strong>不跟具体的原子绑定，它所处理的是所有非原子和relaxed原子操作的内存序。它寻找它之后的release或者它之前的acquire作为一个间接节点，让自己之前或者之后的操作先于或者后于这个间接节点对应操作前或后的所有操作。</p><p>但按照网上的说法它和原子操作的内存序有点区别。原子操作的release不允许之前的读写排到它之后，但允许后面的排到之前，而fence不允许，反之依然。</p><p>但实际上一般不太会需要使用atomic_thread_fence，用atomic和mutex就够了。</p><p>总结而言，多线程这个东西，编写起来主要有两个问题。一个是每个线程都是按顺序执行的情况下的，如何保证其中不同线程之间的执行顺序的同步。另一个是，无论是cache还是编译器，cpu导致的最终看起来好像产生了指令重排一样（无论是单个线程的指令重排还是不同线程之间的重排不同，即内存操作序列不同），这些可能会导致问题。而mutex，atomic和memory_order也有一部分是为了解决这一问题。正是因为多线程，因此就导致最终运行的程序无法知道自己具体的情况，就不能好好的完美无缺的最快的运行，因此要我们去指引顺序。一般来说就是谁必须在谁之前执行完毕，也就是release和acquire，release是前面的不能往后移动，而acquire是后面的不能往前移动，barriar则是双向的。</p><p>mutex，不应该在被持有的状态下销毁或终止或析构</p><p>lock：如果没有人持有，就acquire，否则阻塞，不能本线程在持有时调用</p><p>try_lock：如果没有人持有，就acquire，并返回true，否则false</p><p>unlock：必须是在本线程持有lock的时候</p><p>timed_mutex，多提供两个函数，try_lock_for/until，让其在一段时间内尝试获取，没获取到就false</p><p>recursive_mutex，能够被同一线程多次锁定，但也要同样次数的unlock</p><p>recursive_timed_mutex</p><p>shared_mutex，共享锁，对于三个基本函数额外提供shared版本</p><p>shared_timed_mutex</p><p>lock_guard，RAII，构造时lock，析构时unlock，提供作用域内的关键段。</p><p>scoped_lock，类似于lock_guard，但可以同时对多个mutex acquire，并且可以避免死锁。</p><p>实际上是std::lock的RAII版本，做到避免死锁的方法是如果不能一次性全锁定成功，就全部回退并阻塞。</p><p>std::try_lock，也是锁多个，检查一个锁一个，碰到第一个不能锁的就开始反过来一个一个解锁并返回false。</p><p>std::call_once(std::once_flag(一个专用的类型，保证对于同一个once_flag的所有call_once只会被call一次)，fun, args…)如果返回异常则立即抛出且这次不算。</p><p>接着是最常用的，unique_lock，只能移动，若只传入mutex则类似guard，构造锁定，如果同时还传入策略，那么defer则不锁，try尝试，adopt假设已经上锁，还可以传入时间和时间点构造timed。析构时解锁，但是会判断自己是否关联并持有mutex。</p><p>除了3个函数和timed函数，还有swap交换看，release不关联但不处理锁的状态，operator bool和owns_lock来判断是否lock状态。</p><p>实际上是lock的RAII。</p><p>因此还有shared_lock对应shared_lock的RAII。</p><p>条件变量可能会被虚假唤醒，虚假唤醒就是被唤醒的时候发现条件还没有满足。有三种说法，一种说是广播了，因此，可能被唤醒的时候已经有别的线程事先抢占进行了更改，一种是在就绪和被调度期间被其他线程导致条件失败，另一种说是为了效率系统层面上就允许即便条件没有满足wait也可能返回。</p><p>当cv开始wait的时候unlock mutex，即允许其他线程持有这个mutex做些事情比如改变条件变量，而其他线程则必须要在持有锁的情况下更改条件变量相关的变量，无论是否原子，并在结束后unlock并notify，wait就会检查条件是否满足，如果满足就获取锁并不再wait。</p><p>notify_one执行完的瞬间我们可以假设所有wait的其中一个已经获得了锁。</p><p>conditional_variable_any，不止可以用于unique_lock，也可以是shared_lock</p><p>当退出线程时如果还持有锁，那么就是未定义的。因此可以<strong>notify_all_at_thread_exit</strong>来保证到线程结束的时候，都持有着锁的状态，然后销毁thread_local，unlock并notify_all。</p><p>信号量提供一个更简单的条件变量，只有数字增减，性能比条件变量高。通过acquire来使数字-1，如果为0了，那么就阻塞，release来增加数字。无需notify。<strong>counting_semaphore&lt;最大值&gt;</strong></p><p>屏障，一次性屏障latch，构造时设定初始值，count_down-1单不阻塞，wait阻塞直到为0，try_wait判断是否为0不阻塞，arrive_and_wait，count_down+wait。</p><p>barriar，可重用屏障。构造时设定初始值和on_completion要执行的函数，当为0时运行completion函数并重置计数。</p><p>上述都是自己要手动开一个线程去跑任务，但有的时候我只是希望它新开一个线程自己跑然后最后给我结果就行了。因此就出现了promise和future。</p><p>promise和future是一对相关的对象，一般先创建promise，然后从中获取对应的future。</p><p>将promise传给线程函数，通过set_value/exception(_at_thread_exit)就可以设定异步的返回值。而future可以通过get进行获取，如果还没有设定，就会阻塞。</p><p>packaged_task就是把函数直接打包进promise里了，return就是set_value，而exception也会自动设置。</p><p>future本身是只可以移动的，不能共享，而shared_future就是可以复制的，可以共享。</p><p>async就是将启动函数的这一步也直接打包了，直接返回一个future。</p><p>并可以在构造时设定启动参数，async策略就是立即异步执行，defer就是get的时候再执行。</p><p>future只能get一次，promise也只能set一次，当出现第二次的时候就会报错future_already_retrieved和promise_already_satisfied，而如果是空构造的future，去调用get就会返回no_state，promise也可以显式表示自己无法完成promise，抛出broken_promise。当抛出错误的时候，会存储在future中，但get的时候会被rethrow。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>gcc_std</title>
    <link href="/gcc_std/"/>
    <url>/gcc_std/</url>
    
    <content type="html"><![CDATA[<p><a href="https://lhish.github.io/hide/type_traits">type_traits</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>cmake</title>
    <link href="/cmake/"/>
    <url>/cmake/</url>
    
    <content type="html"><![CDATA[<ol><li><p>set的变量可以在程序中的宏中使用</p></li><li><p>add_library.</p><ol><li>shared：生成.so或.dll文件，不嵌入代码，在使用时会根据.h来进行查找</li><li>static：直接将相关代码嵌入任何需要的地方，非常冗余，但很完整</li><li>interface：接口库，不单独生成库，只是作为接口给其他库使用</li></ol><p>后面只跟随相关源文件</p></li><li><p>target_link_libraries，属性一般与target_include_directories保持一致</p><ol><li>如果是public，则这个库可以被该库和依赖于该库的其他所有的使用</li><li>如果是private，则只能被当前这个文件夹的其他文件所使用，在这种情况下也就不用提供头文件</li><li>如果是interface，则当前文件夹不使用，但可以被其他的使用，一般用于设定一些设置或者全是头文件的情况下，或者该文件夹下不互相调用</li></ol></li><li><p>target_include_directories(要被连接到的库 方式 库)（指定头文件）</p><ol><li>private：自身要include，依赖于该库的不需要include这些</li><li>public：自身要include，依赖于该库的需要include这些</li><li>interface：自身不要include，依赖于该库的需要include这些</li></ol></li><li><p>add_subdirectory(…)</p><p>生成的时候会按这个顺序，但是编译的时候则不会，会根据依赖的关系</p><p>添加子文件夹，并处理子文件夹中的cmakelists，但是cmake中的依赖关系并不是上依赖于下的，也可以下依赖于上，也就是library是可以被子文件夹所使用的，一切看target_link_library。</p></li><li><p>if(…)</p><p>elseif(…)</p><p>endif()</p><p>matches即=</p></li><li><p>option(name description default)</p><p>和set差不多，但是可以在cmake的option中直接调整</p></li><li><p>include(某个cmake文件)相当于将该文件中的内容复制过来</p></li><li><p>add_custom_command相当于用命令行运行某条命令</p><p>output</p><p>command</p><p>depends</p></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>B-树</title>
    <link href="/B-%E6%A0%91/"/>
    <url>/B-%E6%A0%91/</url>
    
    <content type="html"><![CDATA[<p>B树是一种类似于红黑树的树，但并非是二叉树，是多叉树，假设一个节点有n个孩子，那么，该节点将存储n-1个关键字，这些关键字就是孩子们之间的分割线，通过比对这n-1个关键字，即可知道数据是在哪个孩子里面。</p><p>由于机械硬盘的随机读取速度非常慢，故希望能在一次读取中读取多个数据，B树就可以优化读取的这一部分，即IO部分。另外，为了保证少读取几次，要使得B树的高度尽可能小。</p><p>在电脑中，主存的大小一般小于磁盘大小。对于存储在硬盘上的一棵超大的B树，需要分次读取。一般来说，这颗B树的每一个节点的大小应和主存大小差不多，使得能够最大的减少B树的高度。此处的读取是连续读取。</p><blockquote><p>每一个节点内部是否可以用链表？</p></blockquote><h3 id="卫星数据">卫星数据</h3><p>一般来说，所有对数据的整体操作，都会依赖于关键字，数据依附于关键字而存在，故被称为卫星数据。</p><h3 id="节点属性">节点属性</h3><ol><li>关键字的个数</li><li>关键字</li><li>关键字的指针</li><li>是否是叶节点</li></ol><h3 id="重要性质">重要性质</h3><p>存在一个最小度数t，使得除根节点外的节点的子节点个数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>≥</mo><mi>t</mi><mo>−</mo><mn>1</mn><mtext>且</mtext><mi>n</mi><mo>≤</mo><mn>2</mn><mi>t</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n\ge t-1且n\le 2t-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6984em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mord cjk_fallback">且</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>。</p><h3 id="高度">高度</h3><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo>≤</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>t</mi></msub><mfrac><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">h\le log_t\frac{n-1}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.136em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><h3 id="搜索">搜索</h3><ul><li>B树的根结点始终在主存中，这样无需对根做DISK-READ操作；然而，当根结点被改<br>变后，需要对根结点做一次DISK-WRITE操作。</li><li>任何被当做参数的结点在被传递之前，都要对它们先做一次DISK-READ操作。</li></ul><blockquote><p>并不知道第二条约定是为什么而存在</p></blockquote><p>和二叉搜索树差不多，每到一个节点遍历关键字，继续向下，直到存在或者说是叶节点。</p><h3 id="插入">插入</h3><p>但首先需要特殊创建一个叶节点来作为根节点。</p><p>接着，插入时B树并不像其他的树一样建立一个新的节点，不然就违反B树的性质了。B树扩张的方式是分裂节点，正如前所述，B树的节点是有一个最大的子节点数上限的，当一个节点到了这个上限，就会将其split成两个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">t-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6984em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>大小的节点，而其父节点的关键字也会+1。然而其父节点也可能会因为这+1而需要分裂，因此分裂的操作会在插入的时候自上而下的进行，以保证被分裂的节点的父节点并不是满的。</p><p>但是，可以发现的是，虽然分裂操作能够扩张树，但是只能水平的进行扩张，但这样还是会到极限的。此时，我们可以去思考一下，在什么样的情况下，我们会认为当前的B树快满了，需要进行纵向的扩张呢？</p><p>就是在根节点满的时候。当根节点满的时候，虽然还有一些空位，但也表明需要扩张了。有趣的是，B数的扩张并不是向下的，而是向上的，通过在根节点上再制造一个根节点使得原本的根节点成为它的孩子的方式来扩张，接着分裂原本的根节点即可。</p><p>接下来是具体插入时的操作。在碰到一个节点时，自后向前扫描，这样能够它需要插入新的节点的关键字的时候，能够顺便将后面的直接向后移一位。注意，非叶节点是不可能在插入的时候进行扩张的，当且仅当其子节点扩张的时候，它自身才会进行扩张。</p><h3 id="删除">删除</h3><p>情况一：不是叶节点。</p><ol><li>如果该关键字前的子节点的关键字大于t-1，则将其后继替换本关键字。</li><li>如果该关键字后的子节点的关键字大于t-1，则将其前驱替换本关键字。</li><li>如果前后都小于t，则将其合并，此时合并所得节点的关键字数量会小于2t。</li></ol><p>情况二：是叶节点。删除即可。</p><p>但会出现叶节点的关键字过少的问题。</p><ol><li>如果该叶节点左右有大于t-1的叶节点，则将其后继或前驱上升至父节点，父节点的关键字下降到本节点。</li><li>如果该叶节点左右没有大于t-1的叶节点，则将其余其兄弟合并，此时其父节点的中间关键字需要下放。</li></ol><h2 id="B-树">B+树</h2><p>B+树是B树的变体。</p><ol><li>其内部节点不会存卫星数据及其关键字，所有的数据都会在其子节点可以找到。</li><li>而内部节点中关键字的个数不是n-1个，而是n个，其关键字为其子节点的最大值或者最小值。</li><li>其叶节点之间会存在指针，从较小的叶节点指向较大的叶节点，形成了一个链表。</li></ol><h3 id="优点">优点</h3><ol><li>因为中间节点不会存数据，因此更加矮胖，IO次数更少。</li><li>必须抵达叶节点，更加稳定。</li><li>能够轻松地靠叶节点链表进行范围查询。</li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>c++ concurrency in action</title>
    <link href="/c++%20concurrency%20in%20action/"/>
    <url>/c++%20concurrency%20in%20action/</url>
    
    <content type="html"><![CDATA[<p>使用多线程</p><p>good：分离功能，更容易理解和写；性能提高</p><p>bad：不一定提高性能；难以理解；占用系统资源；多线程的切换也要耗时</p><p>线程实际上也是有自己的一块内存的，join的时候也会清理这一块内存。</p><p>detach后主线程就无法再接触到线程了，但保证它在销毁的时候会清理资源。</p><p>线程函数的参数是直接拷贝的，而非像普通函数调用一样。因此引用的时候要用std::ref()。</p><p>当一个thread本身持有线程的时候，如果用移动拷贝把本身覆盖，那么原本的线程就会析构，也就调用了terminate。</p><p>多线程中应该避免指针和引用的传递使得保护数据不再被保护。</p><p>当需要对成员函数上锁的时候，应该注意他们是否会互相影响，如果会就需要用同一个锁。</p><p>thread_local的即便是在同一段程序被多次使用，但如果对于不同的线程是不一样的，每一个线程都会单独有一个。</p><p>避免持有锁的时候调用外部代码，避免循环lock，按顺序获取锁。</p><p>只有特意去调用shared的函数，才是共享锁，否则都是独占锁，比如lock_guard，因为它调用的是mutex.lock()而非mutex.lock_shared()。</p><p>嵌套锁一般是，比如每个成员函数都会进行上锁，但是某个成员函数可能调用另一个，这就导致会重复上锁。</p><p>由于实际上读的时候也需要上锁，因此，即便函数是const，mutex也需要lock，因此它必须是mutable。</p><p>shared_future本身只能调用一次get，但是它是可以拷贝的，也就可以在不同的对象上分别调用一次get()。</p><p>为了更方便的进行多线程，可以直接不共享数据，要有相同的数据的时候就对数据进行拷贝，比如进行消息传递。</p><p>对于relaxed，每一个原子变量对于每一个线程来说都是相同的顺序，但是快慢不与其他线程同步，其顺序也不与其他原子变量的顺序有任何关系。</p><p>对于acl_rel来说，当一个原子变量acquire到一个release的原子变量，那么就会立即产生一次定序，之后所读取都会读到release前的最后一个或者更后的操作。</p><p>总而言之，acl_rel只能让本线程的顺序让别的线程都知道一样，但不能让不同线程的写入顺序让别的线程知道都一样。而seq_cst就是不同线程的写入顺序也一样。而relaxed就是即便对于同一个线程，别的线程看到的不同原子变量的写入顺序都不一样，只是对于每一个原子操作来说是一样的。</p><p>或者说不是不同原子变量之间的，也可以是原子变量和非原子变量之间的。</p><p>另外，内存序解决的是不同原子变量操作之间的顺序问题，而不同线程之间对于相同原子操作的顺序本身就不是内存序要解决的事情，他们的任意排列本身就是多线程定义内会发生的事情，只要保证他们的原子性，那么他们就是合法的。</p><p>至于栅栏可以理解就是不让前后调整，或者只允许往前或者往后。</p><p>感觉吧多线程会比当线程更加注重异常的问题，因为因为异常导致条件变量无法通知，那我觉得在使用条件变量notify也应该变成RAII的。另外需要注意所有的中间过程，不能让任何中间过程被打断。</p><p>当改造成多线程的时候，有些接口就不适用于多线程，比如队列，pop就应该改为两个，一个try_pop，一个wait_pop等等。而对于迭代器，那在多线程中那更是烂完了，因为这样就能让外部自由访问需要上锁的数据了，因此一般提供for_each之类的迭代函数作为替代。</p><p>但除了上锁实际上还有两种方式实现多线程，一种是无锁结构（更高的并发度，更高的鲁棒性(锁很难保持)，但很耗费cpu且原子变量的操作也很耗时），另一种是<strong>消息传递模型</strong>（不要通过共享内存来通信，而要通过通信来共享内存）。</p><p>写无锁的时候还是慢慢放宽内存序。内存方面无锁也需要注意。</p><p>多线程也可以使用c++的一些内置的，比如std::for_each。而为了避免无限线程的问题(async也会避免这个问题，会控制在最佳的情况），也可以使用线程池。确定当前可以去完成哪些任务分配给线程池，然后等完成后再分配下一波。也可以将完全不同的功能放在不同的线程中，或者直接每个线程是流水线中的某一步。</p><p>但无论如何都要减少多线程对于同一内存位置的竞争。多线程中对于处理数据的划分也很重要，因为缓存的存在。</p><p>jthread实际上还是不够完善，如果线程是在wait的状态，那么request_stop也就没有效果了。有两种方法解决，一种是wait不要永久wait，而是while(){wait(,1ms)}之类的，等一下，然后判断一下stop_token，另一种是让这个mutex是自己设计的，和stop_token进行联动，然后使用cv_any。</p><p>活锁：循环中持续检查（自旋锁）</p><p>关于调试，如果在使用线程池，可以强行让它上限为1，如果这样没有出错，但是不为1的时候出错了，那么就是多线程的问题。</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
